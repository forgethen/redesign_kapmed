{"version":3,"sources":["jquery.inputmask.bundle.js"],"names":["modules","installedModules","__webpack_require__","moduleId","exports","module","i","l","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","_inputmask2","_interopRequireDefault","_inputmask4","_jquery2","obj","default","window","Inputmask","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","iterator","undefined","extendDefinitions","A","validator","casing","&","#","extendAliases","cssunit","regex","url","autoUnmask","ip","mask","definitions","chrs","maskset","pos","strict","opts","buffer","RegExp","test","onUnMask","maskedValue","unmaskedValue","inputmode","email","greedy","onBeforePaste","pastedValue","toLowerCase","replace","*","-","mac","vin","V","clearIncomplete","apply","_typeof","constructor","$","document","ua","navigator","userAgent","ie","indexOf","mobile","isInputEventSupported","iemobile","iphone","alias","options","internal","this","el","events","refreshValue","isPlainObject","extend","defaults","noMasksCache","userOptions","isRTL","numericInput","resolveAlias","aliasStr","aliasDefinition","aliases","generateMaskSet","nocache","generateMask","metadata","regexMask","length","repeat","placeholder","repeatStart","groupmarker","quantifiermarker","masksetDefinition","maskdefKey","split","reverse","join","masksCache","maskToken","analyseMask","validPositions","_buffer","tests","excludes","maskLength","jitOffset","isFunction","isArray","keepStatic","charAt","altMask","each","ndx","msk","alternatormarker","pop","eventName","createElement","evName","isSupported","setAttribute","maskScope","actionObj","undoValue","$el","maxLength","colorMask","originalPlaceholder","inputmask","skipKeyPressEvent","skipInputEvent","ignorable","mouseEnter","getMaskTemplate","baseOnInput","minimalPos","includeMode","noJit","clearOptionalTail","ndxIntlzr","testPos","maskTemplate","getLastValidPosition","getMaskSet","match","optionality","generatedInput","input","skipOptionalPartCharacter","determineTestTemplate","getTests","locator","slice","push","nativeDef","getPlaceholder","getTestTemplate","jitMasking","jit","isFinite","newBlockMarker","fn","def","resetMaskSet","soft","closestTo","before","after","valids","posNdx","psNdx","parseInt","getDecisionTaker","tst","decisionTaker","alternation","toString","getLocator","align","mloc","tstLocator","closest","bestMatch","altTest","getTest","targetLocator","distance","Math","abs","optionalQuantifier","tstPs","positionCanMatchDefinition","valid","tndx","latestMatch","maskTokens","ndxInitializer","matches","insertStop","cacheDependency","resolveTestFromToken","loopNdx","quantifierRecurse","handleMatch","isFirstMatch","tokenGroup","firstMatch","inArray","isQuantifier","resolveNdxInitializer","alternateNdx","targetAlternation","indexPos","lmnt","ndxPos","bestMatchAltIndex","isSubsetOf","source","target","expand","pattern","start","end","expanded","charCodeAt","String","fromCharCode","setMergeLocators","targetMatch","altMatch","locNdx","keys","cd","isGroup","isOptional","optionalToken","mtch","isAlternator","maltMatches","alternateToken","malternateMatches","currentMatches","loopNdxCnt","altIndex","shift","amndx","currentPos","ndxInitializerClone","altIndexArr","altIndexArrClone","splice","unMatchedAlternation","concat","ndx1","dropMatch","ndx2","altMatch2","canMatch","qt","qndx","isNaN","quantifier","max","min","previousPos","mergeLocators","mtndx","getBufferTemplate","getBuffer","noCache","refreshFromBuffer","valResult","isValid","caret","elem","toUpperCase","posBefore","keyCode","SPACE","args","Array","arguments","checkAlternationMatch","altArr1","altArr2","na","naNdx","altArrC","isMatch","naArr","alndx","alternate","fromSetValid","rAltPos","lastAlt","altPos","prevAltPos","validPos","decisionPos","validPsClone","isValidRslt","lAltPos","validInputsClone","staticInputsBeforePos","posOffset","validInputs","targetLvp","fromAlternate","validateOnly","isSelection","posObj","begin","maskPos","_isValid","position","rslt","validatedPos","remove","sort","a","b","revalidateMask","insert","result","positionsClone","preValidation","trackbackPositions","currentPosValid","insertMode","seekNext","isMask","nPos","snPos","isComplete","postValidation","postResult","refresh","originalPos","newPos","fillOnly","ps","vp","cvpInput","validTest","IsEnclosedStatic","selection","posMatch","radixPoint","prevMatch","nextMatch","lvp","isNegative","j","needsValidation","shiftPositions","newBlock","seekPrevious","writeBuffer","caretPos","event","triggerEvents","onBeforeWrite","_valueSet","type","renderColorMask","$input","nptVal","_valueGet","trigger","setTimeout","returnPL","prevTest","staticAlternations","HandleNativePlaceholder","npt","nptValue","removeAttribute","valueBuffer","EventRuler","on","eventHandler","ev","e","that","nodeName","imOpts","data","off","disabled","readOnly","ctrlKey","tabThrough","TAB","preventDefault","returnVal","stopPropagation","form","evArr","EventHandlers","keydownEvent","k","BACKSPACE","DELETE","BACKSPACE_SAFARI","X","handleRemove","END","PAGE_DOWN","shiftKey","HOME","PAGE_UP","undoOnEscape","ESCAPE","altKey","checkVal","INSERT","onKeyDown","ignorables","keypressEvent","checkval","writeOut","which","charCode","metaKey","ENTER","forwardPosition","offset","_radixDance","writeOutBuffer","onKeyValidation","pasteEvent","tempValue","originalEvent","inputValue","valueBeforeCaret","substr","valueAfterCaret","clipboardData","getData","pasteValue","inputFallBackEvent","inputChar","iv","ieMobileHandler","radixPointHandler","frontPart","backPart","frontBufferPart","backBufferPart","entries","isEntry","fpl","entry","keypress","Event","keydown","beforeInputEvent","cancelable","inputType","setValueEvent","detail","onBeforeMask","clearMaskOnLostFocus","focusEvent","showMaskOnFocus","positionCaretOnTab","clickEvent","mouseleaveEvent","activeElement","tabbed","selectedCaret","positionCaretOnClick","clickPos","vps","radixPos","doRadixFocus","clickPosition","lvclickPosition","lastPosition","tt","cutEvent","clipData","setData","execCommand","blurEvent","mouseenterEvent","showMaskOnHover","submitEvent","removeMaskOnSubmit","unmaskedvalue","resetEvent","nptvl","initiatingEvent","charCodes","initialNdx","staticInput","escapeRegex","isTemplateMatch","umValue","pndx","bufferValue","notranslate","translatePosition","range","selectionStart","selectionEnd","getSelection","getRangeAt","commonAncestorContainer","parentNode","startOffset","endOffset","createRange","duplicate","moveStart","text","scrollCalc","ownerDocument","defaultView","getComputedStyle","currentStyle","fontSize","scrollLeft","scrollWidth","firstChild","textNode","createTextNode","appendChild","setStart","setEnd","collapse","sel","removeAllRanges","addRange","createTextRange","moveEnd","select","determineLastRequiredPosition","returnDefinition","bl","positions","lvTest","lvTestAlt","template","complete","lrp","aml","fromIsValid","pend","groupSeparator","initializeColorMask","computedStyle","style","width","textAlign","className","insertBefore","removeChild","left","offsetLeft","clientx","textTransform","letterSpacing","height","visibility","whiteSpace","body","itl","inputText","previousWidth","innerHTML","offsetWidth","offset1","offset2","findCaretPos","clientX","clear","isStatic","setEntry","mtl","getElementsByTagName","positionColorMask","action","elementType","getAttribute","tagName","supportsInputType","isContentEditable","valueGet","valueSet","nullable","setter","__valueGet","noValuePatching","getOwnPropertyDescriptor","getPrototypeOf","__proto__","valueProperty","set","configurable","textContent","__lookupGetter__","__lookupSetter__","__defineGetter__","__defineSetter__","__valueSet","overruleRTL","valHooks","inputmaskpatch","valhookGet","valhookSet","$elem","patchValhook","installNativeValueSetFallback","patchValueProperty","isElementTypeSupported","disablePredictiveText","autocorrect","oncomplete","onincomplete","oncleared","inputEventOnly","initialValue","rl","lmib","maskTarget","mtdt","dataAttribute","optionalmarker","escapeChar","noop","rightAlign","staticDefinitionSymbol","importDataAttributes","9","definitionSymbol","elems","getElementById","querySelectorAll","scopedOpts","option","dataoptions","optionData","attrOptions","importOption","JSON","parse","dir","importAttributeOptions","noremask","getemptymask","hasMaskedValue","getmetadata","format","setValue","openingToken","currentOpeningToken","alternator","lastMatch","tokenizer","regexTokenizer","escaped","currentToken","MaskToken","openenings","openGroup","alternatorGroup","insertTestDefinition","mtoken","element","maskdef","defaultCase","mndx","groupify","groupToken","exec","mqj","mq","mq0","mq1","tmpMatch","groupQuantifier","subToken","verifyGroupMarker","token","nextToken","reverseTokens","intMatch","st","extendDefaults","definition","unmask","str","DOWN","LEFT","RIGHT","UP","CONTROL","dependencyLib","jQuery","eval","formatCode","Date","setDate","getDate","dd","pad","ddd","dddd","setMonth","getMonth","mm","mmm","mmmm","yy","setFullYear","getFullYear","yyyy","h","setHours","getHours","hh","hhh","H","HH","HHH","M","setMinutes","getMinutes","MM","ss","setSeconds","getSeconds","setMilliseconds","getMilliseconds","L","T","TT","Z","S","formatAlias","isoDate","isoTime","isoDateTime","isoUtcDateTime","getTokenizer","tokens","dateObjValue","raw","getFn","date","val","len","maskString","targetProp","dateOperation","dateObj","extendProperty","correctedValue","enteredPart","datetime","i18n","ordinalSuffix","inputFormat","displayFormat","outputFormat","dayNames","monthNames","currentResult","dateParts","getTime","rawday","day","rawyear","rawmonth","month","isValidDate","rawYear","minYear","year","isDateInRange","today","getYear","autoEscape","txt","escapedTxt","numeric","integerDigits","digits","autoGroup","groupSize","seps","floor","mod","integerOptional","digitsOptional","decimalProtect","prefix","radixDef","dq","suffix","enforceDigitsOnBlur","allowMinus","negationSymbol","front","back","step","unmaskAsNumber","dopost","charAtPos","processValue","radixPosition","rpb","addRadix","postMask","radixSplit","buildPostMask","cardinality","newCaretPos","unmasked","parseMinMaxOptions","parseFloat","NaN","Number","MIN_VALUE","MAX_VALUE","integerPart","emptyCheck","integerNPart","~","pvRadixSplit","bufferTemplate","+",":","radix","valueParts","decimalPart","digitsFactor","pow","round","substring","alignDigits","currency","decimal","integer","percentage","nptmask"],"mappings":"CAQA,SAAUA,GACN,IAAIC,EAAmB,GACvB,SAASC,EAAoBC,GACzB,GAAIF,EAAiBE,GACjB,OAAOF,EAAiBE,GAAUC,QAEtC,IAAIC,EAASJ,EAAiBE,GAAY,CACtCG,EAAGH,EACHI,GAAG,EACHH,QAAS,IAIb,OAFAJ,EAAQG,GAAUK,KAAKH,EAAOD,QAASC,EAAQA,EAAOD,QAASF,GAC/DG,EAAOE,GAAI,EACJF,EAAOD,QAElBF,EAAoBO,EAAIT,EACxBE,EAAoBQ,EAAIT,EACxBC,EAAoBS,EAAI,SAASP,EAASQ,EAAMC,GACvCX,EAAoBY,EAAEV,EAASQ,IAChCG,OAAOC,eAAeZ,EAASQ,EAAM,CACjCK,YAAY,EACZC,IAAKL,KAIjBX,EAAoBiB,EAAI,SAASf,GACP,oBAAXgB,QAA0BA,OAAOC,aACxCN,OAAOC,eAAeZ,EAASgB,OAAOC,YAAa,CAC/CC,MAAO,WAGfP,OAAOC,eAAeZ,EAAS,aAAc,CACzCkB,OAAO,KAGfpB,EAAoBqB,EAAI,SAASD,EAAOE,GAEpC,GADW,EAAPA,IAAUF,EAAQpB,EAAoBoB,IAC/B,EAAPE,EAAU,OAAOF,EACrB,GAAW,EAAPE,GAA6B,iBAAVF,GAAsBA,GAASA,EAAMG,WAAY,OAAOH,EAC/E,IAAII,EAAKX,OAAOY,OAAO,MAMvB,GALAzB,EAAoBiB,EAAEO,GACtBX,OAAOC,eAAeU,EAAI,UAAW,CACjCT,YAAY,EACZK,MAAOA,IAEA,EAAPE,GAA4B,iBAATF,EAAmB,IAAK,IAAIM,KAAON,EAAOpB,EAAoBS,EAAEe,EAAIE,EAAK,SAASA,GACrG,OAAON,EAAMM,IACfC,KAAK,KAAMD,IACb,OAAOF,GAEXxB,EAAoB4B,EAAI,SAASzB,GAC7B,IAAIQ,EAASR,GAAUA,EAAOoB,WAAa,WACvC,OAAOpB,EAAgB,SACvB,WACA,OAAOA,GAGX,OADAH,EAAoBS,EAAEE,EAAQ,IAAKA,GAC5BA,GAEXX,EAAoBY,EAAI,SAASiB,EAAQC,GACrC,OAAOjB,OAAOkB,UAAUC,eAAe1B,KAAKuB,EAAQC,IAExD9B,EAAoBiC,EAAI,GACjBjC,EAAoBA,EAAoBkC,EAAI,GA/DvD,CAgEG,CAAE,SAAS/B,EAAQD,EAASF,GAC3B,aACAA,EAAoB,GACpBA,EAAoB,GACpBA,EAAoB,GACpB,IACImC,EAAcC,EADDpC,EAAoB,IAGjCqC,EAAcD,EADApC,EAAoB,IAGlCsC,EAAWF,EADDpC,EAAoB,IAElC,SAASoC,EAAuBG,GAC5B,OAAOA,GAAOA,EAAIhB,WAAagB,EAAM,CACjCC,QAASD,GAGbF,EAAYG,UAAYF,EAASE,SACjCxC,EAAoB,GAExByC,OAAOC,UAAYP,EAAYK,SAChC,SAASrC,EAAQD,EAASF,GACzB,aACA,IAAI2C,EAAgCC,EAA8BC,EAClC,mBAAX3B,QAAgCA,OAAO4B,SAOlDF,EAA+B,CAAE5C,EAAoB,SAErB+C,KADlCF,EAA0E,mBADbF,EAIlE,SAASD,GA+ER,OA9EAA,EAAUM,kBAAkB,CACxBC,EAAG,CACCC,UAAW,oBACXC,OAAQ,SAEZC,IAAK,CACDF,UAAW,uBACXC,OAAQ,SAEZE,IAAK,CACDH,UAAW,cACXC,OAAQ,WAGhBT,EAAUY,cAAc,CACpBC,QAAS,CACLC,MAAO,2DAEXC,IAAK,CACDD,MAAO,mBACPE,YAAY,GAEhBC,GAAI,CACAC,KAAM,kCACNC,YAAa,CACTzD,EAAG,CACC8C,UAAW,SAAmBY,EAAMC,EAASC,EAAKC,EAAQC,GAOtD,OANIF,EAAM,GAAK,GAAiC,MAA5BD,EAAQI,OAAOH,EAAM,IACrCF,EAAOC,EAAQI,OAAOH,EAAM,GAAKF,EAE7BA,EADAE,EAAM,GAAK,GAAiC,MAA5BD,EAAQI,OAAOH,EAAM,GAC9BD,EAAQI,OAAOH,EAAM,GAAKF,EACvB,IAAMA,GACjBA,EAAO,KAAOA,EACd,IAAIM,OAAO,sCAAsCC,KAAKP,MAIzEQ,SAAU,SAAkBC,EAAaC,EAAeN,GACpD,OAAOK,GAEXE,UAAW,WAEfC,MAAO,CACHd,KAAM,4EACNe,QAAQ,EACRxB,OAAQ,QACRyB,cAAe,SAAuBC,EAAaX,GAE/C,OADAW,EAAcA,EAAYC,eACPC,QAAQ,UAAW,KAE1ClB,YAAa,CACTmB,IAAK,CACD9B,UAAW,8CAEf+B,IAAK,CACD/B,UAAW,iBAGnBoB,SAAU,SAAkBC,EAAaC,EAAeN,GACpD,OAAOK,GAEXE,UAAW,SAEfS,IAAK,CACDtB,KAAM,qBAEVuB,IAAK,CACDvB,KAAM,YACNC,YAAa,CACTuB,EAAG,CACClC,UAAW,4BACXC,OAAQ,UAGhBkC,iBAAiB,EACjB3B,YAAY,KAGbhB,IAlFoFC,EAA+B2C,MAAMpF,EAAS0C,GAAgCD,KACrHxC,EAAOD,QAAU2C,IAmF1E,SAAS1C,EAAQD,EAASF,GACzB,aACA,IAAI2C,EAAgCC,EAA8BC,EAC9D0C,EAA4B,mBAAXrE,QAAoD,iBAApBA,OAAO4B,SAAwB,SAASP,GACzF,cAAcA,GACd,SAASA,GACT,OAAOA,GAAyB,mBAAXrB,QAAyBqB,EAAIiD,cAAgBtE,QAAUqB,IAAQrB,OAAOa,UAAY,gBAAkBQ,GAInHK,EAA+B,CAAE5C,EAAoB,GAAIA,EAAoB,SAE7C+C,KADQF,EAA0E,mBAApHF,EAGL,SAAS8C,EAAGhD,EAAQM,GACnB,IAAI2C,EAAWjD,EAAOiD,SAAUC,EAAKC,UAAUC,UAAWC,EAAKH,EAAGI,QAAQ,SAAW,GAAKJ,EAAGI,QAAQ,YAAc,EAAGC,EAASC,EAAsB,cAAeC,EAAW,YAAY7B,KAAKsB,GAAKQ,EAAS,UAAU9B,KAAKsB,KAAQO,EACrO,SAASxD,EAAU0D,EAAOC,EAASC,GAC/B,KAAMC,gBAAgB7D,GAClB,OAAO,IAAIA,EAAU0D,EAAOC,EAASC,GAEzCC,KAAKC,GAAKzD,EACVwD,KAAKE,OAAS,GACdF,KAAKxC,QAAUhB,EACfwD,KAAKG,cAAe,GACH,IAAbJ,IACIb,EAAEkB,cAAcP,GAChBC,EAAUD,GAEVC,EAAUA,GAAW,GACjBD,IAAOC,EAAQD,MAAQA,IAE/BG,KAAKrC,KAAOuB,EAAEmB,QAAO,EAAM,GAAIL,KAAKM,SAAUR,GAC9CE,KAAKO,aAAeT,GAAWA,EAAQxC,cAAgBd,EACvDwD,KAAKQ,YAAcV,GAAW,GAC9BE,KAAKS,MAAQT,KAAKrC,KAAK+C,aACvBC,EAAaX,KAAKrC,KAAKkC,MAAOC,EAASE,KAAKrC,OAilBpD,SAASgD,EAAaC,EAAUd,EAASnC,GACrC,IAAIkD,EAAkB1E,EAAUX,UAAUsF,QAAQF,GAClD,OAAIC,GACIA,EAAgBhB,OAAOc,EAAaE,EAAgBhB,MAAOrD,EAAWmB,GAC1EuB,EAAEmB,QAAO,EAAM1C,EAAMkD,GACrB3B,EAAEmB,QAAO,EAAM1C,EAAMmC,IACd,IACc,OAAdnC,EAAKN,OACZM,EAAKN,KAAOuD,IAET,GAEX,SAASG,EAAgBpD,EAAMqD,GAC3B,SAASC,EAAa5D,EAAM6D,EAAUvD,GAClC,IAAIwD,GAAY,EAchB,GAba,OAAT9D,GAA0B,KAATA,KACjB8D,EAA2B,OAAfxD,EAAKV,OAGbI,GADAA,EAAOM,EAAKV,OACAuB,QAAQ,iBAAkB,OAEtC2C,GAAY,EACZ9D,EAAO,OAGK,IAAhBA,EAAK+D,SAAgC,IAAhBzD,EAAKS,QAAoC,IAAhBT,EAAK0D,SACnD1D,EAAK2D,YAAc,IAEnB3D,EAAK0D,OAAS,GAAqB,MAAhB1D,EAAK0D,QAAkC,MAAhB1D,EAAK0D,OAAgB,CAC/D,IAAIE,EAA8B,MAAhB5D,EAAK0D,OAAiB,EAAoB,MAAhB1D,EAAK0D,OAAiB,EAAI1D,EAAK0D,OAC3EhE,EAAOM,EAAK6D,YAAY,GAAKnE,EAAOM,EAAK6D,YAAY,GAAK7D,EAAK8D,iBAAiB,GAAKF,EAAc,IAAM5D,EAAK0D,OAAS1D,EAAK8D,iBAAiB,GAEjJ,IAAIC,EAAmBC,EAAaR,EAAY,SAAWxD,EAAKV,MAAQU,EAAK+C,aAAerD,EAAKuE,MAAM,IAAIC,UAAUC,KAAK,IAAMzE,EAmBhI,OAlBIlB,EAAUX,UAAUuG,WAAWJ,KAAgBnF,IAAyB,IAAZwE,GAC5DU,EAAoB,CAChBrE,KAAMA,EACN2E,UAAW7F,EAAUX,UAAUyG,YAAY5E,EAAM8D,EAAWxD,GAC5DuE,eAAgB,GAChBC,QAAS3F,EACToB,OAAQpB,EACR4F,MAAO,GACPC,SAAU,GACVnB,SAAUA,EACVoB,WAAY9F,EACZ+F,UAAW,KAEC,IAAZvB,IACA7E,EAAUX,UAAUuG,WAAWJ,GAAcD,EAC7CA,EAAoBxC,EAAEmB,QAAO,EAAM,GAAIlE,EAAUX,UAAUuG,WAAWJ,MAEvED,EAAoBxC,EAAEmB,QAAO,EAAM,GAAIlE,EAAUX,UAAUuG,WAAWJ,IACtED,EAMX,GAHIxC,EAAEsD,WAAW7E,EAAKN,QAClBM,EAAKN,KAAOM,EAAKN,KAAKM,IAEtBuB,EAAEuD,QAAQ9E,EAAKN,MAAO,CACtB,GAAIM,EAAKN,KAAK+D,OAAS,EAAG,CACtB,GAAwB,OAApBzD,EAAK+E,WAAqB,CAC1B/E,EAAK+E,WAAa,OAClB,IAAK,IAAI7I,EAAI,EAAGA,EAAI8D,EAAKN,KAAK+D,OAAQvH,IAClC,GAAI8D,EAAKN,KAAKxD,GAAG8I,OAAO,KAAOhF,EAAKN,KAAK,GAAGsF,OAAO,GAAI,CACnDhF,EAAK+E,YAAa,EAClB,OAIZ,IAAIE,EAAUjF,EAAK6D,YAAY,GAY/B,OAXAtC,EAAE2D,KAAKlF,EAAK8C,MAAQ9C,EAAKN,KAAKwE,UAAYlE,EAAKN,KAAM,SAASyF,EAAKC,GAC3DH,EAAQxB,OAAS,IACjBwB,GAAWjF,EAAK6D,YAAY,GAAK7D,EAAKqF,iBAAmBrF,EAAK6D,YAAY,IAE1EuB,EAAI1F,OAASb,GAAc0C,EAAEsD,WAAWO,EAAI1F,MAG5CuF,GAAWG,EAFXH,GAAWG,EAAI1F,OAMhB4D,EADP2B,GAAWjF,EAAK6D,YAAY,GACC7D,EAAKN,KAAMM,GACrCA,EAAKN,KAAOM,EAAKN,KAAK4F,MAOjC,OALItF,EAAKN,MAAQM,EAAKN,KAAKA,OAASb,IAAc0C,EAAEsD,WAAW7E,EAAKN,KAAKA,MAChE4D,EAAatD,EAAKN,KAAKA,KAAMM,EAAKN,KAAMM,GAExCsD,EAAatD,EAAKN,KAAMM,EAAKN,KAAMM,GAIhD,SAAS+B,EAAsBwD,GAC3B,IAAIjD,EAAKd,EAASgE,cAAc,SAAUC,EAAS,KAAOF,EAAWG,EAAcD,KAAUnD,EAM7F,OALKoD,IACDpD,EAAGqD,aAAaF,EAAQ,WACxBC,EAAoC,mBAAfpD,EAAGmD,IAE5BnD,EAAK,KACEoD,EAEX,SAASE,EAAUC,EAAWhG,EAASG,GACnCH,EAAUA,GAAWwC,KAAKxC,QAC1BG,EAAOA,GAAQqC,KAAKrC,KACpB,IAAwD8F,EAAWC,EAA2EC,EAA+BC,EAAWC,EAApLC,EAAY9D,KAAMC,EAAKD,KAAKC,GAAIQ,EAAQT,KAAKS,MAAuBsD,GAAoB,EAAOC,GAAiB,EAAOC,GAAY,EAAkBC,GAAa,EAClKC,EAAkB,SAAyBC,EAAaC,EAAYC,EAAaC,EAAOC,GACxF,IAAIpG,EAAST,EAAKS,OACdoG,IAAmB7G,EAAKS,QAAS,GACrCiG,EAAaA,GAAc,EAC3B,IAAuBI,EAAoB3G,EAAM4G,EAA7CC,EAAe,GAAelH,EAAM,EAAwBmH,IAChE,EAAG,CACC,IAAoB,IAAhBR,GAAwBS,IAAa3C,eAAezE,GACpDiH,EAAUF,IAA4E,IAAvDK,IAAa3C,eAAezE,GAAKqH,MAAMC,aAAwBF,IAAa3C,eAAezE,EAAM,KAAOjB,KAAkE,IAApDqI,IAAa3C,eAAezE,GAAKuH,gBAA2BH,IAAa3C,eAAezE,GAAKwH,OAAStH,EAAKuH,2BAA6BzH,EAAM,GAAK0H,EAAsB1H,EAAK2H,EAAS3H,EAAKgH,EAAWhH,EAAM,IAAMoH,IAAa3C,eAAezE,GACpYK,EAAO4G,EAAQI,MACfL,EAAYC,EAAQW,QAAQC,QAC5BX,EAAaY,MAAqB,IAAhBjB,EAAuBI,EAAQO,OAAwB,IAAhBX,EAAwBxG,EAAK0H,UAAYC,EAAehI,EAAKK,QACnH,CACH4G,EAAUgB,EAAgBjI,EAAKgH,EAAWhH,EAAM,GAChDK,EAAO4G,EAAQI,MACfL,EAAYC,EAAQW,QAAQC,QAC5B,IAAIK,GAAuB,IAAVpB,KAA6C,IAApB5G,EAAKgI,WAAuBhI,EAAKgI,WAAa7H,EAAK8H,OAC1E,IAAfD,GAAwBA,IAAenJ,GAAmC,iBAAfmJ,GAA2BE,SAASF,IAAeA,EAAalI,IAC3HkH,EAAaY,MAAqB,IAAhBjB,EAAwBxG,EAAK0H,UAAYC,EAAehI,EAAKK,IAG/D,SAApBH,EAAK+E,YACD5E,EAAKgI,gBAA8B,OAAZhI,EAAKiI,KAC5BpI,EAAK+E,WAAajF,EAAM,GAGhCA,WACMkG,IAAcnH,GAAaiB,EAAMkG,KAA2B,OAAZ7F,EAAKiI,IAA4B,KAAbjI,EAAKkI,MAAe3B,EAAa5G,GAM/G,MAL8C,KAA1CkH,EAAaA,EAAavD,OAAS,IACnCuD,EAAa1B,OAEG,IAAhBqB,GAAyBO,IAAavC,aAAe9F,IAAWqI,IAAavC,WAAa7E,EAAM,GACpGE,EAAKS,OAASA,EACPuG,GAEX,SAASE,IACL,OAAOrH,EAEX,SAASyI,EAAaC,GAClB,IAAI1I,EAAUqH,IACdrH,EAAQI,OAASpB,GACJ,IAAT0J,IACA1I,EAAQ0E,eAAiB,GACzB1E,EAAQ9B,EAAI,GAGpB,SAASkJ,EAAqBuB,EAAWzI,EAAQwE,GAC7C,IAAIkE,GAAU,EAAGC,GAAS,EAAGC,EAASpE,GAAkB2C,IAAa3C,eAErE,IAAK,IAAIqE,KADLJ,IAAc3J,IAAW2J,GAAa,GACvBG,EAAQ,CACvB,IAAIE,EAAQC,SAASF,GACjBD,EAAOE,KAAW9I,IAA2C,IAAjC4I,EAAOE,GAAOxB,kBACtCwB,GAASL,IAAWC,EAASI,GAC7BA,GAASL,IAAWE,EAAQG,IAGxC,OAAmB,IAAZJ,GAAiBA,GAAUD,EAAYE,GAAkB,GAAVA,EAAcD,EAASD,EAAYC,EAASC,EAAQF,EAAYC,EAASC,EAEnI,SAASK,EAAiBC,GACtB,IAAIC,EAAgBD,EAAItB,QAAQsB,EAAIE,aAIpC,MAH4B,iBAAjBD,GAA6BA,EAAcxF,OAAS,IAC3DwF,EAAgBA,EAAchF,MAAM,KAAK,IAEtCgF,IAAkBpK,EAAYoK,EAAcE,WAAa,GAEpE,SAASC,EAAWJ,EAAKK,GACrB,IAAI3B,GAAWsB,EAAIE,aAAerK,EAAYmK,EAAIM,KAAKP,EAAiBC,IAAQA,EAAItB,SAASvD,KAAK,IAClG,GAAgB,KAAZuD,EAAgB,KAAOA,EAAQjE,OAAS4F,GACxC3B,GAAW,IAEf,OAAOA,EAEX,SAASF,EAAsB1H,EAAK2E,GAGhC,IADA,IAAiE8E,EAAYC,EAASC,EAAlFC,EAAUC,EADd7J,EAAMA,EAAM,EAAIA,EAAM,EAAI,GACE8J,EAAgBR,EAAWM,GAC9CvE,EAAM,EAAGA,EAAMV,EAAMhB,OAAQ0B,IAAO,CACzC,IAAI6D,EAAMvE,EAAMU,GAChBoE,EAAaH,EAAWJ,EAAKY,EAAcnG,QAC3C,IAAIoG,EAAWC,KAAKC,IAAIR,EAAaK,IACjCJ,IAAY3K,GAA4B,KAAf0K,GAAqBM,EAAWL,GAAWC,IAAczJ,EAAKS,QAAUgJ,EAAUtC,MAAMC,aAAkD,WAAnCqC,EAAUtC,MAAMgB,kBAAiCa,EAAI7B,MAAMC,cAAgB4B,EAAI7B,MAAMgB,iBAAmBsB,GAAaA,EAAUtC,MAAM6C,qBAAuBhB,EAAI7B,MAAM6C,sBACtSR,EAAUK,EACVJ,EAAYT,GAGpB,OAAOS,EAEX,SAAS1B,EAAgBjI,EAAKgH,EAAWmD,GACrC,OAAO/C,IAAa3C,eAAezE,IAAQ0H,EAAsB1H,EAAK2H,EAAS3H,EAAKgH,EAAYA,EAAUa,QAAUb,EAAWmD,IAEnI,SAASN,EAAQ7J,EAAK2E,GAClB,OAAIyC,IAAa3C,eAAezE,GACrBoH,IAAa3C,eAAezE,IAE/B2E,GAASgD,EAAS3H,IAAM,GAEpC,SAASoK,EAA2BpK,EAAKuI,GAErC,IADA,IAAI8B,GAAQ,EAAO1F,EAAQgD,EAAS3H,GAC3BsK,EAAO,EAAGA,EAAO3F,EAAMhB,OAAQ2G,IACpC,GAAI3F,EAAM2F,GAAMjD,OAAS1C,EAAM2F,GAAMjD,MAAMkB,MAAQA,EAAK,CACpD8B,GAAQ,EACR,MAGR,OAAOA,EAEX,SAAS1C,EAAS3H,EAAKgH,EAAWmD,GAC9B,IAAoKI,EAAhKC,EAAapD,IAAa7C,UAAW0C,EAAUD,EAAYmD,EAAQ,EAAGM,EAAiBzD,EAAYA,EAAUa,QAAU,CAAE,GAAK6C,EAAU,GAAIC,GAAa,EAAoBC,EAAkB5D,EAAYA,EAAU3C,KAAK,IAAM,GACpO,SAASwG,EAAqBtG,EAAWkG,EAAgBK,EAASC,GAC9D,SAASC,EAAY3D,EAAOyD,EAASC,GACjC,SAASE,EAAaV,EAAaW,GAC/B,IAAIC,EAA4D,IAA/C1J,EAAE2J,QAAQb,EAAaW,EAAWR,SAOnD,OANKS,GACD1J,EAAE2D,KAAK8F,EAAWR,QAAS,SAASrF,EAAKgC,GAErC,IAD2B,IAAvBA,EAAMgE,aAAuBF,EAAaF,EAAaV,EAAaW,EAAWR,QAAQrF,EAAM,IAAcgC,EAAMrJ,eAAe,aAAYmN,EAAaF,EAAaV,EAAalD,IACnL8D,EAAY,OAAO,IAGxBA,EAEX,SAASG,EAAsBtL,EAAKuL,EAAcC,GAC9C,IAAI7B,EAAW8B,EAcf,IAbIrE,IAAazC,MAAM3E,IAAQoH,IAAa3C,eAAezE,KACvDyB,EAAE2D,KAAKgC,IAAazC,MAAM3E,IAAQ,CAAEoH,IAAa3C,eAAezE,IAAQ,SAASqF,EAAKqG,GAClF,GAAIA,EAAKlC,KAAK+B,GAEV,OADA5B,EAAY+B,GACL,EAEX,IAAItC,EAAcoC,IAAsBzM,EAAYyM,EAAoBE,EAAKtC,YAAauC,EAASD,EAAK9D,QAAQwB,KAAiBrK,EAAY2M,EAAK9D,QAAQwB,GAAaC,WAAWtH,QAAQwJ,IAAiB,GACtME,IAAa1M,GAAa4M,EAASF,KAAyB,IAAZE,IACjDhC,EAAY+B,EACZD,EAAWE,KAInBhC,EAAW,CACX,IAAIiC,EAAoBjC,EAAU/B,QAAQ+B,EAAUP,aAChDxB,EAAU+B,EAAUH,KAAK+B,IAAiB5B,EAAUH,KAAKoC,IAAsBjC,EAAU/B,QAC7F,OAAOA,EAAQC,OAAO2D,IAAsBzM,EAAYyM,EAAoB7B,EAAUP,aAAe,GAErG,OAAOoC,IAAsBzM,EAAYuM,EAAsBtL,EAAKuL,GAAgBxM,EAG5F,SAAS8M,EAAWC,EAAQC,GACxB,SAASC,EAAOC,GAEZ,IADA,IAAmBC,EAAOC,EAAtBC,EAAW,GACNhQ,EAAI,EAAGC,EAAI4P,EAAQtI,OAAQvH,EAAIC,EAAGD,IACvC,GAA0B,MAAtB6P,EAAQ/G,OAAO9I,GAEf,IADA+P,EAAMF,EAAQI,WAAWjQ,EAAI,KACpB8P,EAAQC,GACbC,EAAStE,KAAKwE,OAAOC,aAAaL,SAGtCA,EAAQD,EAAQI,WAAWjQ,GAC3BgQ,EAAStE,KAAKmE,EAAQ/G,OAAO9I,IAGrC,OAAOgQ,EAAS/H,KAAK,IAEzB,OAAInE,EAAKV,OAA6B,OAApBsM,EAAOzE,MAAMiB,IAAmC,OAApByD,EAAO1E,MAAMiB,IAC8D,IAA9G0D,EAAOD,EAAO1E,MAAMkB,IAAIxH,QAAQ,UAAW,KAAKgB,QAAQiK,EAAOF,EAAOzE,MAAMkB,IAAIxH,QAAQ,UAAW,MAEvG+K,EAAOzE,MAAMkB,MAAQwD,EAAO1E,MAAMU,UAO7C,SAASyE,EAAiBC,EAAaC,GACnC,GAAIA,IAAa3N,GAAa0N,EAAYrD,cAAgBsD,EAAStD,cAA4H,IAA7GqD,EAAY7E,QAAQ6E,EAAYrD,aAAaC,WAAWtH,QAAQ2K,EAAS9E,QAAQ8E,EAAStD,cAAsB,CAC9LqD,EAAYjD,KAAOiD,EAAYjD,MAAQ,GACvC,IAAImD,EAASF,EAAY7E,QAAQ6E,EAAYrD,aAC7C,GAAIuD,IAAW5N,EAAqD,CAGhE,GAFsB,iBAAX4N,IAAqBA,EAASA,EAAOxI,MAAM,KAAK,IACvDsI,EAAYjD,KAAKmD,KAAY5N,IAAW0N,EAAYjD,KAAKmD,GAAUF,EAAY7E,QAAQC,SACvF6E,IAAa3N,EAAW,CACxB,IAAK,IAAIsG,KAAOqH,EAASlD,KACF,iBAARnE,IAAkBA,EAAMA,EAAIlB,MAAM,KAAK,IAC9CsI,EAAYjD,KAAKnE,KAAStG,IAAW0N,EAAYjD,KAAKnE,GAAOqH,EAASlD,KAAKnE,IAEnFoH,EAAY7E,QAAQ6E,EAAYrD,aAAevM,OAAO+P,KAAKH,EAAYjD,MAAMnF,KAAK,KAEtF,OAAO,EAVeoI,EAAYrD,YAAcrK,EAaxD,OAAO,EAEX,GAAIkI,EAAU,KAAO8D,IAAsBhM,EACvC,KAAM,sJAAwJqI,IAAaxH,KAE/K,GAAIqH,IAAYjH,GAAOqH,EAAMqD,UAAY3L,EAOrC,OANA2L,EAAQ5C,KAAK,CACTT,MAAOA,EACPO,QAASkD,EAAQ1G,UACjByI,GAAIjC,EACJpB,KAAM,MAEH,EACJ,GAAInC,EAAMqD,UAAY3L,GACzB,GAAIsI,EAAMyF,SAAW/B,IAAsB1D,GAEvC,GADAA,EAAQ2D,EAAYzG,EAAUmG,QAAQjJ,EAAE2J,QAAQ/D,EAAO9C,EAAUmG,SAAW,GAAII,EAASC,GAC9E,OAAO,OACf,GAAI1D,EAAM0F,WAAY,CACzB,IAAIC,EAAgB3F,EAEpB,GADAA,EAAQwD,EAAqBxD,EAAOoD,EAAgBK,EAASC,GAClD,CAKP,GAJAtJ,EAAE2D,KAAKsF,EAAS,SAASrF,EAAK4H,GAC1BA,EAAK5F,MAAMC,aAAc,IAE7BiD,EAAcG,EAAQA,EAAQ/G,OAAS,GAAG0D,MACtC0D,IAAsBhM,IAAakM,EAAaV,EAAayC,GAG1D,OAAO,EAFVrC,GAAa,EACb1D,EAAUjH,QAGf,GAAIqH,EAAM6F,aAAc,CAC3B,IAAoDC,EAAhDC,EAAiB/F,EAAOgG,EAAoB,GAAiBC,EAAiB5C,EAAQ7C,QAAS0F,EAAazC,EAAQnH,OACpH6J,EAAW/C,EAAe9G,OAAS,EAAI8G,EAAegD,SAAW,EACrE,IAAkB,IAAdD,GAAuC,iBAAbA,EAAuB,CACjD,IAA0FE,EAAtFC,EAAa1G,EAAS2G,EAAsBnD,EAAe5C,QAASgG,EAAc,GACtF,GAAuB,iBAAZL,EACPK,EAAcL,EAASrJ,MAAM,UAE7B,IAAKuJ,EAAQ,EAAGA,EAAQN,EAAe1C,QAAQ/G,OAAQ+J,IACnDG,EAAY/F,KAAK4F,EAAMrE,YAG/B,GAAIjC,IAAaxC,SAAS5E,GAAM,CAE5B,IADA,IAAI8N,EAAmBD,EAAYhG,QAC1BzL,EAAI,EAAGoG,EAAK4E,IAAaxC,SAAS5E,GAAK2D,OAAQvH,EAAIoG,EAAIpG,IAC5DyR,EAAYE,OAAOF,EAAY9L,QAAQqF,IAAaxC,SAAS5E,GAAK5D,GAAGiN,YAAa,GAE3D,IAAvBwE,EAAYlK,SACZyD,IAAaxC,SAAS5E,GAAOjB,EAC7B8O,EAAcC,KAGE,IAApB5N,EAAK+E,YAAuBmD,SAASY,SAAS9I,EAAK+E,cAAgB0I,GAAczN,EAAK+E,cAAY4I,EAAcA,EAAYhG,MAAM,EAAG,IAEzI,IADA,IAAImG,GAAuB,EAClB3I,EAAM,EAAGA,EAAMwI,EAAYlK,OAAQ0B,IAAO,CAC/CqI,EAAQ1E,SAAS6E,EAAYxI,IAC7BqF,EAAU,GACVD,EAAqC,iBAAb+C,GAAwBlC,EAAsBrE,EAASyG,EAAOH,IAA6CK,EAAoB/F,QACnJuF,EAAe1C,QAAQgD,IAAU1C,EAAYoC,EAAe1C,QAAQgD,GAAQ,CAAEA,GAAQO,OAAOnD,GAAUC,GAAoB1D,GAAQ,EAAuB,IAARhC,IAClJ2I,GAAuB,GAE3Bb,EAAczC,EAAQ7C,QACtBZ,EAAU0G,EACVjD,EAAU,GACV,IAAK,IAAIwD,EAAO,EAAGA,EAAOf,EAAYxJ,OAAQuK,IAAQ,CAClD,IAAIxB,EAAWS,EAAYe,GAAOC,GAAY,EAC9CzB,EAASrF,MAAMc,IAAMuE,EAASrF,MAAMc,KAAO6F,EAC3CtB,EAAStD,YAAcsD,EAAStD,aAAemE,EAC/Cf,EAAiBE,GACjB,IAAK,IAAI0B,EAAO,EAAGA,EAAOf,EAAkB1J,OAAQyK,IAAQ,CACxD,IAAIC,EAAYhB,EAAkBe,GAClC,GAAwB,iBAAbZ,GAAyBd,EAAStD,cAAgBrK,IAA4F,IAA/E0C,EAAE2J,QAAQsB,EAAS9E,QAAQ8E,EAAStD,aAAaC,WAAYwE,GAAqB,CACxJ,GAAInB,EAASrF,MAAMU,YAAcsG,EAAUhH,MAAMU,UAAW,CACxDoG,GAAY,EACZ3B,EAAiB6B,EAAW3B,GAC5B,MACG,GAAIb,EAAWa,EAAU2B,GAAY,CACpC7B,EAAiBE,EAAU2B,KAC3BF,GAAY,EACZd,EAAkBU,OAAOV,EAAkBtL,QAAQsM,GAAY,EAAG3B,IAEtE,MACG,GAAIb,EAAWwC,EAAW3B,GAAW,CACxCF,EAAiB6B,EAAW3B,GAC5B,MACG,GA3GDZ,EA2G8BY,EA3GtBX,EA2GgCsC,OA1GkDC,OAD1FxC,EA2G8BY,GA1G1C9E,QAAQC,MAAMiE,EAAO1C,aAAa/E,KAAK,KAAY0H,EAAOnE,QAAQC,MAAMkE,EAAO3C,aAAa/E,KAAK,MACxE,OAApByH,EAAOzE,MAAMiB,IAAmC,OAApByD,EAAO1E,MAAMiB,KAAcyD,EAAO1E,MAAMiB,GAAGjI,KAAKyL,EAAOzE,MAAMkB,IAAKnB,IAAcpH,GAAK,EAAOE,GAAM,GAyGnE,CAClDsM,EAAiBE,EAAU2B,KAC3BF,GAAY,EACZd,EAAkBU,OAAOV,EAAkBtL,QAAQsM,GAAY,EAAG3B,IAEtE,QAIPyB,GACDd,EAAkBvF,KAAK4E,IAInChC,EAAU4C,EAAeW,OAAOZ,GAChCpG,EAAUjH,EACV2K,EAAaD,EAAQ/G,OAAS,EAC9B0D,EAAQgG,EAAkB1J,OAAS,EACnC8G,EAAiBmD,EAAoB/F,aAClCR,EAAQ2D,EAAYoC,EAAe1C,QAAQ8C,IAAajJ,EAAUmG,QAAQ8C,GAAW,CAAEA,GAAWS,OAAOnD,GAAUC,GAC1H,GAAI1D,EAAO,OAAO,OACf,GAAIA,EAAMgE,cAAgBN,IAAsBxG,EAAUmG,QAAQjJ,EAAE2J,QAAQ/D,EAAO9C,EAAUmG,SAAW,GAE3G,IADA,IAAI6D,EAAKlH,EACAmH,EAAO/D,EAAe9G,OAAS,EAAI8G,EAAegD,QAAU,EAAGe,GAAQC,MAAMF,EAAGG,WAAWC,KAAOH,EAAO,EAAID,EAAGG,WAAWC,MAAQ1H,GAAWjH,EAAKwO,IAAQ,CAChK,IAAItD,EAAa3G,EAAUmG,QAAQjJ,EAAE2J,QAAQmD,EAAIhK,EAAUmG,SAAW,GAEtE,GADArD,EAAQ2D,EAAYE,EAAY,CAAEsD,GAAOP,OAAOnD,GAAUI,GAC/C,CAIP,IAHAX,EAAcG,EAAQA,EAAQ/G,OAAS,GAAG0D,OAC9B6C,mBAAqBsE,GAAQD,EAAGG,WAAWE,IACvDrE,EAAYpC,KAAOqG,GAAQ,GAAKtD,EAAWR,QAAQ3I,QAAQwI,IAAgBgE,EAAGG,WAAWvG,IACrFoC,EAAYL,oBAAsBe,EAAaV,EAAaW,GAAa,CACzEP,GAAa,EACb1D,EAAUjH,EACV,MAKJ,OAHIuK,EAAYpC,MACZf,IAAatC,UAAU9E,GAAOkL,EAAWR,QAAQ3I,QAAQwI,KAEtD,QAKf,GADAlD,EAAQwD,EAAqBxD,EAAOoD,EAAgBK,EAASC,GAClD,OAAO,OAGtB9D,IAzJJ,IAAkC6E,EAAQC,EA4J9C,IAAK,IAAIzB,EAAOG,EAAe9G,OAAS,EAAI8G,EAAegD,QAAU,EAAGnD,EAAO/F,EAAUmG,QAAQ/G,OAAQ2G,IACrG,IAA6C,IAAzC/F,EAAUmG,QAAQJ,GAAMe,aAAuB,CAC/C,IAAIhE,EAAQ2D,EAAYzG,EAAUmG,QAAQJ,GAAO,CAAEA,GAAO2D,OAAOnD,GAAUC,GAC3E,GAAI1D,GAASJ,IAAYjH,EACrB,OAAOqH,EACJ,GAAIJ,EAAUjH,EACjB,OA4BhB,GAAIA,GAAO,EAAG,CACV,GAAIgH,IAAcjI,EAAW,CAEzB,IADA,IAA2BsB,EAAvBwO,EAAc7O,EAAM,GAChBK,EAAO+G,IAAa3C,eAAeoK,IAAgBzH,IAAazC,MAAMkK,MAAkB9P,GAAa8P,GAAe,GACxHA,IAEAxO,IAAStB,GAAa8P,GAAe,IACrCpE,EA9BZ,SAAuBzK,EAAK2E,GACxB,IAAIiD,EAAU,GAoBd,OAnBKnG,EAAEuD,QAAQL,KAAQA,EAAQ,CAAEA,IAC7BA,EAAMhB,OAAS,IACXgB,EAAM,GAAGyE,cAAgBrK,EAEF,KADvB6I,EAAUF,EAAsB1H,EAAK2E,EAAMkD,SAASD,QAAQC,SAChDlE,SAAciE,EAAUjD,EAAM,GAAGiD,QAAQC,SAErDpG,EAAE2D,KAAKT,EAAO,SAASU,EAAK6D,GACxB,GAAgB,KAAZA,EAAIX,IACJ,GAAuB,IAAnBX,EAAQjE,OAAciE,EAAUsB,EAAItB,QAAQC,aAC5C,IAAK,IAAIzL,EAAI,EAAGA,EAAIwL,EAAQjE,OAAQvH,IAC5B8M,EAAItB,QAAQxL,KAAyD,IAAnDwL,EAAQxL,GAAGiN,WAAWtH,QAAQmH,EAAItB,QAAQxL,MAC5DwL,EAAQxL,IAAM,IAAM8M,EAAItB,QAAQxL,OAQrDwL,EASkBkH,CAAcD,EAAaxO,GAC5CuK,EAAkBH,EAAepG,KAAK,IACtC4C,EAAU4H,GAGlB,GAAIzH,IAAazC,MAAM3E,IAAQoH,IAAazC,MAAM3E,GAAK,GAAG6M,KAAOjC,EAC7D,OAAOxD,IAAazC,MAAM3E,GAE9B,IAAK,IAAI+O,EAAQtE,EAAegD,QAASsB,EAAQvE,EAAW7G,OAAQoL,IAAS,CACzE,IAAI1H,EAAQwD,EAAqBL,EAAWuE,GAAQtE,EAAgB,CAAEsE,IACtE,GAAI1H,GAASJ,IAAYjH,GAAOiH,EAAUjH,EACtC,OAkBZ,OAduB,IAAnB0K,EAAQ/G,QAAgBgH,IACxBD,EAAQ5C,KAAK,CACTT,MAAO,CACHiB,GAAI,KACJhB,aAAa,EACbnI,OAAQ,KACRoJ,IAAK,GACL1E,YAAa,IAEjB+D,QAAS,GACT4B,KAAM,GACNqD,GAAIjC,IAGR5D,IAAcjI,GAAaqI,IAAazC,MAAM3E,GACvCyB,EAAEmB,QAAO,EAAM,GAAI8H,IAE9BtD,IAAazC,MAAM3E,GAAOyB,EAAEmB,QAAO,EAAM,GAAI8H,GACtCtD,IAAazC,MAAM3E,IAE9B,SAASgP,IAKL,OAJI5H,IAAa1C,UAAY3F,IACzBqI,IAAa1C,QAAUgC,GAAgB,EAAO,GAC1CU,IAAajH,SAAWpB,IAAWqI,IAAajH,OAASiH,IAAa1C,QAAQmD,UAE/ET,IAAa1C,QAExB,SAASuK,EAAUC,GAKf,OAJI9H,IAAajH,SAAWpB,IAAyB,IAAZmQ,IACrC9H,IAAajH,OAASuG,GAAgB,EAAMS,KAAwB,GAChEC,IAAa1C,UAAY3F,IAAWqI,IAAa1C,QAAU0C,IAAajH,OAAO0H,UAEhFT,IAAajH,OAExB,SAASgP,EAAkBjD,EAAOC,EAAKhM,GACnC,IAAI/D,EAAG6B,EACP,IAAc,IAAViO,EACA1D,IACA0D,EAAQ,EACRC,EAAMhM,EAAOwD,YAEb,IAAKvH,EAAI8P,EAAO9P,EAAI+P,EAAK/P,WACdgL,IAAa3C,eAAerI,GAI3C,IADA6B,EAAIiO,EACC9P,EAAI8P,EAAO9P,EAAI+P,EAAK/P,IAErB,GADAoM,GAAa,GACTrI,EAAO/D,KAAO8D,EAAKuH,0BAA2B,CAC9C,IAAI2H,EAAYC,EAAQpR,EAAGkC,EAAO/D,IAAI,GAAM,IAC1B,IAAdgT,IACA5G,GAAa,GACbvK,EAAImR,EAAUE,QAAUvQ,EAAYqQ,EAAUE,MAAQF,EAAUpP,IAAM,IAKtF,SAASb,EAAOoQ,EAAMlP,EAAML,GACxB,OAAQE,EAAKf,QAAUkB,EAAKlB,QAC1B,IAAK,QACHoQ,EAAOA,EAAKC,cACZ,MAEF,IAAK,QACHD,EAAOA,EAAKzO,cACZ,MAEF,IAAK,QACH,IAAI2O,EAAYrI,IAAa3C,eAAezE,EAAM,GAE9CuP,EADQ,IAARvP,GAAayP,GAAaA,EAAUjI,QAAU8E,OAAOC,aAAa7N,EAAUgR,QAAQC,OAC7EJ,EAAKC,cAELD,EAAKzO,cAEhB,MAEF,QACE,GAAIW,EAAEsD,WAAW7E,EAAKf,QAAS,CAC3B,IAAIyQ,EAAOC,MAAM9R,UAAU8J,MAAMvL,KAAKwT,WACtCF,EAAK9H,KAAKV,IAAa3C,gBACvB8K,EAAOrP,EAAKf,OAAOmC,MAAMiB,KAAMqN,IAGvC,OAAOL,EAEX,SAASQ,EAAsBC,EAASC,EAASC,GAE7C,IADA,IAA2HC,EAAvHC,EAAUlQ,EAAKS,OAASsP,EAAUA,EAAQpI,MAAM,EAAG,GAAIwI,GAAU,EAAOC,EAAQJ,IAAOnR,EAAYmR,EAAG/L,MAAM,KAAO,GAC9G/H,EAAI,EAAGA,EAAIkU,EAAM3M,OAAQvH,KACe,KAAxC+T,EAAQH,EAAQjO,QAAQuO,EAAMlU,MAC/B4T,EAAQjC,OAAOoC,EAAO,GAG9B,IAAK,IAAII,EAAQ,EAAGA,EAAQP,EAAQrM,OAAQ4M,IACxC,IAA4C,IAAxC9O,EAAE2J,QAAQ4E,EAAQO,GAAQH,GAAiB,CAC3CC,GAAU,EACV,MAGR,OAAOA,EAEX,SAASG,EAAUxQ,EAAKxD,EAAGyD,EAAQwQ,EAAcC,GAC7C,IAAoEC,EAASvH,EAAkCwH,EAAQC,EAAYzU,EAAG0U,EAAUC,EAA5IC,EAAevP,EAAEmB,QAAO,EAAM,GAAIwE,IAAa3C,gBAAuCwM,GAAc,EAAqDC,EAAUR,IAAY3R,EAAY2R,EAAUvJ,IACzM,IAAiB,IAAb+J,GAAkBR,IAAY3R,EAE9B8R,EAAahH,EADb8G,EAAU,GAEVvH,EAAcyH,EAAWzH,iBAEzB,KAAM8H,GAAW,EAAGA,IAEhB,IADAN,EAASxJ,IAAa3C,eAAeyM,KACvBN,EAAOxH,cAAgBrK,EAAW,CAC5C,GAAI8R,GAAcA,EAAWjJ,QAAQgJ,EAAOxH,eAAiBwH,EAAOhJ,QAAQgJ,EAAOxH,aAC/E,MAEJuH,EAAUO,EACV9H,EAAchC,IAAa3C,eAAekM,GAASvH,YACnDyH,EAAaD,EAIzB,GAAIxH,IAAgBrK,EAAW,CAC3BgS,EAAc/H,SAAS2H,GACvBvJ,IAAaxC,SAASmM,GAAe3J,IAAaxC,SAASmM,IAAgB,IAC/D,IAAR/Q,GACAoH,IAAaxC,SAASmM,GAAajJ,KAAKmB,EAAiB4H,IAE7D,IAAIM,EAAmB,GAAIC,EAAwB,EACnD,IAAKhV,EAAI2U,EAAa3U,EAAI+K,EAAqBpI,GAAW,GAAQ,EAAG3C,KACjE0U,EAAW1J,IAAa3C,eAAerI,MACK,IAA5B0U,EAASvJ,eACrB4J,EAAiBrJ,KAAKgJ,EAAStJ,OACxBpL,EAAI4D,GAAKoR,WACbhK,IAAa3C,eAAerI,GAEvC,KAAOgL,IAAaxC,SAASmM,IAAgB3J,IAAaxC,SAASmM,GAAapN,OAAS,IAAI,CACzF,IAAI0N,GAAqC,EAAzBD,EAA4BE,EAAcH,EAAiBtJ,QAI3E,IAHAT,IAAazC,MAAMoM,GAAehS,EAClCyJ,GAAa,GACbyI,GAAc,EACPK,EAAY3N,OAAS,GAAG,CAC3B,IAAI6D,EAAQ8J,EAAY7D,QACxB,KAAMwD,EAAc5B,EAAQlI,EAAqBpI,GAAW,GAAQ,EAAGyI,GAAO,EAAOiJ,GAAc,IAC/F,MAGR,GAAIQ,GAAezU,IAAMuC,EAAW,CAChC,IAAIwS,EAAYpK,EAAqBnH,GAAO,EAC5C,IAAK5D,EAAI2U,EAAa3U,EAAI+K,IAAyB,EAAG/K,MAClD0U,EAAW1J,IAAa3C,eAAerI,MACrB2C,GAAkC,MAArB+R,EAASzJ,MAAMiB,KAAelM,EAAI4D,EAAMqR,GACnEA,IAIRJ,EAAc5B,GADdrP,GAAYqR,GACgBE,EAAYA,EAAYvR,EAAKxD,EAAGyD,EAAQwQ,GAAc,GAEtF,GAAKQ,EAkBE,MAdH,GAHAzI,IACAqI,EAAahH,EAAQkH,GACrB3J,IAAa3C,eAAiBhD,EAAEmB,QAAO,EAAM,GAAIoO,IAC7C5J,IAAaxC,SAASmM,GAUnB,CACHE,EAAcT,EAAUxQ,EAAKxD,EAAGyD,EAAQwQ,EAAcM,EAAc,GACpE,MAXA,IAAI5H,EAAgBF,EAAiB4H,GACrC,IAAmE,IAA/DzJ,IAAaxC,SAASmM,GAAahP,QAAQoH,GAAuB,CAClE8H,EAAcT,EAAUxQ,EAAKxD,EAAGyD,EAAQwQ,EAAcM,EAAc,GACpE,MAGJ,IADA3J,IAAaxC,SAASmM,GAAajJ,KAAKqB,GACnC/M,EAAI2U,EAAa3U,EAAI+K,EAAqBpI,GAAW,GAAQ,EAAG3C,WAC1DgL,IAAa3C,eAAerI,IAUvD,OADAgL,IAAaxC,SAASmM,GAAehS,EAC9BkS,EAEX,SAAS5B,EAAQrP,EAAKxD,EAAGyD,EAAQwQ,EAAce,EAAeC,GAC1D,SAASC,EAAYC,GACjB,OAAO3O,EAAQ2O,EAAOC,MAAQD,EAAOxF,IAAM,GAAKwF,EAAOC,MAAQD,EAAOxF,KAAQ,EAAIwF,EAAOxF,IAAMwF,EAAOC,MAAQ,GAAKD,EAAOxF,IAAMwF,EAAOC,OAAU,EAErJ3R,GAAoB,IAAXA,EACT,IAAI4R,EAAU7R,EAId,SAAS8R,EAASC,EAAUvV,EAAGyD,GAC3B,IAAI+R,GAAO,EA4CX,OA3CAvQ,EAAE2D,KAAKuC,EAASoK,GAAW,SAAS1M,EAAK6D,GACrC,IAAI7I,EAAO6I,EAAI7B,MAMf,GALA4H,GAAU,IAKG,KAJb+C,EAAkB,MAAX3R,EAAKiI,GAAajI,EAAKiI,GAAGjI,KAAK7D,EAAG4K,IAAc2K,EAAU9R,EAAQC,EAAMwR,EAAY1R,KAASxD,IAAM6D,EAAKkI,KAAO/L,IAAM0D,EAAKuH,4BAA2C,KAAbpH,EAAKkI,KAAa,CAC7K/L,EAAGwL,EAAe+J,EAAU1R,GAAM,IAASA,EAAKkI,IAChDvI,IAAK+R,IAEW,CAChB,IAAIxC,EAAOyC,EAAKxV,IAAMuC,EAAYiT,EAAKxV,EAAIA,EAAGyV,EAAeF,EAwB7D,OAvBAxC,EAAOA,IAASrP,EAAKuH,2BAAyC,OAAZpH,EAAKiI,GAAcN,EAAe+J,EAAU1R,GAAM,IAASA,EAAKkI,IAAMgH,EACpHyC,EAAKE,SAAWnT,IACX0C,EAAEuD,QAAQgN,EAAKE,UAASF,EAAKE,OAAS,CAAEF,EAAKE,SAClDzQ,EAAE2D,KAAK4M,EAAKE,OAAOC,KAAK,SAASC,EAAGC,GAChC,OAAOA,EAAID,IACX,SAAS/M,EAAKqG,GACd4G,EAAe,CACXV,MAAOlG,EACPS,IAAKT,EAAO,OAIpBsG,EAAKO,SAAWxT,IACX0C,EAAEuD,QAAQgN,EAAKO,UAASP,EAAKO,OAAS,CAAEP,EAAKO,SAClD9Q,EAAE2D,KAAK4M,EAAKO,OAAOJ,KAAK,SAASC,EAAGC,GAChC,OAAOD,EAAIC,IACX,SAAShN,EAAKqG,GACd2D,EAAQ3D,EAAK1L,IAAK0L,EAAKlP,GAAG,EAAMiU,OAG3B,IAATuB,GAAiBA,EAAKhS,MAAQjB,GAAaiT,EAAKhS,MAAQ+R,IACxDE,EAAeD,EAAKhS,OAEX,IAATgS,GAAiBA,EAAKhS,MAAQjB,GAAaiT,EAAKxV,IAAMuC,KAGrDuT,EAAetS,EAAKyB,EAAEmB,OAAO,GAAIsG,EAAK,CACvC1B,MAAOrI,EAAOoQ,EAAMlP,EAAM4R,KAC1BxB,EAAcwB,KACdD,GAAO,IAEJ,MAGRA,EAhDPhS,EAAI4R,QAAU7S,IACd8S,EAAU7O,EAAQhD,EAAImM,IAAMnM,EAAI4R,OAiDpC,IAAIY,GAAS,EAAMC,EAAiBhR,EAAEmB,QAAO,EAAM,GAAIwE,IAAa3C,gBAIpE,GAHIhD,EAAEsD,WAAW7E,EAAKwS,iBAAmBzS,IAA2B,IAAjBwQ,IAA0C,IAAjBgB,IACxEe,EAAStS,EAAKwS,cAAczD,IAAa4C,EAASrV,EAAGkV,EAAY1R,GAAME,EAAMkH,OAElE,IAAXoL,EAAiB,CAEjB,GADAG,EAAmB5T,EAAW8S,GAAS,IACnC3L,IAAcnH,GAAa8S,EAAU3L,KACrCsM,EAASV,EAASD,EAASrV,EAAGyD,KACxBA,IAA2B,IAAjBwQ,KAAqC,IAAX+B,IAAqC,IAAjBf,GAAuB,CACjF,IAAImB,EAAkBxL,IAAa3C,eAAeoN,GAClD,IAAIe,GAAgD,OAA7BA,EAAgBvL,MAAMiB,IAAgBsK,EAAgBvL,MAAMkB,MAAQ/L,GAAKA,IAAM0D,EAAKuH,2BAKvG,IAAKvH,EAAK2S,YAAczL,IAAa3C,eAAeqO,EAASjB,MAAc9S,MAAgBgU,EAAOlB,GAAS,IAASzK,IAAatC,UAAU+M,IACvI,GAAIzK,IAAatC,UAAU+M,IAAYzK,IAAa3C,eAAeqO,EAASjB,MAAc9S,GAEvE,KADfyT,EAASnD,EAAQwC,EAAUzK,IAAatC,UAAU+M,GAAUrV,EAAGyD,MACzCuS,EAAOlD,MAAQuC,QAClC,IAAK,IAAImB,EAAOnB,EAAU,EAAGoB,EAAQH,EAASjB,GAAUmB,GAAQC,EAAOD,IAE1E,IAAe,KADfR,EAASV,EAASkB,EAAMxW,EAAGyD,IACL,CAClBuS,EAASG,EAAmBd,EAASW,EAAOxS,MAAQjB,EAAYyT,EAAOxS,IAAMgT,IAASR,EACtFX,EAAUmB,EACV,YAbZR,EAAS,CACLlD,MAAOwD,EAASjB,KAmBjB,IAAXW,IAAwC,IAApBtS,EAAK+E,YAAuC,MAAd/E,EAAKV,QAAiB0T,GAAWjE,MAAkBhP,IAA4B,IAAlBuR,IAC/GgB,EAAShC,EAAUqB,EAASrV,EAAGyD,EAAQwQ,KAE5B,IAAX+B,IACAA,EAAS,CACLxS,IAAK6R,IAIjB,GAAIpQ,EAAEsD,WAAW7E,EAAKiT,kBAA8B,IAAXX,IAAqBvS,IAA2B,IAAjBwQ,IAA0C,IAAjBgB,EAAuB,CACpH,IAAI2B,EAAalT,EAAKiT,eAAelE,GAAU,GAAOjP,EAAI4R,QAAU7S,EAAYiE,EAAQhD,EAAImM,IAAMnM,EAAI4R,MAAQ5R,EAAKwS,EAAQtS,GAC3H,GAAIkT,IAAerU,EAAW,CAC1B,GAAIqU,EAAWjE,mBAAqBiE,EAAWjT,OAAQ,CACnD,IAAIkT,EAAUD,EAAWjE,kBACzBA,GAA8B,IAAZkE,EAAmBA,EAAUA,EAAQnH,MAAOmH,EAAQlH,IAAKiH,EAAWjT,QAE1FqS,GAAwB,IAAfY,EAAsBZ,EAASY,GAUhD,OAPIZ,GAAUA,EAAOxS,MAAQjB,IACzByT,EAAOxS,IAAM6R,IAEF,IAAXW,IAAqC,IAAjBf,IACpBjJ,GAAa,GACbpB,IAAa3C,eAAiBhD,EAAEmB,QAAO,EAAM,GAAI6P,IAE9CD,EAEX,SAASG,EAAmBW,EAAaC,EAAQC,GAC7C,IAAIhB,EACJ,GAAIc,IAAgBvU,EAChB,IAAKuU,EAAcC,EAAS,EAAGD,EAAc,IACrClM,IAAa3C,eAAe6O,GADYA,KAIpD,IAAK,IAAIG,EAAKH,EAAaG,EAAKF,EAAQE,IACpC,GAAIrM,IAAa3C,eAAegP,KAAQ1U,IAAcgU,EAAOU,GAAI,GAAO,CACpE,IAAIC,EAAW,GAAND,EAAU5J,EAAQ4J,GAAMrM,IAAa3C,eAAegP,EAAK,GAClE,GAAIC,EAAI,CACJ,IAAI/O,EAAQgD,EAAS8L,GAAI5L,QACiB,KAAtClD,EAAMA,EAAMhB,OAAS,GAAG0D,MAAMkB,KAAY5D,EAAMa,MACpD,IAAImE,EAAYjC,EAAsB+L,EAAI9O,GAM1C,IALAgF,EAAYlI,EAAEmB,OAAO,GAAI+G,EAAW,CAChCnC,MAAOQ,EAAeyL,EAAI9J,EAAUtC,OAAO,IAASsC,EAAUtC,MAAMkB,OAE9DhB,gBAAiB,EAC3B+K,EAAemB,EAAI9J,GAAW,IACb,IAAb6J,EAAmB,CACnB,IAAIG,EAAWvM,IAAa3C,eAAe8O,GAAQ/L,MACnDJ,IAAa3C,eAAe8O,GAAUxU,EACtCyT,EAASnD,EAAQkE,EAAQI,GAAU,GAAM,KAKzD,OAAOnB,EAEX,SAASF,EAAetS,EAAK4T,EAAWnD,EAAcwB,GAClD,SAAS4B,EAAiB7T,EAAK6I,EAAQiL,GACnC,IAAIC,EAAWlL,EAAO7I,GACtB,GAAI+T,IAAahV,IAAoC,OAAtBgV,EAAS1M,MAAMiB,KAA8C,IAA/ByL,EAAS1M,MAAMC,aAAwByM,EAASvM,QAAUtH,EAAK8T,YAAa,CACrI,IAAIC,EAAYH,EAAUlC,OAAS5R,EAAM,EAAI6I,EAAO7I,EAAM,IAAmC,OAA7B6I,EAAO7I,EAAM,GAAGqH,MAAMiB,IAAeO,EAAO7I,EAAM,GAAK6I,EAAO7I,EAAM,GAAIkU,EAAYJ,EAAU3H,IAAMnM,EAAM,EAAI6I,EAAO7I,EAAM,IAAmC,OAA7B6I,EAAO7I,EAAM,GAAGqH,MAAMiB,IAAeO,EAAO7I,EAAM,GAAK6I,EAAO7I,EAAM,GACrQ,OAAOiU,GAAaC,EAExB,OAAO,EAEX,IAAItC,EAAQ5R,EAAI4R,QAAU7S,EAAYiB,EAAI4R,MAAQ5R,EAAKmM,EAAMnM,EAAImM,MAAQpN,EAAYiB,EAAImM,IAAMnM,EAM/F,GALIA,EAAI4R,MAAQ5R,EAAImM,MAChByF,EAAQ5R,EAAImM,IACZA,EAAMnM,EAAI4R,OAEdK,EAAeA,IAAiBlT,EAAYkT,EAAeL,EACvDA,IAAUzF,GAAOjM,EAAK2S,YAAczL,IAAa3C,eAAewN,KAAkBlT,GAAa0R,IAAiB1R,EAAW,CAC3H,IAAI0T,EAAiBhR,EAAEmB,QAAO,EAAM,GAAIwE,IAAa3C,gBAAiB0P,EAAMhN,EAAqBpI,GAAW,GAE5G,IADAqI,IAAanJ,EAAI2T,EACZxV,EAAI+X,EAAK/X,GAAKwV,EAAOxV,IAClBgL,IAAa3C,eAAerI,IAAyD,MAAnDgL,IAAa3C,eAAerI,GAAGiL,MAAMU,YACvE7H,EAAKkU,YAAa,UAEfhN,IAAa3C,eAAerI,GAEvC,IAAIiO,GAAQ,EAAMgK,EAAIpC,EAAiDqC,GAA7BlN,IAAa3C,gBAAkC,GAAOsP,EAAWM,EAAGjY,EAAIiY,EAOlH,IANIT,IACAxM,IAAa3C,eAAewN,GAAgBxQ,EAAEmB,QAAO,EAAM,GAAIgR,GAC/DG,IACAM,IACIzC,EAAQzF,GAAK/P,KAEfA,GAAK+X,EAAK/X,IAAK,CACjB,IAAIiB,EAAIoV,EAAerW,GACvB,GAAIiB,IAAM0B,IAAc3C,GAAK+P,GAAO/P,GAAKwV,IAA8B,IAArBvU,EAAEkK,gBAA2BsM,EAAiBzX,EAAGqW,EAAgB,CAC/Gb,MAAOA,EACPzF,IAAKA,KACJ,CACD,KAAuC,KAAhCtC,EAAQkK,GAAU1M,MAAMkB,KAAY,CACvC,IAAwB,IAApB+L,GAA6B7B,EAAesB,IAAatB,EAAesB,GAAU1M,MAAMU,YAAc1K,EAAEgK,MAAMU,UAC9GX,IAAa3C,eAAesP,GAAYtS,EAAEmB,QAAO,EAAM,GAAI6P,EAAesB,IAC1E3M,IAAa3C,eAAesP,GAAUvM,MAAQnK,EAAEmK,MAChDmL,EAAmB5T,EAAWgV,GAAU,GACxCM,EAAIN,EAAW,EACf1J,GAAQ,OACL,GAAInK,EAAKqU,gBAAkBnK,EAA2B2J,EAAU1W,EAAEgK,MAAMkB,KAAM,CACjF,IAAIiK,EAASnD,EAAQ0E,EAAU1W,EAAEmK,OAAO,GAAM,GAC9C6C,GAAmB,IAAXmI,EACR6B,EAAI7B,EAAOlD,OAASkD,EAAOD,OAASpL,IAAyB4M,EAAW,EACxEO,GAAkB,OAElBjK,GAA6B,IAArBhN,EAAEkK,gBAA2BlK,EAAEmK,QAAUtH,EAAK8T,aAAoC,IAAtB9T,EAAK+C,aAE7E,GAAIoH,EAAO,MACX,IAAKA,GAAS0J,EAAW5H,GAAO4G,EAAOgB,GAAU,KAAyB,OAAf1W,EAAEgK,MAAMiB,IAAeyL,EAAW3M,IAAavC,YACtG,MAEJkP,IAE+B,IAA/BlK,EAAQkK,GAAU1M,MAAMkB,MAAW8B,GAAQ,GAC/C0J,EAAWM,EAEf,IAAKhK,EAAO,MAEhB,IAAKA,EAGD,OAFAjD,IAAa3C,eAAiBhD,EAAEmB,QAAO,EAAM,GAAI6P,GACjDjK,GAAa,IACN,OAEJoL,IACPxM,IAAa3C,eAAewN,GAAgBxQ,EAAEmB,QAAO,EAAM,GAAIgR,IAGnE,OADApL,GAAa,IACN,EAEX,SAASuK,EAAO/S,EAAKC,GACjB,IAAII,EAAO4H,EAAgBjI,GAAKqH,MAEhC,GADiB,KAAbhH,EAAKkI,MAAYlI,EAAOwJ,EAAQ7J,GAAKqH,OAC1B,MAAXhH,EAAKiI,GACL,OAAOjI,EAAKiI,GAEhB,IAAe,IAAXrI,GAAmBD,GAAO,EAAG,CAC7B,IAAI2E,EAAQgD,EAAS3H,GACrB,OAAO2E,EAAMhB,OAAS,GAA2C,KAAtCgB,EAAMA,EAAMhB,OAAS,GAAG0D,MAAMkB,IAAa,EAAI,GAE9E,OAAO,EAEX,SAASuK,EAAS9S,EAAKwU,GAEnB,IADA,IAAIzC,EAAW/R,EAAM,EACkB,KAAhC6J,EAAQkI,GAAU1K,MAAMkB,OAA4B,IAAbiM,KAAiE,IAA3C3K,EAAQkI,GAAU1K,MAAMgB,iBAA4B0K,EAAOhB,MAA2B,IAAbyC,IAAsBzB,EAAOhB,KACtKA,IAEJ,OAAOA,EAEX,SAAS0C,EAAazU,EAAKwU,GACvB,IAAoB7P,EAAhBoN,EAAW/R,EACf,GAAI+R,GAAY,EAAG,OAAO,EAC1B,OAASA,EAAW,KAAmB,IAAbyC,IAAgE,IAA3C3K,EAAQkI,GAAU1K,MAAMgB,iBAAwC,IAAbmM,IAAsBzB,EAAOhB,MAAcpN,EAAQgD,EAASoK,IACxJpO,OAAS,GAAsB,IAAjBgB,EAAMhB,QAAuC,KAAvBgB,EAAM,GAAG0C,MAAMkB,QACzD,OAAOwJ,EAEX,SAAS2C,EAAYlN,EAAOrH,EAAQwU,EAAUC,EAAOC,GACjD,GAAID,GAASnT,EAAEsD,WAAW7E,EAAK4U,eAAgB,CAC3C,IAAItC,EAAStS,EAAK4U,cAAcxY,KAAK+J,EAAWuO,EAAOzU,EAAQwU,EAAUzU,GACzE,GAAIsS,EAAQ,CACR,GAAIA,EAAOrD,kBAAmB,CAC1B,IAAIkE,EAAUb,EAAOrD,kBACrBA,GAA8B,IAAZkE,EAAmBA,EAAUA,EAAQnH,MAAOmH,EAAQlH,IAAKqG,EAAOrS,QAAUA,GAC5FA,EAAS8O,GAAU,GAEnB0F,IAAa5V,IAAW4V,EAAWnC,EAAOlD,QAAUvQ,EAAYyT,EAAOlD,MAAQqF,IAG3F,GAAInN,IAAUzI,IACVyI,EAAMnB,UAAU0O,UAAU5U,EAAOkE,KAAK,KAClCsQ,IAAa5V,GAAc6V,IAAU7V,GAA4B,SAAf6V,EAAMI,KAErDC,GAAgBzN,EAAOmN,EAA4B,IAAlBxU,EAAOwD,QAD3C2L,GAAM9H,EAAOmN,IAEK,IAAlBE,GAAwB,CACxB,IAAIK,EAASzT,EAAE+F,GAAQ2N,EAAS3N,EAAMnB,UAAU+O,YAChD7O,GAAiB,EACjB2O,EAAOG,QAAQ,SACfC,WAAW,WACHH,IAAWnG,IAAoB3K,KAAK,IACpC6Q,EAAOG,QAAQ,YACe,IAAvBnC,GAAW/S,IAClB+U,EAAOG,QAAQ,aAEpB,IAIf,SAASrN,EAAehI,EAAKK,EAAMkV,GAE/B,IADAlV,EAAOA,GAAQwJ,EAAQ7J,GAAKqH,OACnBxD,cAAgB9E,IAA0B,IAAbwW,EAClC,OAAO9T,EAAEsD,WAAW1E,EAAKwD,aAAexD,EAAKwD,YAAY3D,GAAQG,EAAKwD,YACnE,GAAgB,OAAZxD,EAAKiI,GAAa,CACzB,GAAItI,GAAO,GAAKoH,IAAa3C,eAAezE,KAASjB,EAAW,CAC5D,IAAoDyW,EAAhD7Q,EAAQgD,EAAS3H,GAAMyV,EAAqB,GAChD,GAAI9Q,EAAMhB,OAAS,GAA2C,KAAtCgB,EAAMA,EAAMhB,OAAS,GAAG0D,MAAMkB,IAAa,EAAI,GACnE,IAAK,IAAInM,EAAI,EAAGA,EAAIuI,EAAMhB,OAAQvH,IAC9B,IAAmC,IAA/BuI,EAAMvI,GAAGiL,MAAMC,cAA8D,IAAtC3C,EAAMvI,GAAGiL,MAAM6C,qBAAsD,OAAtBvF,EAAMvI,GAAGiL,MAAMiB,IAAekN,IAAazW,IAA2F,IAA9E4F,EAAMvI,GAAGiL,MAAMiB,GAAGjI,KAAKmV,EAASnO,MAAMkB,IAAKnB,IAAcpH,GAAK,EAAME,MAClNuV,EAAmB3N,KAAKnD,EAAMvI,IACJ,OAAtBuI,EAAMvI,GAAGiL,MAAMiB,KAAakN,EAAW7Q,EAAMvI,IAC7CqZ,EAAmB9R,OAAS,GACxB,cAActD,KAAKoV,EAAmB,GAAGpO,MAAMkB,MAC/C,OAAOrI,EAAK2D,YAAYqB,OAAOlF,EAAME,EAAK2D,YAAYF,QAO9E,OAAOtD,EAAKkI,IAEhB,OAAOrI,EAAK2D,YAAYqB,OAAOlF,EAAME,EAAK2D,YAAYF,QAE1D,SAAS+R,EAAwBC,EAAKvY,GAClC,GAAI0E,GACA,GAAI6T,EAAItP,UAAU+O,cAAgBhY,IAAUuY,EAAI9R,cAAgBzG,GAA6B,KAApBuY,EAAI9R,aAAqB,CAC9F,IAAI1D,EAAS8O,IAAYpH,QAAS+N,EAAWD,EAAItP,UAAU+O,YAC3D,GAAIQ,IAAaxY,EAAO,CACpB,IAAI+W,EAAMhN,KACG,IAATgN,GAAcyB,IAAa5G,IAAoB3K,KAAK,IACpDlE,EAAS,IACO,IAATgU,GACPpN,GAAkB5G,GAEtBuU,EAAYiB,EAAKxV,UAGlBwV,EAAI9R,cAAgBzG,IAC3BuY,EAAI9R,YAAczG,EACM,KAApBuY,EAAI9R,aAAoB8R,EAAIE,gBAAgB,gBAGxD,IAqhCIC,EArhCAC,GAAa,CACbC,GAAI,SAAYxO,EAAO/B,EAAWwQ,GAC9B,IAAIC,EAAK,SAAYC,GACjB,IAAIC,EAAO7T,KACX,GAAI6T,EAAK/P,YAActH,GAA+B,SAAlBwD,KAAK8T,SAAqB,CAC1D,IAAIC,EAAS7U,EAAE8U,KAAKH,EAAM,mBACtBE,EAAQ,IAAI5X,EAAU4X,GAAQ1W,KAAKwW,GAAYL,GAAWS,IAAIJ,OAC/D,CAAA,GAAe,aAAXD,EAAEnB,MAAyC,SAAlBzS,KAAK8T,YAAwBD,EAAKK,UAAYL,EAAKM,YAAyB,YAAXP,EAAEnB,MAAsBmB,EAAEQ,SAAyB,KAAdR,EAAEzG,UAAsC,IAApBxP,EAAK0W,YAAwBT,EAAEzG,UAAYhR,EAAUgR,QAAQmH,MAEpN,CACH,OAAQV,EAAEnB,MACR,IAAK,QACH,IAAuB,IAAnBzO,EAEA,OADAA,GAAiB,EACV4P,EAAEW,iBAEb,GAAI9U,EAAQ,CACR,IAAI4N,EAAOE,UAKX,OAJAwF,WAAW,WACPW,EAAa3U,MAAM8U,EAAMxG,GACzBN,GAAM8G,EAAMA,EAAK/P,UAAUsO,SAAU5V,GAAW,IACjD,IACI,EAEX,MAEF,IAAK,UACHuH,GAAoB,EACpBC,GAAiB,EACjB,MAEF,IAAK,WACH,IAA0B,IAAtBD,EACA,OAAO6P,EAAEW,iBAEbxQ,GAAoB,EACpB,MAEF,IAAK,QACH,GAAIpE,GAAYC,EAAQ,CACpB,IAAIyN,EAAOE,UAIX,OAHAwF,WAAW,WACPW,EAAa3U,MAAM8U,EAAMxG,IAC1B,IACI,GAIf,IAAImH,EAAYd,EAAa3U,MAAM8U,EAAMtG,WAKzC,OAJkB,IAAdiH,IACAZ,EAAEW,iBACFX,EAAEa,mBAECD,EA7CPZ,EAAEW,mBAgDVtP,EAAMnB,UAAU5D,OAAOgD,GAAa+B,EAAMnB,UAAU5D,OAAOgD,IAAc,GACzE+B,EAAMnB,UAAU5D,OAAOgD,GAAWqC,KAAKoO,IACc,IAAjDzU,EAAE2J,QAAQ3F,EAAW,CAAE,SAAU,UACd,OAAf+B,EAAMyP,MAAexV,EAAE+F,EAAMyP,MAAMjB,GAAGvQ,EAAWyQ,GAErDzU,EAAE+F,GAAOwO,GAAGvQ,EAAWyQ,IAG/BM,IAAK,SAAahP,EAAOoN,GAEjB,IAAInS,EADJ+E,EAAMnB,WAAamB,EAAMnB,UAAU5D,SAE/BmS,GACAnS,EAAS,IACFmS,GAASpN,EAAMnB,UAAU5D,OAAOmS,GAEvCnS,EAAS+E,EAAMnB,UAAU5D,OAE7BhB,EAAE2D,KAAK3C,EAAQ,SAASgD,EAAWyR,GAC/B,KAAOA,EAAMvT,OAAS,GAAG,CACrB,IAAIuS,EAAKgB,EAAM1R,OACsC,IAAjD/D,EAAE2J,QAAQ3F,EAAW,CAAE,SAAU,UACd,OAAf+B,EAAMyP,MAAexV,EAAE+F,EAAMyP,MAAMT,IAAI/Q,EAAWyQ,GAEtDzU,EAAE+F,GAAOgP,IAAI/Q,EAAWyQ,UAGzB1O,EAAMnB,UAAU5D,OAAOgD,QAK1C0R,GAAgB,CAChBC,aAAc,SAAsBjB,GAChC,IAAkBjB,EAASzT,EAAfc,MAAyB8U,EAAIlB,EAAEzG,QAAS1P,EAAMsP,GAA9C/M,MACZ,GAAI8U,IAAM3Y,EAAUgR,QAAQ4H,WAAaD,IAAM3Y,EAAUgR,QAAQ6H,QAAUpV,GAAUkV,IAAM3Y,EAAUgR,QAAQ8H,kBAAoBrB,EAAEQ,SAAWU,IAAM3Y,EAAUgR,QAAQ+H,IAAMxV,EAAsB,OAC9LkU,EAAEW,iBACFY,GAHQnV,EAGY8U,EAAGrX,GACvB0U,EAJQnS,KAIW0M,GAAU,GAAO7H,IAAanJ,EAAGkY,EAJ5C5T,KAIqD8D,UAAU+O,cAAgBnG,IAAY5K,KAAK,UACrG,GAAIgT,IAAM3Y,EAAUgR,QAAQiI,KAAON,IAAM3Y,EAAUgR,QAAQkI,UAAW,CACzEzB,EAAEW,iBACF,IAAInC,EAAW7B,EAAS3L,KACxBmI,GARQ/M,KAQK4T,EAAE0B,SAAW7X,EAAI4R,MAAQ+C,EAAUA,GAAU,QACnD0C,IAAM3Y,EAAUgR,QAAQoI,OAAS3B,EAAE0B,UAAYR,IAAM3Y,EAAUgR,QAAQqI,SAC9E5B,EAAEW,iBACFxH,GAXQ/M,KAWK,EAAG4T,EAAE0B,SAAW7X,EAAI4R,MAAQ,GAAG,KACpC1R,EAAK8X,cAAgBX,IAAM3Y,EAAUgR,QAAQuI,QAAgB,KAANZ,GAAYlB,EAAEQ,WAAyB,IAAbR,EAAE+B,QAC3FC,GAbQ5V,MAaQ,GAAM,EAAOyD,EAAU7B,MAAM,KAC7C+Q,EAAOG,QAAQ,UACRgC,IAAM3Y,EAAUgR,QAAQ0I,QAAYjC,EAAE0B,UAAY1B,EAAEQ,SAGhC,IAApBzW,EAAK0W,YAAuBS,IAAM3Y,EAAUgR,QAAQmH,OACxC,IAAfV,EAAE0B,UACkC,OAAhChO,EAAQ7J,EAAI4R,OAAOvK,MAAMiB,KACzBtI,EAAI4R,MAAQkB,EAAS9S,EAAI4R,QAE7B5R,EAAImM,IAAMsI,EAAazU,EAAI4R,OAAO,GAClC5R,EAAI4R,MAAQ6C,EAAazU,EAAImM,KAAK,KAElCnM,EAAI4R,MAAQkB,EAAS9S,EAAI4R,OAAO,GAChC5R,EAAImM,IAAM2G,EAAS9S,EAAI4R,OAAO,GAC1B5R,EAAImM,IAAM/E,IAAavC,YAAY7E,EAAImM,OAE3CnM,EAAI4R,MAAQxK,IAAavC,aACzBsR,EAAEW,iBACFxH,GAhCI/M,KAgCSvC,EAAI4R,MAAO5R,EAAImM,QAhBhCjM,EAAK2S,YAAc3S,EAAK2S,WAhBhBtQ,KAiBFsD,aAAa,YAAa3F,EAAK2S,aAkBzC3S,EAAKmY,UAAU/b,KAAKiG,KAAM4T,EAAGlH,IAAaK,GAnC9B/M,MAmC2CqP,MAAO1R,GAC9DsG,GAA+C,IAAnC/E,EAAE2J,QAAQiM,EAAGnX,EAAKoY,aAElCC,cAAe,SAAuBpC,EAAGqC,EAAUC,EAAUxY,EAAQoF,GACjE,IAAImC,EAAQjF,KAAM2S,EAASzT,EAAE+F,GAAQ6P,EAAIlB,EAAEuC,OAASvC,EAAEwC,UAAYxC,EAAEzG,QACpE,MAAiB,IAAb8I,GAAuBrC,EAAEQ,SAAWR,EAAE+B,UAAY/B,EAAEQ,SAAWR,EAAEyC,SAAWpS,GAO5E,OANI6Q,IAAM3Y,EAAUgR,QAAQmJ,OAAS7S,IAAciJ,IAAY5K,KAAK,MAChE2B,EAAYiJ,IAAY5K,KAAK,IAC7BiR,WAAW,WACPJ,EAAOG,QAAQ,WAChB,KAEA,EAEP,GAAIgC,EAAG,CACO,KAANA,IAA2B,IAAflB,EAAE0B,UAA0C,KAApB3X,EAAK8T,aAAmBqD,EAAInX,EAAK8T,WAAW3H,WAAW,IAC/F,IAGkByM,EAHd9Y,EAAMwY,EAAW,CACjB5G,MAAOvM,EACP8G,IAAK9G,GACLiK,GAAM9H,GAAyBhL,EAAI8P,OAAOC,aAAa8K,GAAI0B,EAAS,EACxE,GAAI7Y,EAAK8Y,aAAe9Y,EAAK+C,aAAc,CACvC,IAAI0R,EAAW1F,IAAYlN,QAAQ7B,EAAK8T,WAAW9O,OAAO,IAAM,EAC5DlF,EAAI4R,OAAS+C,IACT0C,IAAMnX,EAAK8T,WAAW3H,WAAW,KAAI0M,EAAS,GAClD/Y,EAAI4R,OAAS,EACb5R,EAAImM,KAAO,GAGnB/E,IAAa6R,gBAAiB,EAC9B,IAAI7J,EAAYC,EAAQrP,EAAKxD,EAAGyD,GAOhC,IANkB,IAAdmP,IACA5G,GAAa,GACbsQ,EAAkB1J,EAAUE,QAAUvQ,EAAYqQ,EAAUE,MAAQwD,EAAS1D,EAAUpP,IAAI4R,MAAQxC,EAAUpP,IAAI4R,MAAQxC,EAAUpP,KACnIoH,IAAanJ,EAAI6a,GAErBA,GAAmB5Y,EAAK+C,cAAgBmM,EAAUE,QAAUvQ,EAAY0V,EAAaqE,GAAmBA,GAAmBC,GAC1G,IAAbN,IACAnD,WAAW,WACPpV,EAAKgZ,gBAAgB5c,KAAKkL,EAAO6P,EAAGjI,EAAWlP,IAChD,GACCkH,IAAa6R,iBAAgC,IAAd7J,GAAqB,CACpD,IAAIjP,EAAS8O,IACbyF,EAAYlN,EAAOrH,EAAQ2Y,EAAiB3C,GAAgB,IAAbqC,GAIvD,GADArC,EAAEW,iBACE0B,EAEA,OADkB,IAAdpJ,IAAqBA,EAAU0J,gBAAkBA,GAC9C1J,IAKvB+J,WAAY,SAAoBhD,GAC5B,IAAuIiD,EAArHlD,EAAKC,EAAEkD,eAAiBlD,EAAsBmD,GAAV7X,EAA1Cc,MAAAA,KAAuE8D,UAAU+O,WAAU,IAAOT,EAAWrF,GAA7G/M,MACRS,IACAoW,EAAYzE,EAASxI,IACrBwI,EAASxI,IAAMwI,EAAS/C,MACxB+C,EAAS/C,MAAQwH,GAErB,IAAIG,EAAmBD,EAAWE,OAAO,EAAG7E,EAAS/C,OAAQ6H,EAAkBH,EAAWE,OAAO7E,EAASxI,IAAKmN,EAAW3V,QAG1H,GAFI4V,KAAsBvW,EAAQgM,IAAoB5K,UAAY4K,KAAqBnH,MAAM,EAAG8M,EAAS/C,OAAOvN,KAAK,MAAKkV,EAAmB,IACzIE,KAAqBzW,EAAQgM,IAAoB5K,UAAY4K,KAAqBnH,MAAM8M,EAASxI,KAAK9H,KAAK,MAAKoV,EAAkB,IAClIhb,EAAOib,eAAiBjb,EAAOib,cAAcC,QAC7CL,EAAaC,EAAmB9a,EAAOib,cAAcC,QAAQ,QAAUF,MACpE,CAAA,IAAIvD,EAAGwD,gBAAiBxD,EAAGwD,cAAcC,QAEzC,OAAO,EADVL,EAAaC,EAAmBrD,EAAGwD,cAAcC,QAAQ,cAAgBF,EAE7E,IAAIG,EAAaN,EACjB,GAAI7X,EAAEsD,WAAW7E,EAAKU,eAAgB,CAElC,IAAmB,KADnBgZ,EAAa1Z,EAAKU,cAActE,KAAK+J,EAAWiT,EAAYpZ,IAExD,OAAOiW,EAAEW,iBAER8C,IACDA,EAAaN,GAKrB,OAFAnB,GAxBY5V,MAwBI,GAAO,EAAOqX,EAAWvQ,WAAWlF,MAAM,KAC1DuQ,EAzBYnS,KAyBO0M,IAAa6D,EAAS3L,KAAyBgP,EAAGnQ,IAAciJ,IAAY5K,KAAK,KAC7F8R,EAAEW,kBAEb+C,mBAAoB,SAA4B1D,GAoB5C,IAAI3O,EAAQjF,KAAM+W,EAAa9R,EAAMnB,UAAU+O,YAC/C,GAAInG,IAAY5K,KAAK,MAAQiV,EAAY,CACrC,IAAI3E,EAAWrF,GAAM9H,GAGrB,GADA8R,EAfJ,SAAyB9R,EAAO8R,EAAY3E,GACxC,GAAIzS,EAAU,CACV,IAAI4X,EAAYR,EAAWvY,QAAQkO,IAAY5K,KAAK,IAAK,IACzD,GAAyB,IAArByV,EAAUnW,OAAc,CACxB,IAAIoW,EAAKT,EAAWnV,MAAM,IAC1B4V,EAAGhM,OAAO4G,EAAS/C,MAAO,EAAGkI,GAC7BR,EAAaS,EAAG1V,KAAK,KAG7B,OAAOiV,EAMMU,CAAgBxS,EAD7B8R,EAtBJ,SAA2B9R,EAAO8R,EAAY3E,GAM1C,MAL8C,MAA1C2E,EAAWpU,OAAOyP,EAAS/C,MAAQ,IAAkC,KAApB1R,EAAK8T,cACtDsF,EAAaA,EAAWnV,MAAM,KACnBwQ,EAAS/C,MAAQ,GAAK1R,EAAK8T,WAAW9O,OAAO,GACxDoU,EAAaA,EAAWjV,KAAK,KAE1BiV,EAgBMW,CAAkBzS,EAAO8R,EAAY3E,GACFA,GAC5C1F,IAAY5K,KAAK,MAAQiV,EAAY,CACrC,IAAInZ,EAAS8O,IAAY5K,KAAK,IAAK0U,GAAU7Y,EAAK+C,cAAgBqW,EAAW3V,OAASxD,EAAOwD,QAAU,EAAI,EAAGuW,EAAYZ,EAAWE,OAAO,EAAG7E,EAAS/C,OAAQuI,EAAWb,EAAWE,OAAO7E,EAAS/C,OAAQwI,EAAkBja,EAAOqZ,OAAO,EAAG7E,EAAS/C,MAAQmH,GAASsB,EAAiBla,EAAOqZ,OAAO7E,EAAS/C,MAAQmH,GACvTjF,EAAYa,EAAU2F,EAAU,GAAIC,GAAU,EAClD,GAAIL,IAAcE,EAAiB,CAC/B,IAA8Ghe,EAA1Goe,GAAOD,EAAUL,EAAUvW,QAAUyW,EAAgBzW,QAAUuW,EAAUvW,OAASyW,EAAgBzW,OACtG,IAAKvH,EAAI,EAAG8d,EAAUhV,OAAO9I,KAAOge,EAAgBlV,OAAO9I,IAAMA,EAAIoe,EAAKpe,KACtEme,IACAzG,EAAUlC,MAAQxV,EAAI2c,EACtBuB,GAAWJ,EAAUrS,MAAMzL,EAAG0X,EAAU3H,MAoBhD,GAjBIgO,IAAaE,IACTF,EAASxW,OAAS0W,EAAe1W,OACjC2W,GAAWH,EAAStS,MAAM,EAAG,GAEzBsS,EAASxW,OAAS0W,EAAe1W,SACjCmQ,EAAU3H,KAAOkO,EAAe1W,OAASwW,EAASxW,OAC7C4W,GAA+B,KAApBra,EAAK8T,YAAkC,KAAbmG,GAAmBD,EAAUhV,OAAO4O,EAAUlC,MAAQmH,EAAS,KAAO7Y,EAAK8T,aACjHF,EAAUlC,QACV0I,EAAUpa,EAAK8T,cAK/BU,EAAYlN,EAAOyH,IAAa,CAC5B2C,MAAOkC,EAAUlC,MAAQmH,EACzB5M,IAAK2H,EAAU3H,IAAM4M,IAErBuB,EAAQ3W,OAAS,EACjBlC,EAAE2D,KAAKkV,EAAQnW,MAAM,IAAK,SAASkB,EAAKoV,GACpC,IAAIC,EAAW,IAAIjZ,EAAEkZ,MAAM,YAC3BD,EAAShC,MAAQ+B,EAAMpO,WAAW,GAClC7F,GAAY,EACZ2Q,GAAcoB,cAAcjc,KAAKkL,EAAOkT,SAEzC,CACC5G,EAAUlC,QAAUkC,EAAU3H,IAAM,IACpC2H,EAAUlC,MAAQ6C,EAAaX,EAAUlC,MAAQ,GAC7CkC,EAAUlC,QAAUkC,EAAU3H,IAAM,EACpCmD,GAAM9H,EAAOsM,EAAUlC,OAEvBtC,GAAM9H,EAAOsM,EAAUlC,MAAOkC,EAAU3H,MAGhD,IAAIyO,EAAU,IAAInZ,EAAEkZ,MAAM,WAC1BC,EAAQlL,QAAUxP,EAAK+C,aAAevE,EAAUgR,QAAQ4H,UAAY5Y,EAAUgR,QAAQ6H,OACtFJ,GAAcC,aAAa9a,KAAKkL,EAAOoT,GAE3CzE,EAAEW,oBAId+D,iBAAkB,SAA0B1E,GACxC,GAAIA,EAAE2E,WAAY,CACd,IAAItT,EAAQjF,KACZ,OAAQ4T,EAAE4E,WACR,IAAK,aAOH,OANAtZ,EAAE2D,KAAK+Q,EAAEI,KAAKpS,MAAM,IAAK,SAASkB,EAAKoV,GACnC,IAAIC,EAAW,IAAIjZ,EAAEkZ,MAAM,YAC3BD,EAAShC,MAAQ+B,EAAMpO,WAAW,GAClC7F,GAAY,EACZ2Q,GAAcoB,cAAcjc,KAAKkL,EAAOkT,KAErCvE,EAAEW,iBAEX,IAAK,wBACH,IAAI8D,EAAU,IAAInZ,EAAEkZ,MAAM,WAG1B,OAFAC,EAAQlL,QAAUhR,EAAUgR,QAAQ4H,UACpCH,GAAcC,aAAa9a,KAAKkL,EAAOoT,GAChCzE,EAAEW,iBAEX,IAAK,uBACH,IAAI8D,EAAU,IAAInZ,EAAEkZ,MAAM,WAG1B,OAFAC,EAAQlL,QAAUhR,EAAUgR,QAAQ6H,OACpCJ,GAAcC,aAAa9a,KAAKkL,EAAOoT,GAChCzE,EAAEW,oBAIrBkE,cAAe,SAAuB7E,GAClC5T,KAAK8D,UAAU3D,cAAe,EAC9B,IAAkBtF,EAAQ+Y,GAAKA,EAAE8E,OAAS9E,EAAE8E,OAAO,GAAKnL,UAAU,GAAI1S,EAAQA,GAAlEmF,KAAiF8D,UAAU+O,WAAU,GAC7G3T,EAAEsD,WAAW7E,EAAKgb,gBAAe9d,EAAQ8C,EAAKgb,aAAa5e,KAAK+J,EAAWjJ,EAAO8C,IAAS9C,GAE/F+a,GAHY5V,MAGI,GAAM,EADtBnF,EAAQA,EAAMiM,WAAWlF,MAAM,KAE/B6B,EAAYiJ,IAAY5K,KAAK,KACxBnE,EAAKib,sBAAwBjb,EAAKmB,kBAL3BkB,KAKqD8D,UAAU+O,cAAgBpG,IAAoB3K,KAAK,KALxG9B,KAMF8D,UAAU0O,UAAU,KAGlCqG,WAAY,SAAoBjF,GAC5B,IAAkBP,EAANrT,KAAuB8D,UAAU+O,YACzClV,EAAKmb,kBACDzF,IAAa3G,IAAY5K,KAAK,IAC9BqQ,EAHInS,KAGe0M,IAAa6D,EAAS3L,OACnB,IAAfV,GACP6I,GALI/M,KAKSuQ,EAAS3L,QAGE,IAA5BjH,EAAKob,qBAA8C,IAAf7U,GACpC0Q,GAAcoE,WAAWja,MATjBiB,KAS8B,CAAE4T,GAAG,IAE/CnQ,EAAYiJ,IAAY5K,KAAK,KAEjCmX,gBAAiB,SAAyBrF,GAEtC1P,GAAa,EACTvG,EAAKib,sBAAwBzZ,EAAS+Z,gBAF9BlZ,MAGRmT,EAHQnT,KAGuB6D,IAGvCmV,WAAY,SAAoBpF,EAAGuF,GAmB/B,IAAIlU,EAAQjF,KACZ+S,WAAW,WACP,GAAI5T,EAAS+Z,gBAAkBjU,EAAO,CAClC,IAAImU,EAAgBrM,GAAM9H,GAQ1B,GAPIkU,IACI1Y,EACA2Y,EAAcxP,IAAMwP,EAAc/J,MAElC+J,EAAc/J,MAAQ+J,EAAcxP,KAGxCwP,EAAc/J,QAAU+J,EAAcxP,IACtC,OAAQjM,EAAK0b,sBACX,IAAK,OACH,MAEF,IAAK,SACHtM,GAAM9H,EAAO,EAAGyH,IAAYtL,QAC5B,MAEF,IAAK,SACH2L,GAAM9H,EAAOsL,EAAS3L,MACtB,MAEF,IAAK,aACH,GA3ChB,SAAsB0U,GAClB,GAAwB,KAApB3b,EAAK8T,WAAmB,CACxB,IAAI8H,EAAM1U,IAAa3C,eACvB,GAAIqX,EAAID,KAAc9c,GAAa+c,EAAID,GAAUrU,QAAUQ,EAAe6T,GAAW,CACjF,GAAIA,EAAW/I,GAAU,GAAI,OAAO,EACpC,IAAIiJ,EAAWta,EAAE2J,QAAQlL,EAAK8T,WAAY/E,KAC1C,IAAkB,IAAd8M,EAAiB,CACjB,IAAK,IAAIrI,KAAMoI,EACX,GAAIC,EAAWrI,GAAMoI,EAAIpI,GAAIlM,QAAUQ,EAAe0L,GAClD,OAAO,EAGf,OAAO,IAInB,OAAO,EA2BSsI,CAAaL,EAAc/J,OAAQ,CACnC,IAAImK,EAAW9M,IAAY5K,KAAK,IAAItC,QAAQ7B,EAAK8T,YACjD1E,GAAM9H,EAAOtH,EAAK+C,aAAe6P,EAASiJ,GAAYA,GACtD,MAGN,QACE,IAAIE,EAAgBN,EAAc/J,MAAOsK,EAAkB/U,EAAqB8U,GAAe,GAAOE,EAAerJ,EAASoJ,GAC9H,GAAID,EAAgBE,EAChB7M,GAAM9H,EAAQuL,EAAOkJ,GAAe,IAAUlJ,EAAOkJ,EAAgB,GAAG,GAAkCA,EAA1BnJ,EAASmJ,QACtF,CACH,IAAI9H,EAAM/M,IAAa3C,eAAeyX,GAAkBE,EAAKnU,EAAgBkU,EAAchI,EAAMA,EAAI9M,MAAMO,QAAU7I,EAAWoV,GAAMtQ,EAAcmE,EAAemU,EAAcC,EAAG/U,OACpL,GAAoB,KAAhBxD,GAAsBoL,IAAYkN,KAAkBtY,IAA+C,IAAhCuY,EAAG/U,MAAM6C,qBAA2D,IAA5BkS,EAAG/U,MAAMgB,iBAA4B0K,EAAOoJ,EAAcjc,EAAK+E,aAAemX,EAAG/U,MAAMkB,MAAQ1E,EAAa,CACvN,IAAI0P,EAAST,EAASqJ,IAClBF,GAAiB1I,GAAU0I,IAAkBE,KAC7CA,EAAe5I,GAGvBjE,GAAM9H,EAAO2U,OAM9B,IAEPE,SAAU,SAAkBlG,GACG1U,EAAfc,MAAZ,IAAqCvC,EAAMsP,GAA/B/M,MAA6C2T,EAAKC,EAAEkD,eAAiBlD,EAC7EuD,EAAgBjb,EAAOib,eAAiBxD,EAAGwD,cAAe4C,EAAWtZ,EAAQiM,IAAYpH,MAAM7H,EAAImM,IAAKnM,EAAI4R,OAAS3C,IAAYpH,MAAM7H,EAAI4R,MAAO5R,EAAImM,KAC1JuN,EAAc6C,QAAQ,OAAQvZ,EAAQsZ,EAASlY,UAAUC,KAAK,IAAMiY,EAASjY,KAAK,KAC9E3C,EAAS8a,aAAa9a,EAAS8a,YAAY,QAC/C9E,GAJYnV,EAIQ7D,EAAUgR,QAAQ6H,OAAQvX,GAC9C0U,EALYnS,KAKO0M,IAAa7H,IAAanJ,EAAGkY,EAAGnQ,IAAciJ,IAAY5K,KAAK,MAEtFoY,UAAW,SAAmBtG,GAC1B,IAAIjB,EAASzT,EAAEc,MACf,GAD8BA,KACpB8D,UAAW,CACjBqP,EAF0BnT,KAEK6D,GAC/B,IAAIwP,EAHsBrT,KAGL8D,UAAU+O,YAAajV,EAAS8O,IAAYpH,QAChD,KAAb+N,GAAmBzP,IAAcpH,IAC7BmB,EAAKib,wBAC2B,IAA5BhU,KAAiCyO,IAAa5G,IAAoB3K,KAAK,IACvElE,EAAS,GAET4G,GAAkB5G,KAGC,IAAvB+S,GAAW/S,KACXmV,WAAW,WACPJ,EAAOG,QAAQ,eAChB,GACCnV,EAAKmB,kBACLmH,IAEIrI,EADAD,EAAKib,qBACI,GAEAnM,IAAoBnH,UAIzC6M,EAzBsBnS,KAyBHpC,EAAQpB,EAAWoX,IAEtCnQ,IAAciJ,IAAY5K,KAAK,MAC/B2B,EAAY7F,EAAOkE,KAAK,IACxB6Q,EAAOG,QAAQ,aAI3BqH,gBAAiB,SAAyBvG,GAEtC1P,GAAa,EACT/E,EAAS+Z,gBAFDlZ,MAE4BrC,EAAKyc,iBACzCjH,EAHQnT,MAGwBS,EAAQiM,IAAYpH,QAAQzD,UAAY6K,KAAa5K,KAAK,MAGlGuY,YAAa,SAAqBzG,GAC1BnQ,IAAciJ,IAAY5K,KAAK,KAC/B4B,EAAIoP,QAAQ,UAEZnV,EAAKib,uBAAoD,IAA5BhU,KAAiC3E,EAAG6D,UAAU+O,WAAa5S,EAAG6D,UAAU+O,cAAgBpG,IAAoB3K,KAAK,KAC9I7B,EAAG6D,UAAU0O,UAAU,IAEvB7U,EAAKmB,kBAA+C,IAA5B6R,GAAWjE,MACnCzM,EAAG6D,UAAU0O,UAAU,IAEvB7U,EAAK2c,qBACLra,EAAG6D,UAAU0O,UAAUvS,EAAG6D,UAAUyW,iBAAiB,GACrDxH,WAAW,WACPZ,EAAYlS,EAAIyM,MACjB,KAGX8N,WAAY,SAAoB5G,GAC5B3T,EAAG6D,UAAU3D,cAAe,EAC5B4S,WAAW,WACPrP,EAAIoP,QAAQ,aACb,KAGX,SAAS8C,GAAS3Q,EAAOiR,EAAUxY,EAAQ+c,EAAOC,GAC9C,IAAI5W,EAAY9D,MAAQiF,EAAMnB,UAAWiT,EAAa0D,EAAMnV,QAASqV,EAAY,GAAIC,GAAc,EAAG3K,EAASzT,EAM/G,GADAyJ,IACKvI,IAA8B,IAApBC,EAAKR,WAOhByd,EAAarK,EAASqK,OAPe,CACrC,IAAIC,EAAcpO,IAAoBnH,MAAM,EAAGiL,GAAU,IAAIzO,KAAK,IAAKqG,EAAU4O,EAAWjV,KAAK,IAAIgD,MAAM,IAAIjH,OAAO,IAAM1B,EAAU2e,YAAYD,GAAc,MAC5J1S,GAAWA,EAAQ/G,OAAS,IAC5B2V,EAAWvL,OAAO,EAAGrD,EAAQ/G,OAASyZ,EAAYzZ,QAClDwZ,EAAarK,EAASqK,KAKV,IAAhBA,GACA/V,IAAanJ,EAAI6U,EAASqK,GAC1BA,EAAa,GACV/V,IAAanJ,EAAIkf,EACxB9W,EAAUsO,SAAW,CACjB/C,MAAOuL,GAEX1b,EAAE2D,KAAKkU,EAAY,SAASjU,EAAKsT,GAC7B,GAAIA,IAAa5Z,EACb,GAAIqI,IAAa3C,eAAeY,KAAStG,GAAaua,EAAWjU,KAAS2C,EAAe3C,IAAQ0N,EAAO1N,GAAK,KAA6E,IAApEgK,EAAQhK,EAAKiU,EAAWjU,IAAM,EAAMtG,EAAWA,GAAW,GAC5KqI,IAAanJ,QACV,CACH,IAAIyc,EAAW,IAAIjZ,EAAEkZ,MAAM,aAC3BD,EAAShC,MAAQC,EAAStM,WAAW,GACrC6Q,GAAavE,EACb,IAAIxE,EAAMhN,EAAqBpI,GAAW,IA7BtD,SAAyBsG,EAAK6X,GAE1B,OAAwB,IADNxW,GAAgB,EAAM,GAAG,GAAOmB,MAAMxC,EAAKyN,EAASzN,IAAMhB,KAAK,IAAItD,QAAQ,KAAM,IAAIgB,QAAQmb,KACjFnK,EAAO1N,KAASwE,EAAQxE,GAAKgC,MAAMU,YAAcmV,EAAUhY,OAAO,IAAgC,OAA1B2E,EAAQxE,GAAKgC,MAAMiB,IAAeuB,EAAQxE,GAAKgC,MAAMU,YAAc,IAAMmV,EAAUhY,OAAO,IAAuC,MAAjC2E,EAAQxE,GAAKgC,MAAMU,YAAsB8B,EAAQxE,EAAM,GAAGgC,MAAMU,YAAcmV,EAAUhY,OAAO,IAAoC,OAA9B2E,EAAQxE,EAAM,GAAGgC,MAAMiB,IAAeuB,EAAQxE,EAAM,GAAGgC,MAAMU,YAAc,IAAMmV,EAAUhY,OAAO,KA4BhYoY,CAAgBH,EAAYD,IAC7B1K,EAAS2E,GAAcoB,cAAcjc,KAAKkL,EAAOkT,GAAU,GAAM,EAAOza,EAAQoG,EAAUsO,SAAS/C,UAE/FuL,EAAa9W,EAAUsO,SAAS/C,MAAQ,EACxCsL,EAAY,IAGhB1K,EAAS2E,GAAcoB,cAAcjc,KAAKkL,EAAOkT,GAAU,GAAM,EAAOza,EAAQkU,EAAM,GAEtF3B,IACAkC,EAAY3V,EAAWkQ,IAAauD,EAAOsG,gBAAiB4B,GAAU,GACtErU,EAAUsO,SAAW,CACjB/C,MAAOY,EAAOsG,gBACd3M,IAAKqG,EAAOsG,qBAM5BL,GAAU/D,EAAYlN,EAAOyH,IAAauD,EAASA,EAAOsG,gBAAkB/Z,EAAWke,GAAmB,IAAIxb,EAAEkZ,MAAM,YAAasC,GAA4C,UAAzBA,EAAgBjI,MAE9K,SAAS8H,GAActV,GACnB,GAAIA,EAAO,CACP,GAAIA,EAAMnB,YAActH,EACpB,OAAOyI,EAAMpK,MAEboK,EAAMnB,WAAamB,EAAMnB,UAAU3D,cACnCyU,GAAc6D,cAAc1e,KAAKkL,GAGzC,IAAI+V,EAAU,GAAIzB,EAAM1U,IAAa3C,eACrC,IAAK,IAAI+Y,KAAQ1B,EACTA,EAAI0B,GAAMnW,OAA+B,MAAtByU,EAAI0B,GAAMnW,MAAMiB,IACnCiV,EAAQzV,KAAKgU,EAAI0B,GAAMhW,OAG/B,IAAIhH,EAAmC,IAAnB+c,EAAQ5Z,OAAe,IAAMX,EAAQua,EAAQnZ,UAAYmZ,GAASlZ,KAAK,IAC3F,GAAI5C,EAAEsD,WAAW7E,EAAKI,UAAW,CAC7B,IAAImd,GAAeza,EAAQiM,IAAYpH,QAAQzD,UAAY6K,KAAa5K,KAAK,IAC7E7D,EAAgBN,EAAKI,SAAShE,KAAK+J,EAAWoX,EAAajd,EAAeN,GAE9E,OAAOM,EAEX,SAAS8O,GAAM9H,EAAOoK,EAAOzF,EAAKuR,GAC9B,SAASC,EAAkB3d,GAIvB,OAHIgD,GAAwB,iBAARhD,GAAsBE,EAAKS,QAA+B,KAArBT,EAAK2D,cAAuBrB,IACjFxC,EAAMwC,EAAG6D,UAAU+O,YAAYzR,OAAS3D,GAErCA,EAEX,IAAI4d,EACJ,GAAIhM,IAAU7S,EA+DV,MAdI,mBAAoByI,GACpBoK,EAAQpK,EAAMqW,eACd1R,EAAM3E,EAAMsW,cACLrf,EAAOsf,cACdH,EAAQnf,EAAOsf,eAAeC,WAAW,IAC/BC,wBAAwBC,aAAe1W,GAASoW,EAAMK,0BAA4BzW,IACxFoK,EAAQgM,EAAMO,YACdhS,EAAMyR,EAAMQ,WAET1c,EAASoS,WAAapS,EAASoS,UAAUuK,cAChDT,EAAQlc,EAASoS,UAAUuK,cAC3BzM,EAAQ,EAAIgM,EAAMU,YAAYC,UAAU,aAAc/W,EAAMnB,UAAU+O,YAAYzR,QAClFwI,EAAMyF,EAAQgM,EAAMY,KAAK7a,QAEtB,CACHiO,MAAO8L,EAAc9L,EAAQ+L,EAAkB/L,GAC/CzF,IAAKuR,EAAcvR,EAAMwR,EAAkBxR,IAxD/C,GARI1K,EAAEuD,QAAQ4M,KACVzF,EAAMnJ,EAAQ4O,EAAM,GAAKA,EAAM,GAC/BA,EAAQ5O,EAAQ4O,EAAM,GAAKA,EAAM,IAEjCA,EAAMA,QAAU7S,IAChBoN,EAAMnJ,EAAQ4O,EAAMA,MAAQA,EAAMzF,IAClCyF,EAAQ5O,EAAQ4O,EAAMzF,IAAMyF,EAAMA,OAEjB,iBAAVA,EAAoB,CAC3BA,EAAQ8L,EAAc9L,EAAQ+L,EAAkB/L,GAEhDzF,EAAoB,iBADpBA,EAAMuR,EAAcvR,EAAMwR,EAAkBxR,IACbA,EAAMyF,EACrC,IAAI6M,EAAazV,WAAWxB,EAAMkX,cAAcC,aAAelgB,GAAQmgB,kBAAoBpX,EAAMkX,cAAcC,aAAelgB,GAAQmgB,iBAAiBpX,EAAO,MAAQA,EAAMqX,cAAcC,UAAY3S,EAMtM,GALA3E,EAAMuX,WAAaN,EAAajX,EAAMwX,YAAcP,EAAa,EACjEjX,EAAMnB,UAAUsO,SAAW,CACvB/C,MAAOA,EACPzF,IAAKA,GAEL3E,IAAU9F,EAAS+Z,cAAe,CAClC,GAAI,mBAAoBjU,EACpBA,EAAMqW,eAAiBjM,EACvBpK,EAAMsW,aAAe3R,OAClB,GAAI1N,EAAOsf,aAAc,CAE5B,GADAH,EAAQlc,EAAS2c,cACb7W,EAAMyX,aAAelgB,GAAkC,OAArByI,EAAMyX,WAAqB,CAC7D,IAAIC,EAAWxd,EAASyd,eAAe,IACvC3X,EAAM4X,YAAYF,GAEtBtB,EAAMyB,SAAS7X,EAAMyX,WAAYrN,EAAQpK,EAAMnB,UAAU+O,YAAYzR,OAASiO,EAAQpK,EAAMnB,UAAU+O,YAAYzR,QAClHia,EAAM0B,OAAO9X,EAAMyX,WAAY9S,EAAM3E,EAAMnB,UAAU+O,YAAYzR,OAASwI,EAAM3E,EAAMnB,UAAU+O,YAAYzR,QAC5Gia,EAAM2B,UAAS,GACf,IAAIC,EAAM/gB,EAAOsf,eACjByB,EAAIC,kBACJD,EAAIE,SAAS9B,QACNpW,EAAMmY,mBACb/B,EAAQpW,EAAMmY,mBACRJ,UAAS,GACf3B,EAAMgC,QAAQ,YAAazT,GAC3ByR,EAAMW,UAAU,YAAa3M,GAC7BgM,EAAMiC,UAEV5K,GAAgBzN,EAAO,CACnBoK,MAAOA,EACPzF,IAAKA,MAyBzB,SAAS2T,GAA8BC,GACnC,IAA4F/f,EAAqKiH,EAA7P9G,EAASuG,GAAgB,EAAMS,KAAwB,GAAM,GAAO6Y,EAAK7f,EAAOwD,OAAawQ,EAAMhN,IAAwB8Y,EAAY,GAAIC,EAAS9Y,IAAa3C,eAAe0P,GAAMnN,EAAYkZ,IAAWnhB,EAAYmhB,EAAOtY,QAAQC,QAAU9I,EACtP,IAAKiB,EAAMmU,EAAM,EAAGnU,EAAMG,EAAOwD,OAAQ3D,IACrCiH,EAAUgB,EAAgBjI,EAAKgH,EAAWhH,EAAM,GAChDgH,EAAYC,EAAQW,QAAQC,QAC5BoY,EAAUjgB,GAAOyB,EAAEmB,QAAO,EAAM,GAAIqE,GAExC,IAAIkZ,EAAYD,GAAUA,EAAO9W,cAAgBrK,EAAYmhB,EAAOtY,QAAQsY,EAAO9W,aAAerK,EAClG,IAAKiB,EAAMggB,EAAK,EAAGhgB,EAAMmU,KACrBlN,EAAUgZ,EAAUjgB,IACPqH,MAAMC,aAAeL,EAAQI,MAAM6C,oBAAsBjD,EAAQI,MAAMgB,gBAAkB8X,IAAcA,IAAcF,EAAUjgB,GAAK4H,QAAQsY,EAAO9W,cAAoC,MAApBnC,EAAQI,MAAMiB,IAAmC,OAArBrB,EAAQI,MAAMiB,IAAerB,EAAQW,QAAQsY,EAAO9W,cAAgB2G,EAAsB9I,EAAQW,QAAQsY,EAAO9W,aAAaC,WAAWlF,MAAM,KAAMgc,EAAU9W,WAAWlF,MAAM,OAAkC,KAAzBwD,EAAS3H,GAAK,GAAGuI,OAAgBpI,EAAOH,KAASgI,EAAehI,EAAKiH,EAAQI,OAFxbrH,IAGtBggB,IAGR,OAAOD,EAAmB,CACtB1jB,EAAG2jB,EACHzX,IAAK0X,EAAUD,GAAMC,EAAUD,GAAI3Y,MAAQtI,GAC3CihB,EAER,SAASjZ,GAAkB5G,GACvBA,EAAOwD,OAAS,EAEhB,IADA,IAAgE+H,EAA5D0U,EAAW1Z,GAAgB,EAAM,GAAG,EAAM3H,GAAW,IAClD2M,EAAO0U,EAAS3S,WAAkB1O,GACrCoB,EAAO2H,KAAK4D,GAEhB,OAAOvL,EAEX,SAAS+S,GAAW/S,GAChB,GAAIsB,EAAEsD,WAAW7E,EAAKgT,YAAa,OAAOhT,EAAKgT,WAAW/S,EAAQD,GAClE,GAAoB,MAAhBA,EAAK0D,OAAgB,OAAO7E,EAChC,IAAIshB,GAAW,EAAOC,EAAMR,IAA8B,GAAOS,EAAM9L,EAAa6L,EAAIjkB,GACxF,GAAIikB,EAAI/X,MAAQxJ,GAAauhB,EAAI/X,IAAIF,gBAAkBiY,EAAI/X,IAAIjB,aAAegZ,EAAI/X,IAAI2B,mBAAoB,CACtGmW,GAAW,EACX,IAAK,IAAIjkB,EAAI,EAAGA,GAAKmkB,EAAKnkB,IAAK,CAC3B,IAAIiE,EAAO4H,EAAgB7L,GAAGiL,MAC9B,GAAgB,OAAZhH,EAAKiI,IAAelB,IAAa3C,eAAerI,KAAO2C,IAAkC,IAArBsB,EAAKiH,cAAoD,IAA5BjH,EAAK6J,oBAA2C,OAAZ7J,EAAKiI,IAAenI,EAAO/D,KAAO4L,EAAe5L,EAAGiE,GAAO,CAChMggB,GAAW,EACX,QAIZ,OAAOA,EAEX,SAAS3I,GAAalQ,EAAO6P,EAAGrX,EAAKC,EAAQugB,GACzC,IAAItgB,EAAK+C,cAAgBD,KACjBqU,IAAM3Y,EAAUgR,QAAQ4H,UACxBD,EAAI3Y,EAAUgR,QAAQ6H,OACfF,IAAM3Y,EAAUgR,QAAQ6H,SAC/BF,EAAI3Y,EAAUgR,QAAQ4H,WAEtBtU,GAAO,CACP,IAAIyd,EAAOzgB,EAAImM,IACfnM,EAAImM,IAAMnM,EAAI4R,MACd5R,EAAI4R,MAAQ6O,EAepB,GAZIpJ,IAAM3Y,EAAUgR,QAAQ4H,WAAatX,EAAImM,IAAMnM,EAAI4R,MAAQ,GAC3D5R,EAAI4R,MAAQ6C,EAAazU,EAAI4R,OACzBxK,IAAa3C,eAAezE,EAAI4R,SAAW7S,GAAaqI,IAAa3C,eAAezE,EAAI4R,OAAOpK,QAAUtH,EAAKwgB,gBAC9G1gB,EAAI4R,SAEDyF,IAAM3Y,EAAUgR,QAAQ6H,QAAUvX,EAAI4R,QAAU5R,EAAImM,MAC3DnM,EAAImM,IAAM4G,EAAO/S,EAAImM,KAAK,IAAS/E,IAAa3C,eAAezE,EAAImM,MAAQ/E,IAAa3C,eAAezE,EAAImM,KAAK3E,QAAUtH,EAAK8T,WAAahU,EAAImM,IAAM,EAAI2G,EAAS9S,EAAImM,KAAO,EAC1K/E,IAAa3C,eAAezE,EAAI4R,SAAW7S,GAAaqI,IAAa3C,eAAezE,EAAI4R,OAAOpK,QAAUtH,EAAKwgB,gBAC9G1gB,EAAImM,OAGZmG,EAAetS,IACA,IAAXC,IAAuC,IAApBC,EAAK+E,YAAuC,OAAf/E,EAAKV,MAAgB,CACrE,IAAIgT,EAAShC,GAAU,GACvB,GAAIgC,EAAQ,CACR,IAAIe,EAASf,EAAOlD,QAAUvQ,EAAYyT,EAAOlD,MAAQkD,EAAOxS,IAAM8S,EAASN,EAAOxS,IAAI4R,MAAQY,EAAOxS,IAAI4R,MAAQY,EAAOxS,KAAOmH,GAAsB,GAAG,IACxJkQ,IAAM3Y,EAAUgR,QAAQ6H,QAAUvX,EAAI4R,MAAQ2B,IAC9CvT,EAAI4R,OAIhB,IAAIuC,EAAMhN,EAAqBnH,EAAI4R,OAAO,GAC1C,GAAIuC,EAAMnU,EAAI4R,QAAwB,IAAf5R,EAAI4R,MACvBxK,IAAanJ,EAAI6U,EAASqB,QACvB,IAAe,IAAXlU,IACPmH,IAAanJ,EAAI+B,EAAI4R,OACD,IAAhB4O,GACA,KAAOpZ,IAAanJ,EAAIkW,GAAO/M,IAAa3C,eAAe2C,IAAanJ,KAAOc,GAC3EqI,IAAanJ,IAK7B,SAAS0iB,GAAoBnZ,GACzB,IAAIoZ,GAAiBpZ,EAAMkX,cAAcC,aAAelgB,GAAQmgB,iBAAiBpX,EAAO,MAgCpF4Y,EAAW1e,EAASgE,cAAc,OACtC0a,EAASS,MAAMC,MAAQF,EAAcE,MACrCV,EAASS,MAAME,UAAYH,EAAcG,UACzC5a,EAAYzE,EAASgE,cAAc,OACnC8B,EAAMnB,UAAUF,UAAYA,EAC5BA,EAAU6a,UAAY,eACtBxZ,EAAM0W,WAAW+C,aAAa9a,EAAWqB,GACzCA,EAAM0W,WAAWgD,YAAY1Z,GAC7BrB,EAAUiZ,YAAY5X,GACtBrB,EAAUiZ,YAAYgB,GACtB5Y,EAAMqZ,MAAMM,KAAOf,EAASgB,WAAa,KACzC3f,EAAE0E,GAAW6P,GAAG,aAAc,SAASG,GACnC,OAAOgB,GAAcqE,gBAAgBlf,KAAKkL,EAAO,CAAE2O,MAEvD1U,EAAE0E,GAAW6P,GAAG,aAAc,SAASG,GACnC,OAAOgB,GAAcuF,gBAAgBpgB,KAAKkL,EAAO,CAAE2O,MAEvD1U,EAAE0E,GAAW6P,GAAG,QAAS,SAASG,GAE9B,OADA7G,GAAM9H,EAjDV,SAAsB6Z,GAClB,IAAwC1M,EAApCwB,EAAIzU,EAASgE,cAAc,QAC/B,IAAK,IAAImb,KAASD,EACVnS,MAAMoS,KAAqC,IAA3BA,EAAM9e,QAAQ,UAC9BoU,EAAE0K,MAAMA,GAASD,EAAcC,IAGvC1K,EAAE0K,MAAMS,cAAgBV,EAAcU,cACtCnL,EAAE0K,MAAMU,cAAgBX,EAAcW,cACtCpL,EAAE0K,MAAM9O,SAAW,WACnBoE,EAAE0K,MAAMW,OAAS,OACjBrL,EAAE0K,MAAMC,MAAQ,OAChB3K,EAAE0K,MAAMY,WAAa,SACrBtL,EAAE0K,MAAMa,WAAa,SACrBhgB,EAASigB,KAAKvC,YAAYjJ,GAC1B,IAAgEyL,EAA5DC,EAAYra,EAAMnB,UAAU+O,YAAa0M,EAAgB,EAC7D,IAAKnN,EAAW,EAAGiN,EAAMC,EAAUle,OAAQgR,GAAYiN,EAAKjN,IAAY,CAEpE,GADAwB,EAAE4L,WAAaF,EAAU3c,OAAOyP,IAAa,IACzCwB,EAAE6L,aAAeX,EAAS,CAC1B,IAAIY,EAAUZ,EAAUS,EACpBI,EAAU/L,EAAE6L,YAAcX,EAC9BlL,EAAE4L,UAAYF,EAAU3c,OAAOyP,GAC/BsN,GAAW9L,EAAE6L,YAAc,EAC3BrN,EAAWsN,EAAUC,EAAUvN,EAAW,EAAIA,EAC9C,MAEJmN,EAAgB3L,EAAE6L,YAGtB,OADAtgB,EAASigB,KAAKT,YAAY/K,GACnBxB,EAoBMwN,CAAahM,EAAEiM,UACrBjL,GAAcoE,WAAWjf,KAAKkL,EAAO,CAAE2O,MAGtD,SAASlB,GAAgBzN,EAAOmN,EAAU0N,GACtC,IAAyChiB,EAAM4G,EAASD,EAApDE,EAAe,GAAIob,GAAW,EAAiCtiB,EAAM,EACzE,SAASuiB,EAAS9H,GAEd,GADIA,IAAU1b,IAAW0b,EAAQ,IAC5B6H,GAAyB,OAAZjiB,EAAKiI,IAAerB,EAAQO,QAAUzI,EAGjD,GAAIujB,IAAyB,OAAZjiB,EAAKiI,IAAerB,EAAQO,QAAUzI,GAA0B,KAAbsB,EAAKkI,KAAa,CACzF+Z,GAAW,EACX,IAAIE,EAAMtb,EAAavD,OACvBuD,EAAasb,EAAM,GAAKtb,EAAasb,EAAM,GAAK,UAChDtb,EAAaY,KAAK2S,QACfvT,EAAaY,KAAK2S,QAPrB6H,GAAW,EACXpb,EAAaY,KAAK,2BAA6B2S,GAcvD,GAAItU,IAAcpH,EAAW,CACzB,IAAIoB,EAAS8O,IASb,GARI0F,IAAa5V,EACb4V,EAAWrF,GAAM9H,GACVmN,EAAS/C,QAAU7S,IAC1B4V,EAAW,CACP/C,MAAO+C,EACPxI,IAAKwI,KAGC,IAAV0N,EAAgB,CAChB,IAAIlO,EAAMhN,IACV,GACQC,IAAa3C,eAAezE,IAC5BiH,EAAUG,IAAa3C,eAAezE,GACtCK,EAAO4G,EAAQI,MACfL,EAAYC,EAAQW,QAAQC,QAC5B0a,EAASpiB,EAAOH,MAEhBiH,EAAUgB,EAAgBjI,EAAKgH,EAAWhH,EAAM,GAChDK,EAAO4G,EAAQI,MACfL,EAAYC,EAAQW,QAAQC,SACJ,IAApB3H,EAAKgI,YAAwBlI,EAAMmU,GAAkC,iBAApBjU,EAAKgI,YAA2BE,SAASlI,EAAKgI,aAAehI,EAAKgI,WAAalI,EAChIuiB,EAASva,EAAehI,EAAKK,IAC1BiiB,GAAW,GAEtBtiB,WACMkG,IAAcnH,GAAaiB,EAAMkG,KAA2B,OAAZ7F,EAAKiI,IAA4B,KAAbjI,EAAKkI,MAAe4L,EAAMnU,GAAOsiB,GAC3GA,GAAUC,IAjCd7gB,EAAS+Z,gBAAkBjU,IAC3BN,EAAa6G,OAAO4G,EAAS/C,MAAO,EAAG+C,EAAS/C,QAAU+C,EAASxI,KAAOwI,EAASxI,IAAM/E,IAAavC,WAAa,qFAAuF,kCAC1MqC,EAAa6G,OAAO4G,EAASxI,IAAM,EAAG,EAAG,YAkC7C,IAAIiU,EAAWja,EAAUsc,qBAAqB,OAAO,GACrDrC,EAAS2B,UAAY7a,EAAa7C,KAAK,IACvCmD,EAAMnB,UAAUqc,kBAAkBlb,EAAO4Y,IAoNjD,GAAIra,IAAchH,EACd,OAAQgH,EAAU4c,QAChB,IAAK,aAEH,OADAngB,EAAKuD,EAAUvD,GACR0Q,GAAWjE,KAEpB,IAAK,gBAOH,OANIzM,IAAOzD,GAAagH,EAAU3I,QAAU2B,IACxC+W,EAAc/P,EAAU3I,MACxB0Y,GAAerU,EAAEsD,WAAW7E,EAAKgb,eAAgBhb,EAAKgb,aAAa5e,KAAK+J,EAAWyP,EAAa5V,IAAuB4V,GAAa3R,MAAM,IAC1IgU,GAAS7b,KAAKiG,KAAMxD,GAAW,GAAO,EAAO+W,GACzCrU,EAAEsD,WAAW7E,EAAK4U,gBAAgB5U,EAAK4U,cAAcxY,KAAK+J,EAAWtH,EAAWkQ,IAAa,EAAG/O,IAEjG4c,GAActa,GAEvB,IAAK,QAhOX,SAAc+M,GAkIVwG,GAAWS,IAAIjH,GACf,IAAI3J,EAlIJ,SAAgC4B,EAAOtH,GAkHnC,IAAI0iB,EAAcpb,EAAMqb,aAAa,QACjCjd,EAAgC,UAAlB4B,EAAMsb,UAA2E,IAApDrhB,EAAE2J,QAAQwX,EAAa1iB,EAAK6iB,oBAA6Bvb,EAAMwb,mBAAuC,aAAlBxb,EAAMsb,QACzI,IAAKld,EACD,GAAsB,UAAlB4B,EAAMsb,QAAqB,CAC3B,IAAItgB,EAAKd,EAASgE,cAAc,SAChClD,EAAGqD,aAAa,OAAQ+c,GACxBhd,EAA0B,SAAZpD,EAAGwS,KACjBxS,EAAK,UACFoD,EAAc,UAKzB,OAHoB,IAAhBA,EA3HJ,SAA4B+P,GACxB,IAAIsN,EACAC,EAiCJ,SAASvmB,IACL,OAAI4F,KAAK8D,UACE9D,KAAK8D,UAAUnG,KAAKR,WAAa6C,KAAK8D,UAAUyW,iBAA8C,IAA5B3V,MAAmD,IAAlBjH,EAAKijB,SAAoBzhB,EAAS+Z,gBAAkBlZ,MAAQrC,EAAKib,sBAAwBnY,EAAQ+D,GAAkBkI,IAAYpH,SAASzD,UAAY2C,GAAkBkI,IAAYpH,UAAUxD,KAAK,IAAM4e,EAAS3mB,KAAKiG,MAAQ,GAC7T0gB,EAAS3mB,KAAKiG,MAEhC,SAAS6gB,EAAOhmB,GACZ8lB,EAAS5mB,KAAKiG,KAAMnF,GAChBmF,KAAK8D,WACL5E,EAAEc,MAAM8S,QAAQ,WAAY,CAAEjY,IAWtC,IAAKuY,EAAItP,UAAUgd,WAAY,CAC3B,IAA6B,IAAzBnjB,EAAKojB,gBAA0B,CAC/B,GAAIzmB,OAAO0mB,yBAA0B,CACI,mBAA1B1mB,OAAO2mB,iBACd3mB,OAAO2mB,eAA+C,WAA9BjiB,EAAQ,OAAOkiB,WAA0B,SAAS5lB,GACtE,OAAOA,EAAO4lB,WACd,SAAS5lB,GACT,OAAOA,EAAO2D,YAAYzD,YAGlC,IAAI2lB,EAAgB7mB,OAAO2mB,eAAiB3mB,OAAO0mB,yBAAyB1mB,OAAO2mB,eAAe7N,GAAM,SAAW5W,EAC/G2kB,GAAiBA,EAAc1mB,KAAO0mB,EAAcC,KACpDV,EAAWS,EAAc1mB,IACzBkmB,EAAWQ,EAAcC,IACzB9mB,OAAOC,eAAe6Y,EAAK,QAAS,CAChC3Y,IAAKL,EACLgnB,IAAKP,EACLQ,cAAc,KAEK,UAAhBjO,EAAImN,UACXG,EAAW,WACP,OAAO1gB,KAAKshB,aAEhBX,EAAW,SAAkB9lB,GACzBmF,KAAKshB,YAAczmB,GAEvBP,OAAOC,eAAe6Y,EAAK,QAAS,CAChC3Y,IAAKL,EACLgnB,IAAKP,EACLQ,cAAc,UAGfliB,EAASoiB,kBAAoBnO,EAAImO,iBAAiB,WACzDb,EAAWtN,EAAImO,iBAAiB,SAChCZ,EAAWvN,EAAIoO,iBAAiB,SAChCpO,EAAIqO,iBAAiB,QAASrnB,GAC9BgZ,EAAIsO,iBAAiB,QAASb,IAElCzN,EAAItP,UAAUgd,WAAaJ,EAC3BtN,EAAItP,UAAU6d,WAAahB,EAE/BvN,EAAItP,UAAU+O,UAAY,SAAS+O,GAC/B,OAAOnhB,IAAyB,IAAhBmhB,EAAuBlB,EAAS3mB,KAAKiG,KAAKC,IAAI2B,MAAM,IAAIC,UAAUC,KAAK,IAAM4e,EAAS3mB,KAAKiG,KAAKC,KAEpHmT,EAAItP,UAAU0O,UAAY,SAAS3X,EAAO+mB,GACtCjB,EAAS5mB,KAAKiG,KAAKC,GAAc,OAAVpF,GAAkBA,IAAU2B,EAAY,IAAqB,IAAhBolB,GAAwBnhB,EAAQ5F,EAAM+G,MAAM,IAAIC,UAAUC,KAAK,IAAMjH,IAEzI6lB,IAAalkB,IACbkkB,EAAW,WACP,OAAO1gB,KAAKnF,OAEhB8lB,EAAW,SAAkB9lB,GACzBmF,KAAKnF,MAAQA,GAvGzB,SAAsB4X,GAClB,GAAIvT,EAAE2iB,WAAa3iB,EAAE2iB,SAASpP,KAAUjW,IAAiD,IAApC0C,EAAE2iB,SAASpP,GAAMqP,gBAA0B,CAC5F,IAAIC,EAAa7iB,EAAE2iB,SAASpP,IAASvT,EAAE2iB,SAASpP,GAAMhY,IAAMyE,EAAE2iB,SAASpP,GAAMhY,IAAM,SAASuS,GACxF,OAAOA,EAAKnS,OAEZmnB,EAAa9iB,EAAE2iB,SAASpP,IAASvT,EAAE2iB,SAASpP,GAAM2O,IAAMliB,EAAE2iB,SAASpP,GAAM2O,IAAM,SAASpU,EAAMnS,GAE9F,OADAmS,EAAKnS,MAAQA,EACNmS,GAEX9N,EAAE2iB,SAASpP,GAAQ,CACfhY,IAAK,SAAauS,GACd,GAAIA,EAAKlJ,UAAW,CAChB,GAAIkJ,EAAKlJ,UAAUnG,KAAKR,WACpB,OAAO6P,EAAKlJ,UAAUyW,gBAEtB,IAAItK,EAAS8R,EAAW/U,GACxB,OAA8F,IAAvFpI,EAAqBpI,EAAWA,EAAWwQ,EAAKlJ,UAAUtG,QAAQ0E,kBAA4C,IAAlBvE,EAAKijB,SAAoB3Q,EAAS,GAEtI,OAAO8R,EAAW/U,IAE7BoU,IAAK,SAAapU,EAAMnS,GACpB,IAAqBoV,EAAjBgS,EAAQ/iB,EAAE8N,GAKd,OAJAiD,EAAS+R,EAAWhV,EAAMnS,GACtBmS,EAAKlJ,WACLme,EAAMnP,QAAQ,WAAY,CAAEjY,IAEzBoV,GAEX6R,gBAAgB,IA6EpBI,CAAa9O,EAAIX,MA9DzB,SAAuCW,GACnCI,GAAWC,GAAGL,EAAK,aAAc,SAASf,GACtC,IAAIM,EAASzT,EAAEc,MAAqBnF,EAANmF,KAAoB8D,UAAU+O,YACxDhY,IAAU6R,IAAY5K,KAAK,KAC3B6Q,EAAOG,QAAQ,cA2DnBqP,CAA8B/O,KAetCgP,CAAmBnd,GAChBA,EAAMnB,UAAYtH,EAClB6G,EAGOgf,CAAuBrV,EAAMrP,GAC/C,IAAoB,IAAhB0F,IAEAK,EAAMxE,EADNe,EAAK+M,GAELnJ,EAAsB5D,EAAGqB,aAEN,KADnBqC,EAAY1D,IAAOzD,EAAYyD,EAAG0D,UAAYnH,KACxBmH,EAAYnH,IACX,IAAnBmB,EAAKiG,WACLwa,GAAoBne,GAEpBR,IACI,cAAeQ,IACfA,EAAG/B,UAAYP,EAAKO,UACpB+B,EAAGqD,aAAa,YAAa3F,EAAKO,aAEH,IAA/BP,EAAK2kB,wBACD,gBAAiBriB,EACjBA,EAAGsiB,aAAc,IAEM,IAAnB5kB,EAAKiG,WACLwa,GAAoBne,GAExBA,EAAGwS,KAAO,eAIF,IAAhBpP,IACApD,EAAGqD,aAAa,YAAa3F,EAAK2S,YAClCkD,GAAWC,GAAGxT,EAAI,SAAU2U,GAAcyF,aAC1C7G,GAAWC,GAAGxT,EAAI,QAAS2U,GAAc4F,YACzChH,GAAWC,GAAGxT,EAAI,OAAQ2U,GAAcsF,WACxC1G,GAAWC,GAAGxT,EAAI,QAAS2U,GAAciE,aAClB,IAAnBlb,EAAKiG,YACL4P,GAAWC,GAAGxT,EAAI,QAAS2U,GAAcoE,YACzCxF,GAAWC,GAAGxT,EAAI,aAAc2U,GAAcqE,iBAC9CzF,GAAWC,GAAGxT,EAAI,aAAc2U,GAAcuF,kBAElD3G,GAAWC,GAAGxT,EAAI,QAAS2U,GAAcgC,YACzCpD,GAAWC,GAAGxT,EAAI,MAAO2U,GAAckF,UACvCtG,GAAWC,GAAGxT,EAAI,WAAYtC,EAAK6kB,YACnChP,GAAWC,GAAGxT,EAAI,aAActC,EAAK8kB,cACrCjP,GAAWC,GAAGxT,EAAI,UAAWtC,EAAK+kB,WAC7BjjB,IAAkC,IAAxB9B,EAAKglB,eAIhB1iB,EAAGqT,gBAAgB,cAHnBE,GAAWC,GAAGxT,EAAI,UAAW2U,GAAcC,cAC3CrB,GAAWC,GAAGxT,EAAI,WAAY2U,GAAcoB,gBAIhDxC,GAAWC,GAAGxT,EAAI,QAAS2U,GAAc0C,oBACzC9D,GAAWC,GAAGxT,EAAI,cAAe2U,GAAc0D,mBAEnD9E,GAAWC,GAAGxT,EAAI,WAAY2U,GAAc6D,eAC5ChV,EAAYgJ,IAAoB3K,KAAK,IACA,KAAjC7B,EAAG6D,UAAU+O,WAAU,KAA8C,IAA9BlV,EAAKib,sBAAkCzZ,EAAS+Z,gBAAkBjZ,GAAI,CAC7G,IAAI2iB,EAAe1jB,EAAEsD,WAAW7E,EAAKgb,eAAgBhb,EAAKgb,aAAa5e,KAAK+J,EAAW7D,EAAG6D,UAAU+O,WAAU,GAAOlV,IAAwCsC,EAAG6D,UAAU+O,WAAU,GAC/J,KAAjB+P,GAAqBhN,GAAS3V,GAAI,GAAM,EAAO2iB,EAAahhB,MAAM,KACtE,IAAIhE,EAAS8O,IAAYpH,QACzB7B,EAAY7F,EAAOkE,KAAK,KACG,IAAvB6O,GAAW/S,IACPD,EAAKmB,iBACLmH,IAGJtI,EAAKib,sBAAwBzZ,EAAS+Z,gBAAkBjZ,KACxB,IAA5B2E,IACAhH,EAAS,GAET4G,GAAkB5G,MAGQ,IAA9BD,EAAKib,sBAAkCjb,EAAKmb,iBAAmB3Z,EAAS+Z,gBAAkBjZ,GAAuC,KAAjCA,EAAG6D,UAAU+O,WAAU,KAAcV,EAAYlS,EAAIrC,GACrJuB,EAAS+Z,gBAAkBjZ,GAC3B8M,GAAM9M,EAAIsQ,EAAS3L,OAsB3BvH,CAAK4C,GACL,MAEF,IAAK,SAGH,OAFAsT,GAAerU,EAAEsD,WAAW7E,EAAKgb,eAAgBhb,EAAKgb,aAAa5e,KAAK+J,EAAWN,EAAU3I,MAAO8C,IAA2B6F,EAAU3I,OAAO+G,MAAM,IACtJgU,GAAS7b,KAAKiG,KAAMxD,GAAW,GAAM,EAAO+W,GACxC/P,EAAUtC,SACH,CACHrG,MAAO4F,EAAQiM,IAAYpH,QAAQzD,UAAUC,KAAK,IAAM4K,IAAY5K,KAAK,IACzEZ,SAAUqC,EAAUxJ,KAAKiG,KAAM,CAC3BogB,OAAQ,eACT5iB,EAASG,IAGb8C,EAAQiM,IAAYpH,QAAQzD,UAAUC,KAAK,IAAM4K,IAAY5K,KAAK,IAE3E,IAAK,UACC0B,EAAU3I,OACV0Y,EAAc/P,EAAU3I,MAAM+G,MAAM,IACpCgU,GAAS7b,KAAKiG,KAAMxD,GAAW,GAAM,EAAM+W,IAE3C/P,EAAU3I,MAAQ6R,IAAY5K,KAAK,IAIvC,IAFA,IAAIlE,GAAS8O,IACTmW,GAAKtF,KAAiCuF,GAAOllB,GAAOwD,OAAS,EAC3D0hB,GAAOD,KACLrS,EAAOsS,IADEA,MAIjB,OADAllB,GAAO4N,OAAOqX,GAAIC,GAAO,EAAID,IACtBlS,GAAW/S,KAAW4F,EAAU3I,QAAU6R,IAAY5K,KAAK,IAEpE,IAAK,eACH,OAAO2K,IAAoB3K,KAAK,IAElC,IAAK,SAgCH,OA/BI7B,GAAMA,EAAG6D,YACT5E,EAAE8U,KAAK/T,EAAI,kBAAmB,MAC9ByD,EAAMxE,EAAEe,GACRA,EAAG6D,UAAU0O,UAAU7U,EAAKR,WAAaod,GAActa,GAAMA,EAAG6D,UAAU+O,WAAU,IACpFW,GAAWS,IAAIhU,GACXA,EAAG6D,UAAUF,aACbA,EAAY3D,EAAG6D,UAAUF,WACf+a,YAAY1e,GACtB2D,EAAU+X,WAAW+C,aAAaze,EAAI2D,GACtCA,EAAU+X,WAAWgD,YAAY/a,IAGjCtJ,OAAO0mB,0BAA4B1mB,OAAO2mB,eAC1B3mB,OAAO0mB,yBAAyB1mB,OAAO2mB,eAAehhB,GAAK,UAEnEA,EAAG6D,UAAUgd,YACbxmB,OAAOC,eAAe0F,EAAI,QAAS,CAC/BxF,IAAKwF,EAAG6D,UAAUgd,WAClBM,IAAKnhB,EAAG6D,UAAU6d,WAClBN,cAAc,IAInBliB,EAASoiB,kBAAoBthB,EAAGshB,iBAAiB,UACpDthB,EAAG6D,UAAUgd,aACb7gB,EAAGwhB,iBAAiB,QAASxhB,EAAG6D,UAAUgd,YAC1C7gB,EAAGyhB,iBAAiB,QAASzhB,EAAG6D,UAAU6d,aAGlD1hB,EAAG6D,UAAYtH,GAEZyD,EAGT,IAAK,cACH,GAAIf,EAAEuD,QAAQjF,EAAQ0D,UAAW,CAC7B,IAAI6hB,GAAa5e,GAAgB,EAAM,GAAG,GAAOrC,KAAK,IAOtD,OANA5C,EAAE2D,KAAKrF,EAAQ0D,SAAU,SAAS4B,EAAKkgB,GACnC,GAAIA,EAAK3lB,OAAS0lB,GAEd,OADAA,GAAaC,GACN,IAGRD,GAEX,OAAOvlB,EAAQ0D,UAI3B,OAvpFA/E,EAAUX,UAAY,CAClBynB,cAAe,iBACf3iB,SAAU,CACNgB,YAAa,IACb4hB,eAAgB,CAAE,IAAK,KACvBzhB,iBAAkB,CAAE,IAAK,KACzBD,YAAa,CAAE,IAAK,KACpBwB,iBAAkB,IAClBmgB,WAAY,KACZ9lB,KAAM,KACNJ,MAAO,KACPulB,WAAYtjB,EAAEkkB,KACdX,aAAcvjB,EAAEkkB,KAChBV,UAAWxjB,EAAEkkB,KACb/hB,OAAQ,EACRjD,QAAQ,EACRjB,YAAY,EACZmd,oBAAoB,EACpB1B,sBAAsB,EACtBtI,YAAY,EACZxR,iBAAiB,EACjBe,MAAO,KACPiW,UAAW5W,EAAEkkB,KACbzK,aAAc,KACdta,cAAe,SAAuBC,EAAaX,GAC/C,OAAOuB,EAAEsD,WAAW7E,EAAKgb,cAAgBhb,EAAKgb,aAAa5e,KAAKiG,KAAM1B,EAAaX,GAAQW,GAE/FiU,cAAe,KACfxU,SAAU,KACV+a,iBAAiB,EACjBsB,iBAAiB,EACjBzD,gBAAiBzX,EAAEkkB,KACnBle,0BAA2B,IAC3BxE,cAAc,EACd2iB,YAAY,EACZ5N,cAAc,EACdhE,WAAY,GACZgF,aAAa,EACb0H,eAAgB,GAChBzb,WAAY,KACZqW,oBAAoB,EACpB1E,YAAY,EACZmM,kBAAmB,CAAE,OAAQ,MAAO,MAAO,WAAY,UACvDzK,WAAY,CAAE,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,EAAG,KAC3IpF,WAAY,KACZR,cAAe,KACfS,eAAgB,KAChB0S,uBAAwB9mB,EACxBmJ,YAAY,EACZib,UAAU,EACV+B,gBAAgB,EAChB5B,iBAAiB,EACjB1H,qBAAsB,MACtBzc,OAAQ,KACRsB,UAAW,WACX0F,WAAW,EACX0e,uBAAuB,EACvBiB,sBAAsB,EACtBvR,gBAAgB,GAEpB1U,YAAa,CACTkmB,EAAG,CACC7mB,UAAW,WACX8mB,iBAAkB,KAEtB5T,EAAG,CACClT,UAAW,oBACX8mB,iBAAkB,KAEtBhlB,IAAK,CACD9B,UAAW,4BAGnBmE,QAAS,GACTiB,WAAY,GACZ1E,KAAM,SAAcqmB,GAChB,IAAI7P,EAAO7T,KAiFX,MA3BqB,iBAAV0jB,IACPA,EAAQvkB,EAASwkB,eAAeD,IAAUvkB,EAASykB,iBAAiBF,IAExEA,EAAQA,EAAM5P,SAAW,CAAE4P,GAAUA,EACrCxkB,EAAE2D,KAAK6gB,EAAO,SAAS5gB,EAAK7C,GACxB,IAAI4jB,EAAa3kB,EAAEmB,QAAO,EAAM,GAAIwT,EAAKlW,MACzC,GA3DJ,SAAgCyV,EAAKzV,EAAM6C,EAAayiB,GACpD,IAAkC,IAA9BtlB,EAAK4lB,qBAA+B,CACpC,IAAmDO,EAAQC,EAAaC,EAAYtoB,EAAhFuoB,EAAc7Q,EAAIkN,aAAa2C,GAC/BiB,EAAe,SAAsBJ,EAAQE,GAE1B,QADnBA,EAAaA,IAAexnB,EAAYwnB,EAAa5Q,EAAIkN,aAAa2C,EAAgB,IAAMa,MAE9D,iBAAfE,IACsB,IAAzBF,EAAOtkB,QAAQ,MAAawkB,EAAa9nB,EAAO8nB,GAAqC,UAAfA,EAAwBA,GAAa,EAA+B,SAAfA,IAAuBA,GAAa,IAEvKxjB,EAAYsjB,GAAUE,IAO9B,GAJIC,GAA+B,KAAhBA,IACfA,EAAcA,EAAYzlB,QAAQ,KAAM,KACxCulB,EAAcI,KAAKC,MAAM,IAAMH,EAAc,MAE7CF,EAEA,IAAKroB,KADLsoB,EAAaxnB,EACHunB,EACN,GAAwB,UAApBroB,EAAE6C,cAA2B,CAC7BylB,EAAaD,EAAYroB,GACzB,MAQZ,IAAKooB,KAJLI,EAAa,QAASF,GAClBxjB,EAAYX,OACZc,EAAaH,EAAYX,MAAOW,EAAa7C,GAElCA,EAAM,CACjB,GAAIomB,EAEA,IAAKroB,KADLsoB,EAAaxnB,EACHunB,EACN,GAAIroB,EAAE6C,gBAAkBulB,EAAOvlB,cAAe,CAC1CylB,EAAaD,EAAYroB,GACzB,MAIZwoB,EAAaJ,EAAQE,IAY7B,OATA9kB,EAAEmB,QAAO,EAAM1C,EAAM6C,IACL,QAAZ4S,EAAIiR,KAAiB1mB,EAAK0lB,cAC1BjQ,EAAIkL,MAAME,UAAY,UAEV,QAAZpL,EAAIiR,KAAiB1mB,EAAK+C,gBAC1B0S,EAAIiR,IAAM,MACVjR,EAAIE,gBAAgB,OACpB3V,EAAK8C,OAAQ,GAEVnG,OAAO+P,KAAK7J,GAAaY,OAQ5BkjB,CAAuBrkB,EAAI4jB,EAAY3kB,EAAEmB,QAAO,EAAM,GAAIwT,EAAKrT,aAAcqT,EAAKoP,eAAgB,CAClG,IAAIzlB,EAAUuD,EAAgB8iB,EAAYhQ,EAAKtT,cAC3C/C,IAAYhB,IACRyD,EAAG6D,YAActH,IACjByD,EAAG6D,UAAUnG,KAAKR,YAAa,EAC/B8C,EAAG6D,UAAU6L,UAEjB1P,EAAG6D,UAAY,IAAI3H,EAAUK,EAAWA,GAAW,GACnDyD,EAAG6D,UAAUnG,KAAOkmB,EACpB5jB,EAAG6D,UAAUvD,aAAesT,EAAKtT,aACjCN,EAAG6D,UAAUtD,YAActB,EAAEmB,QAAO,EAAM,GAAIwT,EAAKrT,aACnDP,EAAG6D,UAAUrD,MAAQojB,EAAWpjB,OAASojB,EAAWnjB,aACpDT,EAAG6D,UAAU7D,GAAKA,EAClBA,EAAG6D,UAAUtG,QAAUA,EACvB0B,EAAE8U,KAAK/T,EAAI,kBAAmB4jB,GAC9BtgB,EAAUxJ,KAAKkG,EAAG6D,UAAW,CACzBsc,OAAQ,aAKjBsD,GAASA,EAAM,IAAKA,EAAM,GAAG5f,WAAoB9D,MAE5D8jB,OAAQ,SAAgBhkB,EAASykB,GAC7B,MAAuB,iBAAZzkB,EACAE,KAAKrC,KAAKmC,GAC4D,iBAAlD,IAAZA,EAA0B,YAAcd,EAAQc,KAC/DZ,EAAEmB,OAAOL,KAAKQ,YAAaV,GACvBE,KAAKC,KAAmB,IAAbskB,GACXvkB,KAAK3C,KAAK2C,KAAKC,IAEZD,WALJ,GAQXua,cAAe,SAAuB1f,GAElC,OADAmF,KAAKxC,QAAUwC,KAAKxC,SAAWuD,EAAgBf,KAAKrC,KAAMqC,KAAKO,cACxDgD,EAAUxJ,KAAKiG,KAAM,CACxBogB,OAAQ,gBACRvlB,MAAOA,KAGf8U,OAAQ,WACJ,OAAOpM,EAAUxJ,KAAKiG,KAAM,CACxBogB,OAAQ,YAGhBoE,aAAc,WAEV,OADAxkB,KAAKxC,QAAUwC,KAAKxC,SAAWuD,EAAgBf,KAAKrC,KAAMqC,KAAKO,cACxDgD,EAAUxJ,KAAKiG,KAAM,CACxBogB,OAAQ,kBAGhBqE,eAAgB,WACZ,OAAQzkB,KAAKrC,KAAKR,YAEtBwT,WAAY,WAER,OADA3Q,KAAKxC,QAAUwC,KAAKxC,SAAWuD,EAAgBf,KAAKrC,KAAMqC,KAAKO,cACxDgD,EAAUxJ,KAAKiG,KAAM,CACxBogB,OAAQ,gBAGhBsE,YAAa,WAET,OADA1kB,KAAKxC,QAAUwC,KAAKxC,SAAWuD,EAAgBf,KAAKrC,KAAMqC,KAAKO,cACxDgD,EAAUxJ,KAAKiG,KAAM,CACxBogB,OAAQ,iBAGhBtT,QAAS,SAAiBjS,GAEtB,OADAmF,KAAKxC,QAAUwC,KAAKxC,SAAWuD,EAAgBf,KAAKrC,KAAMqC,KAAKO,cACxDgD,EAAUxJ,KAAKiG,KAAM,CACxBogB,OAAQ,UACRvlB,MAAOA,KAGf8pB,OAAQ,SAAgB9pB,EAAOqG,GAE3B,OADAlB,KAAKxC,QAAUwC,KAAKxC,SAAWuD,EAAgBf,KAAKrC,KAAMqC,KAAKO,cACxDgD,EAAUxJ,KAAKiG,KAAM,CACxBogB,OAAQ,SACRvlB,MAAOA,EACPqG,SAAUA,KAGlB0jB,SAAU,SAAkB/pB,GACpBmF,KAAKC,IACLf,EAAEc,KAAKC,IAAI6S,QAAQ,WAAY,CAAEjY,KAGzCoH,YAAa,SAAqB5E,EAAM8D,EAAWxD,GAC/C,IAAwXmH,EAAO9K,EAAqC6qB,EAAcC,EAAqBC,EAAYC,EAA/cC,EAAY,kFAAmFC,EAAiB,kNAAmNC,GAAU,EAAOC,EAAe,IAAIC,EAAuBC,EAAa,GAAIrd,EAAa,GACha,SAASod,EAAU9a,EAASC,EAAY1B,EAAc6B,GAClD3K,KAAKmI,QAAU,GACfnI,KAAKulB,UAAYhb,IAAW,EAC5BvK,KAAKwlB,iBAAkB,EACvBxlB,KAAKuK,QAAUA,IAAW,EAC1BvK,KAAKwK,WAAaA,IAAc,EAChCxK,KAAK8I,aAAeA,IAAgB,EACpC9I,KAAK2K,aAAeA,IAAgB,EACpC3K,KAAKmM,WAAa,CACdE,IAAK,EACLD,IAAK,GAGb,SAASqZ,EAAqBC,EAAQC,EAASnW,GAC3CA,EAAWA,IAAahT,EAAYgT,EAAWkW,EAAOvd,QAAQ/G,OAC9D,IAAIsQ,EAAYgU,EAAOvd,QAAQqH,EAAW,GAC1C,GAAIrO,EAC6B,IAAzBwkB,EAAQnmB,QAAQ,MAAc2lB,GAAW,gBAAgBrnB,KAAK6nB,IAAwB,MAAZA,EAC1ED,EAAOvd,QAAQqD,OAAOgE,IAAY,EAAG,CACjCzJ,GAAI,IAAIlI,OAAO8nB,EAAShoB,EAAKf,OAAS,IAAM,IAC5CmI,aAAa,EACbe,eAAgB4L,IAAclV,EAAY,SAAWkV,EAAU1L,MAAQ2f,EACvE/oB,OAAQ,KACRoJ,IAAK2f,EACLrkB,YAAa9E,EACbgJ,UAAWmgB,KAGXR,IAASQ,EAAUA,EAAQA,EAAQvkB,OAAS,IAChDlC,EAAE2D,KAAK8iB,EAAQ/jB,MAAM,IAAK,SAASkB,EAAKqG,GACpCuI,EAAYgU,EAAOvd,QAAQqH,EAAW,GACtCkW,EAAOvd,QAAQqD,OAAOgE,IAAY,EAAG,CACjCzJ,GAAI,KACJhB,aAAa,EACbe,eAAgB4L,IAAclV,EAAY,SAAWkV,EAAU1L,MAAQmD,GAAyB,OAAjBuI,EAAU3L,GACzFnJ,OAAQ,KACRoJ,IAAKrI,EAAK2lB,wBAA0Bna,EACpC7H,YAAa3D,EAAK2lB,yBAA2B9mB,EAAY2M,EAAO3M,EAChEgJ,WAAY2f,EAAU,IAAM,IAAMhc,OAI9Cgc,GAAU,MACP,CACH,IAAIS,GAAWjoB,EAAKL,YAAcK,EAAKL,YAAYqoB,GAAWnpB,IAAcL,EAAUX,UAAU8B,YAAYqoB,GACxGC,IAAYT,EACZO,EAAOvd,QAAQqD,OAAOgE,IAAY,EAAG,CACjCzJ,GAAI6f,EAAQjpB,UAAwC,iBAArBipB,EAAQjpB,UAAwB,IAAIkB,OAAO+nB,EAAQjpB,UAAWgB,EAAKf,OAAS,IAAM,IAAM,IAAI,WACvHoD,KAAKlC,KAAO8nB,EAAQjpB,WAClB,IAAIkB,OAAO,KACjBkH,aAAa,EACbe,eAAgB4L,IAAclV,EAAY,SAAWkV,EAAU1L,OAAS4f,EAAQnC,kBAAoBkC,GACpG/oB,OAAQgpB,EAAQhpB,OAChBoJ,IAAK4f,EAAQnC,kBAAoBkC,EACjCrkB,YAAaskB,EAAQtkB,YACrBkE,UAAWmgB,KAGfD,EAAOvd,QAAQqD,OAAOgE,IAAY,EAAG,CACjCzJ,GAAI,KACJhB,aAAa,EACbe,eAAgB4L,IAAclV,EAAY,SAAWkV,EAAU1L,MAAQ2f,GAA4B,OAAjBjU,EAAU3L,GAC5FnJ,OAAQ,KACRoJ,IAAKrI,EAAK2lB,wBAA0BqC,EACpCrkB,YAAa3D,EAAK2lB,yBAA2B9mB,EAAYmpB,EAAUnpB,EACnEgJ,WAAY2f,EAAU,IAAM,IAAMQ,IAEtCR,GAAU,IAqBtB,SAASU,IACL,GAAIP,EAAWlkB,OAAS,GAGpB,GADAqkB,EADAX,EAAsBQ,EAAWA,EAAWlkB,OAAS,GACXpH,GACtC8qB,EAAoBna,aAAc,CAClCoa,EAAaO,EAAWriB,MACxB,IAAK,IAAI6iB,EAAO,EAAGA,EAAOf,EAAW5c,QAAQ/G,OAAQ0kB,IAC7Cf,EAAW5c,QAAQ2d,GAAMvb,UAASwa,EAAW5c,QAAQ2d,GAAMvb,SAAU,GAEzE+a,EAAWlkB,OAAS,GACpB0jB,EAAsBQ,EAAWA,EAAWlkB,OAAS,IACjC+G,QAAQ5C,KAAKwf,GAEjCK,EAAajd,QAAQ5C,KAAKwf,SAIlCU,EAAqBL,EAAcprB,GA0B3C,SAAS+rB,EAAS5d,GACd,IAAI6d,EAAa,IAAIX,GAAU,GAG/B,OAFAW,EAAWT,WAAY,EACvBS,EAAW7d,QAAUA,EACd6d,EAMX,IAJI7kB,IACAxD,EAAKulB,eAAe,GAAK1mB,EACzBmB,EAAKulB,eAAe,GAAK1mB,GAEtBsI,EAAQ3D,EAAY+jB,EAAee,KAAK5oB,GAAQ4nB,EAAUgB,KAAK5oB,IAAO,CAEzE,GADArD,EAAI8K,EAAM,GACN3D,EACA,OAAQnH,EAAE2I,OAAO,IACf,IAAK,IACH3I,EAAI,QACJ,MAEF,IAAK,IACL,IAAK,IACHA,EAAI,IAAMA,EAAI,IAItB,GAAImrB,EACAU,SAGJ,OAAQ7rB,EAAE2I,OAAO,IACf,IAAK,MAGL,IAAK,MAGL,IAAK,OAGL,IAAK,OACH,MAEF,KAAKhF,EAAKwlB,WACRgC,GAAU,EACNhkB,GACA0kB,IAEJ,MAEF,KAAKloB,EAAKulB,eAAe,GACzB,KAAKvlB,EAAK6D,YAAY,GAGpB,IAFAqjB,EAAeS,EAAWriB,OACbsiB,WAAY,EACrBV,IAAiBroB,EACjB,GAAI8oB,EAAWlkB,OAAS,GAGpB,IAFA0jB,EAAsBQ,EAAWA,EAAWlkB,OAAS,IACjC+G,QAAQ5C,KAAKsf,GAC7BC,EAAoBna,aAAc,CAClCoa,EAAaO,EAAWriB,MACxB,IAAK,IAAI6iB,EAAO,EAAGA,EAAOf,EAAW5c,QAAQ/G,OAAQ0kB,IACjDf,EAAW5c,QAAQ2d,GAAMvb,SAAU,EACnCwa,EAAW5c,QAAQ2d,GAAMN,iBAAkB,EAE3CF,EAAWlkB,OAAS,GACpB0jB,EAAsBQ,EAAWA,EAAWlkB,OAAS,IACjC+G,QAAQ5C,KAAKwf,GAEjCK,EAAajd,QAAQ5C,KAAKwf,SAIlCK,EAAajd,QAAQ5C,KAAKsf,QAE3BgB,IACP,MAEF,KAAKloB,EAAKulB,eAAe,GACvBoC,EAAW/f,KAAK,IAAI8f,GAAU,GAAO,IACrC,MAEF,KAAK1nB,EAAK6D,YAAY,GACpB8jB,EAAW/f,KAAK,IAAI8f,GAAU,IAC9B,MAEF,KAAK1nB,EAAK8D,iBAAiB,GACzB,IAAI0K,EAAa,IAAIkZ,GAAU,GAAO,GAAO,GAEzCa,GADJlsB,EAAIA,EAAEwE,QAAQ,QAAS,KACXoD,MAAM,KAAMukB,EAAKD,EAAI,GAAGtkB,MAAM,KAAMwkB,EAAMla,MAAMia,EAAG,IAAMA,EAAG,GAAK1f,SAAS0f,EAAG,IAAKE,EAAoB,IAAdF,EAAG/kB,OAAeglB,EAAMla,MAAMia,EAAG,IAAMA,EAAG,GAAK1f,SAAS0f,EAAG,IACnJ,MAARC,GAAuB,MAARA,IACfA,EAAc,MAARC,EAAc,EAAI,GAE5Bla,EAAWA,WAAa,CACpBE,IAAK+Z,EACLha,IAAKia,EACLzgB,IAAKsgB,EAAI,IAEb,IAAI/d,EAAUmd,EAAWlkB,OAAS,EAAIkkB,EAAWA,EAAWlkB,OAAS,GAAG+G,QAAUid,EAAajd,QAE/F,IADArD,EAAQqD,EAAQlF,OACN0H,aAAc,CACpBxC,EAAQ5C,KAAKT,GACbqD,EAAUrD,EAAMqD,QAChB,IAAI6d,EAAa,IAAIX,GAAU,GAC3BiB,EAAWne,EAAQlF,MACvBkF,EAAQ5C,KAAKygB,GACb7d,EAAU6d,EAAW7d,QACrBrD,EAAQwhB,EAEPxhB,EAAMyF,UACPzF,EAAQihB,EAAS,CAAEjhB,KAEvBqD,EAAQ5C,KAAKT,GACbqD,EAAQ5C,KAAK4G,GACb,MAEF,KAAKxO,EAAKqF,iBACR,IAAIujB,EAAkB,SAAyBpe,GAC3C,IAAI6c,EAAY7c,EAAQlF,MAIxB,OAHI+hB,EAAUlc,eACVkc,EAAYe,EAAS,CAAE5d,EAAQlF,MAAO+hB,KAEnCA,GAEX,GAAIM,EAAWlkB,OAAS,EAAG,CAEvB,IAAIolB,GADJ1B,EAAsBQ,EAAWA,EAAWlkB,OAAS,IAClB+G,QAAQ2c,EAAoB3c,QAAQ/G,OAAS,GAE5E4jB,EADAF,EAAoBS,YAAciB,EAASre,UAAY3L,IAAkC,IAArBgqB,EAASjc,UAA+C,IAA1Bic,EAAS7b,cAC/F2a,EAAWriB,MAEXsjB,EAAgBzB,EAAoB3c,cAGpD6c,EAAYuB,EAAgBnB,EAAajd,SAE7C,GAAI6c,EAAUra,aACV2a,EAAW/f,KAAKyf,QAUhB,GARIA,EAAUQ,iBACVT,EAAaO,EAAWriB,MACxB+hB,EAAUQ,iBAAkB,GAE5BT,EAAa,IAAIM,GAAU,GAAO,GAAO,GAAO,GAEpDN,EAAW5c,QAAQ5C,KAAKyf,GACxBM,EAAW/f,KAAKwf,GACZC,EAAUO,UAAW,CACrBP,EAAUO,WAAY,EACtB,IAAIC,EAAkB,IAAIH,GAAU,GACpCG,EAAgBA,iBAAkB,EAClCF,EAAW/f,KAAKigB,GAGxB,MAEF,QACEK,KAGR,KAAOP,EAAWlkB,OAAS,GACvByjB,EAAeS,EAAWriB,MAC1BmiB,EAAajd,QAAQ5C,KAAKsf,GAS9B,OAPIO,EAAajd,QAAQ/G,OAAS,IA5NlC,SAASqlB,EAAkBzkB,GACnBA,GAAaA,EAAUmG,SACvBjJ,EAAE2D,KAAKb,EAAUmG,QAAS,SAASrF,EAAK4jB,GACpC,IAAIC,EAAY3kB,EAAUmG,QAAQrF,EAAM,IACnC6jB,IAAcnqB,GAAamqB,EAAUxe,UAAY3L,IAAwC,IAA3BmqB,EAAU7d,eAA2B4d,GAASA,EAAMnc,UACnHmc,EAAMnc,SAAU,EACXpJ,IACDskB,EAAqBiB,EAAO/oB,EAAK6D,YAAY,GAAI,IACzB,IAApBklB,EAAMnB,WACNE,EAAqBiB,EAAO/oB,EAAK6D,YAAY,MAIzDilB,EAAkBC,KAgN1BD,CAAkBrB,GAClBnd,EAAW1C,KAAK6f,KAEhBznB,EAAK+C,cAAgB/C,EAAK8C,QA3L9B,SAASmmB,EAAc5kB,GAMnB,IAAK,IAAI8C,KADT9C,EAAUmG,QAAUnG,EAAUmG,QAAQtG,UACpBG,EAAUmG,QACxB,GAAInG,EAAUmG,QAAQ1M,eAAeqJ,GAAQ,CACzC,IAAI+hB,EAAWpgB,SAAS3B,GACxB,GAAI9C,EAAUmG,QAAQrD,GAAOgE,cAAgB9G,EAAUmG,QAAQ0e,EAAW,IAAM7kB,EAAUmG,QAAQ0e,EAAW,GAAGtc,QAAS,CACrH,IAAIyB,EAAKhK,EAAUmG,QAAQrD,GAC3B9C,EAAUmG,QAAQqD,OAAO1G,EAAO,GAChC9C,EAAUmG,QAAQqD,OAAOqb,EAAW,EAAG,EAAG7a,GAE1ChK,EAAUmG,QAAQrD,GAAOqD,UAAY3L,EACrCwF,EAAUmG,QAAQrD,GAAS8hB,EAAc5kB,EAAUmG,QAAQrD,IAE3D9C,EAAUmG,QAAQrD,KAhBPgiB,EAgB8B9kB,EAAUmG,QAAQrD,MAfxDnH,EAAKulB,eAAe,GAAI4D,EAAKnpB,EAAKulB,eAAe,GAAa4D,IAAOnpB,EAAKulB,eAAe,GAAI4D,EAAKnpB,EAAKulB,eAAe,GAAa4D,IAAOnpB,EAAK6D,YAAY,GAAIslB,EAAKnpB,EAAK6D,YAAY,GAAaslB,IAAOnpB,EAAK6D,YAAY,KAAIslB,EAAKnpB,EAAK6D,YAAY,IACxPslB,GAFX,IAAuBA,EAoBvB,OAAO9kB,EAuKP4kB,CAAc3e,EAAW,IAEtBA,GAEXkY,kBAAmB,SAA2Blb,EAAO4Y,GACjD5Y,EAAMqZ,MAAMM,KAAOf,EAASgB,WAAa,OAGjD1iB,EAAU4qB,eAAiB,SAASjnB,GAChCZ,EAAEmB,QAAO,EAAMlE,EAAUX,UAAU8E,SAAUR,IAEjD3D,EAAUM,kBAAoB,SAASuqB,GACnC9nB,EAAEmB,QAAO,EAAMlE,EAAUX,UAAU8B,YAAa0pB,IAEpD7qB,EAAUY,cAAgB,SAAS8C,GAC/BX,EAAEmB,QAAO,EAAMlE,EAAUX,UAAUsF,QAASjB,IAEhD1D,EAAUwoB,OAAS,SAAS9pB,EAAOiF,EAASoB,GACxC,OAAO/E,EAAU2D,GAAS6kB,OAAO9pB,EAAOqG,IAE5C/E,EAAU8qB,OAAS,SAASpsB,EAAOiF,GAC/B,OAAO3D,EAAU2D,GAASya,cAAc1f,IAE5CsB,EAAU2Q,QAAU,SAASjS,EAAOiF,GAChC,OAAO3D,EAAU2D,GAASgN,QAAQjS,IAEtCsB,EAAUwT,OAAS,SAAS+T,GACH,iBAAVA,IACPA,EAAQvkB,EAASwkB,eAAeD,IAAUvkB,EAASykB,iBAAiBF,IAExEA,EAAQA,EAAM5P,SAAW,CAAE4P,GAAUA,EACrCxkB,EAAE2D,KAAK6gB,EAAO,SAAS5gB,EAAK7C,GACpBA,EAAG6D,WAAW7D,EAAG6D,UAAU6L,YAGvCxT,EAAUyoB,SAAW,SAASlB,EAAO7oB,GACZ,iBAAV6oB,IACPA,EAAQvkB,EAASwkB,eAAeD,IAAUvkB,EAASykB,iBAAiBF,IAExEA,EAAQA,EAAM5P,SAAW,CAAE4P,GAAUA,EACrCxkB,EAAE2D,KAAK6gB,EAAO,SAAS5gB,EAAK7C,GACpBA,EAAG6D,UAAW7D,EAAG6D,UAAU8gB,SAAS/pB,GAAaqE,EAAEe,GAAI6S,QAAQ,WAAY,CAAEjY,OAGzFsB,EAAU2e,YAAc,SAASoM,GAE7B,OAAOA,EAAI1oB,QAAQ,IAAIX,OAAO,MADf,CAAE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAAM,IAAK,KACzCiE,KAAK,OAAS,IAAK,OAAQ,SAE9E3F,EAAUgR,QAAU,CAChB4H,UAAW,EACXE,iBAAkB,IAClBD,OAAQ,GACRmS,KAAM,GACN/R,IAAK,GACLkB,MAAO,GACPZ,OAAQ,GACRH,KAAM,GACNM,OAAQ,GACRuR,KAAM,GACN/R,UAAW,GACXG,QAAS,GACT6R,MAAO,GACPja,MAAO,GACPkH,IAAK,EACLgT,GAAI,GACJpS,EAAG,GACHqS,QAAS,IAEbprB,EAAUqrB,cAAgBtoB,EA0kEnB/C,IAlrF8HC,EAA+B2C,MAAMpF,EAAS0C,GAAgCD,KAC/JxC,EAAOD,QAAU2C,IAmrF1E,SAAS1C,EAAQD,EAASF,GACzB,aACA,IAAI2C,EAAgCC,EAA8BC,EAClC,mBAAX3B,QAAgCA,OAAO4B,SAOlDF,EAA+B,CAAE5C,EAAoB,SAErB+C,KADlCF,EAA0E,mBADbF,EAIlE,SAAS8C,GACR,OAAOA,IAJoF9C,EAA+B2C,MAAMpF,EAAS0C,GAAgCD,KACrHxC,EAAOD,QAAU2C,IAK1E,SAAS1C,EAAQD,GAChBC,EAAOD,QAAU8tB,QAClB,SAAS7tB,OAAQD,QAASF,qBACzB,aACA,IAAI6C,8BACA0C,QAA4B,mBAAXrE,QAAoD,iBAApBA,OAAO4B,SAAwB,SAASP,GACzF,cAAcA,GACd,SAASA,GACT,OAAOA,GAAyB,mBAAXrB,QAAyBqB,EAAIiD,cAAgBtE,QAAUqB,IAAQrB,OAAOa,UAAY,gBAAkBQ,GAEjHM,8BAAgC,WACxC,MAAyB,oBAAXJ,OAAyBA,OAAS,IAAKwrB,KAAK,0BAAV,CAAqC,IAAIxrB,QAC3FnC,KAAKJ,QAASF,oBAAqBE,QAASC,aAA2C4C,IAAlCF,gCAAgD1C,OAAOD,QAAU2C,gCACzH,SAAS1C,EAAQD,EAASF,GACzB,aACA,IAAI2C,EAAgCC,EAA8BC,EAC9D0C,EAA4B,mBAAXrE,QAAoD,iBAApBA,OAAO4B,SAAwB,SAASP,GACzF,cAAcA,GACd,SAASA,GACT,OAAOA,GAAyB,mBAAXrB,QAAyBqB,EAAIiD,cAAgBtE,QAAUqB,IAAQrB,OAAOa,UAAY,gBAAkBQ,GAInHK,EAA+B,CAAE5C,EAAoB,SAErB+C,KADlCF,EAA0E,mBADbF,EAIlE,SAASD,GACR,IAAI+C,EAAI/C,EAAUqrB,cACdG,EAAa,CACbztB,EAAG,CAAE,wBAAyB0tB,KAAKpsB,UAAUqsB,QAAS,MAAOD,KAAKpsB,UAAUssB,SAC5EC,GAAI,CAAE,yBAA0BH,KAAKpsB,UAAUqsB,QAAS,MAAO,WAC3D,OAAOG,EAAIJ,KAAKpsB,UAAUssB,QAAQ/tB,KAAKiG,MAAO,KAElDioB,IAAK,CAAE,IACPC,KAAM,CAAE,IACRluB,EAAG,CAAE,eAAgB4tB,KAAKpsB,UAAU2sB,SAAU,QAAS,WACnD,OAAOP,KAAKpsB,UAAU4sB,SAASruB,KAAKiG,MAAQ,IAEhDqoB,GAAI,CAAE,gBAAiBT,KAAKpsB,UAAU2sB,SAAU,QAAS,WACrD,OAAOH,EAAIJ,KAAKpsB,UAAU4sB,SAASruB,KAAKiG,MAAQ,EAAG,KAEvDsoB,IAAK,CAAE,IACPC,KAAM,CAAE,IACRC,GAAI,CAAE,WAAYZ,KAAKpsB,UAAUitB,YAAa,OAAQ,WAClD,OAAOT,EAAIJ,KAAKpsB,UAAUktB,YAAY3uB,KAAKiG,MAAO,KAEtD2oB,KAAM,CAAE,WAAYf,KAAKpsB,UAAUitB,YAAa,OAAQ,WACpD,OAAOT,EAAIJ,KAAKpsB,UAAUktB,YAAY3uB,KAAKiG,MAAO,KAEtD4oB,EAAG,CAAE,eAAgBhB,KAAKpsB,UAAUqtB,SAAU,QAASjB,KAAKpsB,UAAUstB,UACtEC,GAAI,CAAE,gBAAiBnB,KAAKpsB,UAAUqtB,SAAU,QAAS,WACrD,OAAOb,EAAIJ,KAAKpsB,UAAUstB,SAAS/uB,KAAKiG,MAAO,KAEnDgpB,IAAK,CAAE,SAAUpB,KAAKpsB,UAAUqtB,SAAU,QAASjB,KAAKpsB,UAAUstB,UAClEG,EAAG,CAAE,iBAAkBrB,KAAKpsB,UAAUqtB,SAAU,QAASjB,KAAKpsB,UAAUstB,UACxEI,GAAI,CAAE,uBAAwBtB,KAAKpsB,UAAUqtB,SAAU,QAAS,WAC5D,OAAOb,EAAIJ,KAAKpsB,UAAUstB,SAAS/uB,KAAKiG,MAAO,KAEnDmpB,IAAK,CAAE,SAAUvB,KAAKpsB,UAAUqtB,SAAU,QAASjB,KAAKpsB,UAAUstB,UAClEM,EAAG,CAAE,cAAexB,KAAKpsB,UAAU6tB,WAAY,UAAWzB,KAAKpsB,UAAU8tB,YACzEC,GAAI,CAAE,4CAA6C3B,KAAKpsB,UAAU6tB,WAAY,UAAW,WACrF,OAAOrB,EAAIJ,KAAKpsB,UAAU8tB,WAAWvvB,KAAKiG,MAAO,KAErDwpB,GAAI,CAAE,aAAc5B,KAAKpsB,UAAUiuB,WAAY,UAAW,WACtD,OAAOzB,EAAIJ,KAAKpsB,UAAUkuB,WAAW3vB,KAAKiG,MAAO,KAErDlG,EAAG,CAAE,WAAY8tB,KAAKpsB,UAAUmuB,gBAAiB,eAAgB,WAC7D,OAAO3B,EAAIJ,KAAKpsB,UAAUouB,gBAAgB7vB,KAAKiG,MAAO,KAE1D6pB,EAAG,CAAE,WAAYjC,KAAKpsB,UAAUmuB,gBAAiB,eAAgB,WAC7D,OAAO3B,EAAIJ,KAAKpsB,UAAUouB,gBAAgB7vB,KAAKiG,MAAO,KAE1DlF,EAAG,CAAE,QACL+e,GAAI,CAAE,SACNiQ,EAAG,CAAE,QACLC,GAAI,CAAE,SACNC,EAAG,CAAE,IACL3vB,EAAG,CAAE,IACL4vB,EAAG,CAAE,KACNC,EAAc,CACbC,QAAS,aACTC,QAAS,WACTC,YAAa,wBACbC,eAAgB,gCAEpB,SAASC,EAAa5sB,GAClB,IAAKA,EAAKsnB,UAAW,CACjB,IAAIuF,EAAS,GACb,IAAK,IAAI1nB,KAAO6kB,GACoB,IAA5B6C,EAAOhrB,QAAQsD,EAAI,KAAY0nB,EAAOjlB,KAAKzC,EAAI,IAEvDnF,EAAKsnB,UAAY,IAAMuF,EAAO1oB,KAAK,MAAQ,QAC3CnE,EAAKsnB,UAAY,IAAIpnB,OAAOF,EAAKsnB,UAAW,KAEhD,OAAOtnB,EAAKsnB,UAuBhB,SAASb,EAAMO,EAAQ8F,EAAc9sB,EAAM+sB,GAEvC,IADA,IAAe5lB,EAAXzH,EAAO,GACJyH,EAAQylB,EAAa5sB,GAAMsoB,KAAKtB,IACnC,QAAqBnoB,IAAjBiuB,EACA,GAAI9C,EAAW7iB,EAAM,IACjBzH,GAAQ,IAAMsqB,EAAW7iB,EAAM,IAAI,GAAK,SAExC,OAAQA,EAAM,IACZ,IAAK,IACHzH,GAAQ,IACR,MAEF,IAAK,IACHA,GAAQ,KACR,MAEF,QACEA,GAAQlB,EAAU2e,YAAYhW,EAAM,SAI5C,GAAI6iB,EAAW7iB,EAAM,IACjB,IAAY,IAAR4lB,GAAgB/C,EAAW7iB,EAAM,IAAI,GAAI,CACzC,IAAI6lB,EAAQhD,EAAW7iB,EAAM,IAAI,GACjCzH,GAAQstB,EAAM5wB,KAAK0wB,EAAaG,WACzBjD,EAAW7iB,EAAM,IAAI,GAAIzH,GAAQotB,EAAa,MAAQ9C,EAAW7iB,EAAM,IAAI,IAAUzH,GAAQyH,EAAM,QAC3GzH,GAAQyH,EAAM,GAG7B,OAAOzH,EAEX,SAAS2qB,EAAI6C,EAAKC,GAGd,IAFAD,EAAM9gB,OAAO8gB,GACbC,EAAMA,GAAO,EACND,EAAIzpB,OAAS0pB,GAChBD,EAAM,IAAMA,EAEhB,OAAOA,EAEX,SAAS5oB,EAAY8oB,EAAYpG,EAAQhnB,GACrC,IAEGqtB,EAA+BlmB,EAAOmmB,EAFrCC,EAAU,CACVN,KAAM,IAAIhD,KAAK,EAAG,EAAG,IACVvqB,EAAO0tB,EACtB,SAASI,EAAetwB,GACpB,IAAIuwB,EAAiBvwB,EAAM2D,QAAQ,UAAW,KAC9C,GAAI4sB,GAAkBvwB,EAAO,CACzB,IAAIwwB,EAAcxwB,EAAM2D,QAAQ,UAAW,IAAK6N,GAAO1O,EAAK0O,KAAO1O,EAAK0O,IAAI2e,IAAenwB,GAAOiM,WAAYsF,GAAOzO,EAAKyO,KAAOzO,EAAKyO,IAAI4e,IAAenwB,GAAOiM,WAChKskB,EAAiBC,GAAeA,EAAchf,EAAI/G,MAAM,EAAG+lB,EAAYjqB,QAAUiL,EAAI/G,MAAM+lB,EAAYjqB,QAAUiqB,EAAcjf,EAAI9G,MAAM,EAAG+lB,EAAYjqB,QAAUgL,EAAI9G,MAAM+lB,EAAYjqB,QAAUgqB,EAAetkB,WAAWxB,MAAM+lB,EAAYjqB,SAElP,OAAOgqB,EAEX,SAASxG,EAASsG,EAASrwB,EAAO8C,GAC9ButB,EAAQF,GAAcG,EAAetwB,GACrCqwB,EAAQ,MAAQF,GAAcnwB,OACR2B,IAAlByuB,GAA6BA,EAAclxB,KAAKmxB,EAAQN,KAAoB,SAAdI,EAAwBvkB,SAASykB,EAAQF,IAAe,EAAIE,EAAQF,IAE1I,GAAoB,iBAAT3tB,EAAmB,CAC1B,KAAOyH,EAAQylB,EAAa5sB,GAAMsoB,KAAKtB,IAAS,CAC5C,IAAI9pB,EAAQwC,EAAKiI,MAAM,EAAGR,EAAM,GAAG1D,QAC/BumB,EAAWlsB,eAAeqJ,EAAM,MACd6iB,EAAW7iB,EAAM,IAAI,GACvCkmB,EAAarD,EAAW7iB,EAAM,IAAI,GAClCmmB,EAAgBtD,EAAW7iB,EAAM,IAAI,GACrC8f,EAASsG,EAASrwB,IAEtBwC,EAAOA,EAAKiI,MAAMzK,EAAMuG,QAE5B,OAAO8pB,EACJ,GAAI7tB,GAAwE,iBAA/C,IAATA,EAAuB,YAAc2B,EAAQ3B,KAAuBA,EAAK5B,eAAe,QAC/G,OAAO4B,EA4Ef,OAxEAlB,EAAUY,cAAc,CACpBuuB,SAAU,CACNjuB,KAAM,SAAcM,GAOhB,OANAgqB,EAAWsC,EAAItsB,EAAK4tB,KAAKC,cAAc1pB,KAAK,KAC5CnE,EAAK8tB,YAAcvB,EAAYvsB,EAAK8tB,cAAgB9tB,EAAK8tB,YACzD9tB,EAAK+tB,cAAgBxB,EAAYvsB,EAAK+tB,gBAAkB/tB,EAAK+tB,eAAiB/tB,EAAK8tB,YACnF9tB,EAAKguB,aAAezB,EAAYvsB,EAAKguB,eAAiBhuB,EAAKguB,cAAgBhuB,EAAK8tB,YAChF9tB,EAAK2D,YAAmC,KAArB3D,EAAK2D,YAAqB3D,EAAK2D,YAAc3D,EAAK8tB,YAAYjtB,QAAQ,SAAU,IACnGb,EAAKV,MAAQmnB,EAAMzmB,EAAK8tB,iBAAajvB,EAAWmB,GACzC,MAEX2D,YAAa,GACbmqB,YAAa,cACbC,mBAAelvB,EACfmvB,kBAAcnvB,EACd6P,IAAK,KACLD,IAAK,KACLmf,KAAM,CACFK,SAAU,CAAE,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,SAAU,UAAW,YAAa,WAAY,SAAU,WAAY,UACjIC,WAAY,CAAE,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,UAAW,WAAY,QAAS,QAAS,MAAO,OAAQ,OAAQ,SAAU,YAAa,UAAW,WAAY,YAChNL,cAAe,CAAE,KAAM,KAAM,KAAM,OAEvC5a,eAAgB,SAAwBhT,EAAQH,EAAKquB,EAAenuB,GAChEA,EAAK0O,IAAMpK,EAAYtE,EAAK0O,IAAK1O,EAAK8tB,YAAa9tB,GACnDA,EAAKyO,IAAMnK,EAAYtE,EAAKyO,IAAKzO,EAAK8tB,YAAa9tB,GACnD,IAAIsS,EAAS6b,EAAeC,EAAY9pB,EAAYrE,EAAOkE,KAAK,IAAKnE,EAAK8tB,YAAa9tB,GAKvF,OAJIsS,GAAU8b,EAAUnB,KAAKoB,WAAcD,EAAUnB,KAAKoB,YAEtD/b,GADAA,EAzHhB,SAAqB8b,EAAWD,GAC5B,QAAQjmB,SAASkmB,EAAUE,SAA4B,MAAjBF,EAAUG,MAAgBrmB,SAASkmB,EAAUI,UAAY,IAAIvE,KAAKmE,EAAUnB,KAAKlC,cAAe7iB,SAASkmB,EAAUK,UAAYL,EAAUM,MAAQN,EAAUnB,KAAKxC,WAAa,EAAG,GAAGN,WAAaiE,EAAUG,MAAMJ,EAwHjOQ,CAAYP,EAAW9b,KAtHhD,SAAuB8b,EAAWpuB,GAC9B,IAAIsS,GAAS,EACb,GAAItS,EAAK0O,IAAK,CACV,GAAI0f,EAAmB,QAAG,CACtB,IAAIQ,EAAUR,EAAmB,QAAEvtB,QAAQ,UAAW,IAAKguB,EAAU7uB,EAAK0O,IAAIogB,KAAKxV,OAAO,EAAGsV,EAAQnrB,QACrG6O,EAASuc,GAAWD,EAEpBR,EAAgB,OAAMA,EAAmB,SACrCpuB,EAAK0O,IAAIue,KAAKoB,WAAcruB,EAAK0O,IAAIue,KAAKoB,YAC1C/b,EAAStS,EAAK0O,IAAIue,KAAKoB,WAAaD,EAAUnB,KAAKoB,WAO/D,OAHI/b,GAAUtS,EAAKyO,KAAOzO,EAAKyO,IAAIwe,KAAKoB,WAAcruB,EAAKyO,IAAIwe,KAAKoB,YAChE/b,EAAStS,EAAKyO,IAAIwe,KAAKoB,WAAaD,EAAUnB,KAAKoB,WAEhD/b,EAuGwByc,CAAcX,EAAWpuB,IAE5CF,GAAOwS,GAAU6b,EAAcruB,MAAQA,EAChC,CACHG,OAAQwmB,EAAMzmB,EAAK8tB,YAAaM,EAAWpuB,GAC3CiP,kBAAmB,CACfjD,MAAOlM,EACPmM,IAAKkiB,EAAcruB,MAIxBwS,GAEX6F,UAAW,SAAmBlC,EAAGhW,EAAQwU,EAAUzU,GAE/C,GAAIiW,EAAEQ,SAAWR,EAAEzG,UAAYhR,EAAUgR,QAAQka,MAAO,CAEpD,IADA,IAAwBviB,EAApB6nB,EAAQ,IAAI/E,KAAegD,EAAO,GAC/B9lB,EAAQylB,EAAa5sB,GAAMsoB,KAAKtoB,EAAK8tB,cACb,MAAvB3mB,EAAM,GAAGnC,OAAO,GAChBioB,GAAQ5C,EAAI2E,EAAM7E,UAAWhjB,EAAM,GAAG1D,QACR,MAAvB0D,EAAM,GAAGnC,OAAO,GACvBioB,GAAQ5C,EAAI2E,EAAMvE,WAAa,EAAGtjB,EAAM,GAAG1D,QACvB,SAAb0D,EAAM,GACb8lB,GAAQ+B,EAAMjE,cAAc5hB,WACE,MAAvBhC,EAAM,GAAGnC,OAAO,KACvBioB,GAAQ5C,EAAI2E,EAAMC,UAAW9nB,EAAM,GAAG1D,SAXtCpB,KAcF8D,UAAU0O,UAAUoY,GAC1B1rB,EAfQc,MAeC8S,QAAQ,cAGzB/U,SAAU,SAAkBC,EAAaC,EAAeN,GACpD,OAAOymB,EAAMzmB,EAAKguB,aAAc1pB,EAAYjE,EAAaL,EAAK8tB,YAAa9tB,GAAOA,GAAM,IAE5Ff,OAAQ,SAAgBoQ,EAAMlP,EAAML,EAAKyE,GACrC,OAAsC,GAAlCpE,EAAK0H,UAAUhG,QAAQ,QAAqBwN,EAAKzO,cACf,GAAlCT,EAAK0H,UAAUhG,QAAQ,QAAqBwN,EAAKC,cAC9CD,GAEXsD,YAAY,EACZ0B,gBAAgB,KAGjB7V,IA/OoFC,EAA+B2C,MAAMpF,EAAS0C,GAAgCD,KACrHxC,EAAOD,QAAU2C,IAgP1E,SAAS1C,EAAQD,EAASF,GACzB,aACA,IAAI2C,EAAgCC,EAA8BC,EAClC,mBAAX3B,QAAgCA,OAAO4B,SAOlDF,EAA+B,CAAE5C,EAAoB,SAErB+C,KADlCF,EAA0E,mBADbF,EAIlE,SAASD,GACR,IAAI+C,EAAI/C,EAAUqrB,cAClB,SAASqF,EAAWC,EAAKnvB,GAErB,IADA,IAAIovB,EAAa,GACRlzB,EAAI,EAAGA,EAAIizB,EAAI1rB,OAAQvH,IACxBsC,EAAUX,UAAU8B,YAAYwvB,EAAInqB,OAAO9I,KAAO8D,EAAKL,YAAYwvB,EAAInqB,OAAO9I,KAAO8D,EAAKulB,eAAevZ,QAAUmjB,EAAInqB,OAAO9I,IAAM8D,EAAKulB,eAAetZ,MAAQkjB,EAAInqB,OAAO9I,IAAM8D,EAAK8D,iBAAiBkI,QAAUmjB,EAAInqB,OAAO9I,IAAM8D,EAAK8D,iBAAiBmI,MAAQkjB,EAAInqB,OAAO9I,IAAM8D,EAAK6D,YAAYmI,QAAUmjB,EAAInqB,OAAO9I,IAAM8D,EAAK6D,YAAYoI,MAAQkjB,EAAInqB,OAAO9I,IAAM8D,EAAKqF,mBAAqB8pB,EAAInqB,OAAO9I,GAC5YkzB,GAAc,KAAOD,EAAInqB,OAAO9I,GAC7BkzB,GAAcD,EAAInqB,OAAO9I,GAEpC,OAAOkzB,EA8gBX,OA/fA5wB,EAAUY,cAAc,CACpBiwB,QAAS,CACL3vB,KAAM,SAAcM,GAgBhB,GAfoB,IAAhBA,EAAK0D,QAAgB6K,MAAMvO,EAAKsvB,iBAChCtvB,EAAKsvB,cAAgBtvB,EAAK0D,QAE9B1D,EAAK0D,OAAS,EACV1D,EAAKwgB,iBAAmBxgB,EAAK8T,YAAc9T,EAAKuvB,QAA0B,MAAhBvvB,EAAKuvB,SACvC,MAApBvvB,EAAK8T,WACL9T,EAAKwgB,eAAiB,IACK,MAApBxgB,EAAK8T,WACZ9T,EAAKwgB,eAAiB,IACnBxgB,EAAKwgB,eAAiB,IAEL,MAAxBxgB,EAAKwgB,iBACLxgB,EAAKuH,+BAA4B1I,GAErCmB,EAAKwvB,UAAYxvB,EAAKwvB,WAAqC,KAAxBxvB,EAAKwgB,eACpCxgB,EAAKwvB,YACwB,iBAAlBxvB,EAAKyvB,WAAyBvnB,SAASlI,EAAKyvB,aAAYzvB,EAAKyvB,UAAY3mB,SAAS9I,EAAKyvB,YAC9FvnB,SAASlI,EAAKsvB,gBAAgB,CAC9B,IAAII,EAAO5lB,KAAK6lB,MAAM3vB,EAAKsvB,cAAgBtvB,EAAKyvB,WAC5CG,EAAM5vB,EAAKsvB,cAAgBtvB,EAAKyvB,UACpCzvB,EAAKsvB,cAAgBxmB,SAAS9I,EAAKsvB,gBAA0B,IAARM,EAAYF,EAAO,EAAIA,GACxE1vB,EAAKsvB,cAAgB,IACrBtvB,EAAKsvB,cAAgB,KAI7BtvB,EAAK2D,YAAYF,OAAS,IAC1BzD,EAAK2D,YAAc3D,EAAK2D,YAAYqB,OAAO,IAEb,eAA9BhF,EAAK0b,sBAA8D,KAArB1b,EAAK2D,cAA+C,IAAzB3D,EAAK6vB,kBAC9E7vB,EAAK0b,qBAAuB,OAEhC1b,EAAKL,YAAY,KAAOK,EAAKL,YAAY,KACzCK,EAAKL,YAAY,KAAKmmB,iBAAmB,KACf,IAAtB9lB,EAAK+C,eACL/C,EAAK0b,qBAAqD,eAA9B1b,EAAK0b,qBAAwC,MAAQ1b,EAAK0b,qBACtF1b,EAAK8vB,gBAAiB,EAClBvhB,MAAMvO,EAAKuvB,UAASvvB,EAAKuvB,OAAS,GACtCvvB,EAAK+vB,gBAAiB,GAE1B,IAAIrwB,EAAO,MAKX,GAJAA,GAAQwvB,EAAWlvB,EAAKgwB,OAAQhwB,IACH,IAAzBA,EAAK6vB,gBACLnwB,GAAQ,OAASM,EAAKsvB,cAAgB,IACnC5vB,GAAQ,KAAOM,EAAKsvB,cAAgB,SACvBzwB,IAAhBmB,EAAKuvB,OAAsB,CAC3B,IAAIU,EAAWjwB,EAAK+vB,eAAiB,IAAM/vB,EAAK8T,WAC5Coc,EAAKlwB,EAAKuvB,OAAOpmB,WAAWlF,MAAM,KAClCiE,SAASgoB,EAAG,KAAOA,EAAG,IAAMhoB,SAASgoB,EAAG,IACxCxwB,GAAQuwB,EAAW,KAAOjwB,EAAKuvB,OAAS,KACjChhB,MAAMvO,EAAKuvB,SAAWzmB,SAAS9I,EAAKuvB,QAAU,KACjDvvB,EAAK8vB,eACLpwB,GAAQ,IAAMuwB,EAAW,OAASjwB,EAAKuvB,OAAS,KAC7C7vB,GAAQuwB,EAAW,KAAOjwB,EAAKuvB,OAAS,KAMvD,OAHA7vB,GAAQwvB,EAAWlvB,EAAKmwB,OAAQnwB,GAChCN,GAAQ,MACRM,EAAKS,QAAS,EACPf,GAEXiE,YAAa,GACblD,QAAQ,EACR8uB,OAAQ,IACRO,gBAAgB,EAChBM,qBAAqB,EACrBtc,WAAY,IACZ4H,qBAAsB,aACtB+T,UAAW,EACXjP,eAAgB,GAChBgP,WAAW,EACXa,YAAY,EACZC,eAAgB,CACZC,MAAO,IACPC,KAAM,IAEVlB,cAAe,IACfO,iBAAiB,EACjBG,OAAQ,GACRG,OAAQ,GACRzK,YAAY,EACZqK,gBAAgB,EAChBrhB,IAAK,KACLD,IAAK,KACLgiB,KAAM,EACN9d,YAAY,EACZnT,YAAY,EACZkxB,gBAAgB,EAChB7V,UAAW,OACXta,UAAW,UACXiS,cAAe,SAAuBvS,EAAQH,EAAKxD,EAAGkV,EAAaxR,EAAMH,GACrE,GAAU,MAANvD,GAAaA,IAAM0D,EAAKswB,eAAeC,MACvC,OAAwB,IAApBvwB,EAAKqwB,aACTrwB,EAAKkU,gBAAiCrV,IAApBmB,EAAKkU,aAAmClU,EAAKkU,WACvC,KAApBjU,EAAOkE,KAAK,KACT,CACHiL,MAAOvP,EAAQ0E,eAAezE,GAAOA,OAAMjB,EAC3C8xB,QAAQ,IAGhB,IAAoB,IAAhBnf,GAAyBlV,IAAM0D,EAAK8T,iBAA8BjV,IAAhBmB,EAAKuvB,SAAyBhhB,MAAMvO,EAAKuvB,SAAWzmB,SAAS9I,EAAKuvB,QAAU,GAAI,CAClI,IAAI1T,EAAWta,EAAE2J,QAAQlL,EAAK8T,WAAY7T,GAC1C,IAAkB,IAAd4b,QAAwDhd,IAArCgB,EAAQ0E,eAAesX,GAC1C,OAA0B,IAAtB7b,EAAK+C,aACEjD,IAAQ+b,EAEZ,CACHzM,MAAOyM,EAAW,GAI9B,OAAO,GAEX5I,eAAgB,SAAwBhT,EAAQH,EAAKquB,EAAenuB,GAYhE,IAAImwB,EAASnwB,EAAKmwB,OAAOlsB,MAAM,IAAK+rB,EAAShwB,EAAKgwB,OAAO/rB,MAAM,IAC/D,QAA0BpF,IAAtBsvB,EAAcruB,UAA6CjB,IAAxBsvB,EAAc/e,QAAgD,IAAzB+e,EAAcwC,OAAiB,OAAOxC,EAClH,IAAI1Z,OAAmC5V,IAAxBsvB,EAAc/e,MAAsB+e,EAAc/e,MAAQ+e,EAAcruB,IACnFO,EAAcJ,EAAO0H,QACrB3H,EAAK+C,eACL0R,EAAWpU,EAAYoD,OAASgR,EAAW,EAC3CpU,EAAcA,EAAY6D,WAE9B,IAAI0sB,EAAYvwB,EAAYoU,GAK5B,GAJImc,IAAc5wB,EAAKwgB,iBAEnBoQ,EAAYvwB,EADZoU,GAAY,IAGZA,IAAapU,EAAYoD,OAASzD,EAAKmwB,OAAO1sB,OAAS,GAAKmtB,IAAc5wB,EAAK8T,WAAY,OAAOqa,OACpFtvB,IAAd+xB,GACIA,IAAc5wB,EAAK8T,YAAc8c,IAAc5wB,EAAKswB,eAAeC,OAASK,IAAc5wB,EAAKswB,eAAeE,OAC9GnwB,EAAYoU,GAAY,IACpBzU,EAAKgwB,OAAOvsB,OAAS,GAAKgR,KAAiC,IAApBzU,EAAKkU,WAAuB,EAAI,IAAMO,EAAWzU,EAAKgwB,OAAOvsB,OAAS,IAAyB,IAApBzD,EAAKkU,WAAuB,EAAI,GAClJ8b,EAAOvb,IAAgC,IAApBzU,EAAKkU,WAAuB,EAAI,IAAM,IAClDlU,EAAKmwB,OAAO1sB,OAAS,GAAKgR,GAAYpU,EAAYoD,OAASzD,EAAKmwB,OAAO1sB,SAA8B,IAApBzD,EAAKkU,WAAuB,EAAI,KACxHic,EAAO1b,GAAYpU,EAAYoD,OAASzD,EAAKmwB,OAAO1sB,SAA8B,IAApBzD,EAAKkU,WAAuB,EAAI,KAAO,MAIjH8b,EAASA,EAAO7rB,KAAK,IACrBgsB,EAASA,EAAOhsB,KAAK,IACrB,IAAI0sB,EAAexwB,EAAY8D,KAAK,IAAItD,QAAQmvB,EAAQ,IAiBxD,GAbAa,GADAA,GADAA,GADAA,EAAeA,EAAahwB,QAAQsvB,EAAQ,KAChBtvB,QAAQ,IAAIX,OAAO1B,EAAU2e,YAAYnd,EAAKwgB,gBAAiB,KAAM,KACrE3f,QAAQ,IAAIX,OAAO,KAAO1B,EAAU2e,YAAYnd,EAAKswB,eAAeC,OAAS,IAAK,KAAM,KACxF1vB,QAAQ,IAAIX,OAAO1B,EAAU2e,YAAYnd,EAAKswB,eAAeE,MAAQ,KAAM,IACnGjiB,MAAMvO,EAAK2D,eACXktB,EAAeA,EAAahwB,QAAQ,IAAIX,OAAO1B,EAAU2e,YAAYnd,EAAK2D,aAAc,KAAM,KAE9FktB,EAAaptB,OAAS,GAA+C,IAA1CotB,EAAahvB,QAAQ7B,EAAK8T,cACnC,MAAd8c,IACAC,EAAeA,EAAahwB,QAAQ,OAAQ,KAEhDgwB,EAAeA,EAAahwB,QAAQ,MAAO,KAE3CgwB,EAAa7rB,OAAO,KAAOhF,EAAK8T,YAAkC,KAApB9T,EAAK8T,aAA2C,IAAtB9T,EAAK+C,eAC7E8tB,EAAe,IAAMA,GAEJ,KAAjBA,EAAqB,CAErB,GADAA,EAAeA,EAAa5sB,MAAM,MAC5BjE,EAAK8vB,gBAAkB9vB,EAAKowB,qBAA+C,SAAxBjC,EAAczZ,QAAqBxM,SAASlI,EAAKuvB,QAAS,CAC/G,IAAIuB,EAAgBvvB,EAAE2J,QAAQlL,EAAK8T,WAAY+c,GAC3CE,EAAMxvB,EAAE2J,QAAQlL,EAAK8T,WAAYzT,IACd,IAAnBywB,IACAD,EAAajpB,KAAK5H,EAAK8T,YACvBgd,EAAgBD,EAAaptB,OAAS,GAE1C,IAAK,IAAIvH,EAAI,EAAGA,GAAK8D,EAAKuvB,OAAQrzB,IACxB8D,EAAK8vB,kBAAkB9vB,EAAKowB,qBAA+C,SAAxBjC,EAAczZ,aAA0D7V,IAApCgyB,EAAaC,EAAgB50B,IAAoB20B,EAAaC,EAAgB50B,KAAO8D,EAAK2D,YAAYqB,OAAO,IAEtL,IAAT+rB,QAAuClyB,IAAzBwB,EAAY0wB,EAAM70B,KACvC20B,EAAaC,EAAgB50B,GAAK20B,EAAaC,EAAgB50B,IAAMmE,EAAY0wB,EAAM70B,IAFvF20B,EAAaC,EAAgB50B,GAAKiyB,EAAcxqB,aAAe3D,EAAK2D,YAAYqB,OAAO,GAMnG,IAAuB,IAAnBhF,EAAKwvB,WAA8C,KAAxBxvB,EAAKwgB,gBAA0BoQ,IAAc5wB,EAAK8T,iBAAoCjV,IAAtBsvB,EAAcruB,MAAqBquB,EAAcwC,OAgBzIE,EAAeA,EAAa1sB,KAAK,QAhBiH,CACrJ,IAAI6sB,EAAWH,EAAaA,EAAaptB,OAAS,KAAOzD,EAAK8T,YAAcqa,EAAc7xB,IAAM0D,EAAK8T,WACrG+c,EAAeryB,EAzEvB,SAAuByB,EAAQD,GAC3B,IAAIixB,EAAW,GAEf,GADAA,GAAY,IAAMjxB,EAAKwgB,eAAiB,KAAOxgB,EAAKyvB,UAAY,QACxC,KAApBzvB,EAAK8T,WAAmB,CACxB,IAAIod,EAAajxB,EAAOkE,KAAK,IAAIF,MAAMjE,EAAK8T,YACxCod,EAAW,KACXD,GAAYjxB,EAAK8T,WAAa,KAAOod,EAAW,GAAG/pB,MAAM,cAAc,GAAG1D,OAAS,KAG3F,OAAOwtB,EAgEsBE,CAAcN,EAAc7wB,GAAO,CACxD+C,cAAc,EACdiF,YAAY,EACZrI,YAAa,CACTmB,IAAK,CACD9B,UAAW,SACXoyB,YAAa,MAGtBpK,OAAO6J,EAAa1sB,KAAK,KACxB6sB,IAAUH,GAAgB7wB,EAAK8T,YAC/B+c,EAAa7rB,OAAO,KAAOhF,EAAKwgB,gBAChCqQ,EAAavX,OAAO,IAchC,GAVItZ,EAAKkU,YAAsC,SAAxBia,EAAczZ,QACjC1U,EAAKkU,WAA8B,MAAjB2c,GAEtBA,EAAeb,EAASa,EACxBA,GAAgBV,EACZnwB,EAAKkU,aACL2c,EAAe7wB,EAAKswB,eAAeC,MAAQM,EAC3CA,GAAgB7wB,EAAKswB,eAAeE,MAExCK,EAAeA,EAAa5sB,MAAM,SAChBpF,IAAd+xB,EACA,GAAIA,IAAc5wB,EAAK8T,YAAc8c,IAAc5wB,EAAKswB,eAAeC,OAASK,IAAc5wB,EAAKswB,eAAeE,MAC9G/b,EAAWlT,EAAE2J,QAAQ,IAAK2lB,KACV,EACZA,EAAapc,GAAYmc,EACtBnc,EAAW0Z,EAAc/e,OAAS,OACtC,GAAIwhB,IAAc5wB,EAAK8T,YAAc8c,IAAc5wB,EAAKswB,eAAeC,OAASK,IAAc5wB,EAAKswB,eAAeE,KAAM,CAC3H,IAAIa,EAAc9vB,EAAE2J,QAAQ0lB,EAAWC,IAClB,IAAjBQ,IAAoB5c,EAAW4c,GAGvCrxB,EAAK+C,eACL0R,EAAWoc,EAAaptB,OAASgR,EAAW,EAC5Coc,EAAeA,EAAa3sB,WAEhC,IAAI4N,EAAO,CACP1C,WAAsBvQ,IAAd+xB,QAAiD/xB,IAAtBsvB,EAAcruB,UAAmCjB,IAAb4V,EAAmEA,EAA1CA,GAAYzU,EAAK+C,cAAgB,EAAI,GACrI9C,OAAQ4wB,EACR5hB,kBAAmBkf,EAAcwC,QAAU1wB,EAAOkE,KAAK,MAAQ0sB,EAAa1sB,KAAK,KAErF,OAAO2N,EAAK7C,kBAAoB6C,EAAOqc,GAE3CvZ,cAAe,SAAuBqB,EAAGhW,EAAQwU,EAAUzU,GAkBvD,GAAIiW,EACA,OAAQA,EAAEnB,MACR,IAAK,UACH,OAAO9U,EAAKiT,eAAehT,EAAQwU,EAAU,CACzCrF,MAAOqF,EACPkc,QAAQ,GACT3wB,GAEL,IAAK,OACL,IAAK,WACH,IAAIsxB,EAEJ,GA7BR,SAA4BtxB,QACQnB,IAA5BmB,EAAKuxB,qBACY,OAAbvxB,EAAK0O,MACL1O,EAAK0O,IAAM1O,EAAK0O,IAAIvF,WAAWtI,QAAQ,IAAIX,OAAO1B,EAAU2e,YAAYnd,EAAKwgB,gBAAiB,KAAM,IAC5E,MAApBxgB,EAAK8T,aAAoB9T,EAAK0O,IAAM1O,EAAK0O,IAAI7N,QAAQb,EAAK8T,WAAY,MAC1E9T,EAAK0O,IAAMxG,SAASlI,EAAK0O,KAAO8iB,WAAWxxB,EAAK0O,KAAO+iB,IACnDljB,MAAMvO,EAAK0O,OAAM1O,EAAK0O,IAAMgjB,OAAOC,YAE1B,OAAb3xB,EAAKyO,MACLzO,EAAKyO,IAAMzO,EAAKyO,IAAItF,WAAWtI,QAAQ,IAAIX,OAAO1B,EAAU2e,YAAYnd,EAAKwgB,gBAAiB,KAAM,IAC5E,MAApBxgB,EAAK8T,aAAoB9T,EAAKyO,IAAMzO,EAAKyO,IAAI5N,QAAQb,EAAK8T,WAAY,MAC1E9T,EAAKyO,IAAMvG,SAASlI,EAAKyO,KAAO+iB,WAAWxxB,EAAKyO,KAAOgjB,IACnDljB,MAAMvO,EAAKyO,OAAMzO,EAAKyO,IAAMijB,OAAOE,YAE3C5xB,EAAKuxB,mBAAqB,QAc1BA,CAAmBvxB,GACF,OAAbA,EAAK0O,KAA6B,OAAb1O,EAAKyO,IAAc,CAIxC,GAHA6iB,EAAWtxB,EAAKI,SAASH,EAAOkE,KAAK,SAAKtF,EAAW0C,EAAEmB,OAAO,GAAI1C,EAAM,CACpE0wB,gBAAgB,KAEH,OAAb1wB,EAAK0O,KAAgB4iB,EAAWtxB,EAAK0O,IAErC,OADA1O,EAAKkU,WAAalU,EAAK0O,IAAM,EACtB1O,EAAKiT,eAAejT,EAAK0O,IAAIvF,WAAWtI,QAAQ,IAAKb,EAAK8T,YAAY7P,MAAM,IAAKwQ,EAAU,CAC9FrF,MAAOqF,EACPkc,QAAQ,EACRhtB,YAAa,KACd3D,GACA,GAAiB,OAAbA,EAAKyO,KAAgB6iB,EAAWtxB,EAAKyO,IAE5C,OADAzO,EAAKkU,WAAalU,EAAKyO,IAAM,EACtBzO,EAAKiT,eAAejT,EAAKyO,IAAItF,WAAWtI,QAAQ,IAAKb,EAAK8T,YAAY7P,MAAM,IAAKwQ,EAAU,CAC9FrF,MAAOqF,EACPkc,QAAQ,EACRhtB,YAAa,KACd3D,GAGX,OAAOA,EAAKiT,eAAehT,EAAQwU,EAAU,CACzCrF,MAAOqF,EACP9Q,YAAa,IACb+Q,MAAO,QACR1U,GAEL,IAAK,YACH,MAAO,CACHoP,MAAOqF,KAQvBnV,MAAO,CACHuyB,YAAa,SAAqB7xB,EAAM8xB,GACpC,OAAOA,EAAa,IAAI5xB,OAAO,IAAM1B,EAAU2e,YAAYnd,EAAKswB,eAAeC,OAAS,OAAS,IAAIrwB,OAAO,IAAM1B,EAAU2e,YAAYnd,EAAKswB,eAAeC,OAAS,YAEzKwB,aAAc,SAAsB/xB,GAChC,OAAO,IAAIE,OAAO,OAAS1B,EAAU2e,YAAYnd,EAAKwgB,gBAAkBhiB,EAAU2e,YAAYnd,EAAK2D,YAAYqB,OAAO,IAAM,QAGpIrF,YAAa,CACTqyB,IAAK,CACDhzB,UAAW,SAAmBY,EAAMC,EAASC,EAAKC,EAAQC,EAAMwR,GAC5D,IAAIrC,EACJ,GAAa,MAATvP,GAAyB,MAATA,EAAc,CAC9BuP,EAAU,CACNkD,OAAQ,GACR/V,EAAG,GAEP,IAAK,IAAIJ,EAAI,EAAGC,EAAa,MAATyD,EAAe,EAAI,EAAG1D,EAAIC,EAAGD,IAC7CiT,EAAQkD,OAAOzK,KAAK,CAChB9H,IAAKA,EAAM5D,EACXI,EAAG,IAIX,OADA6S,EAAQrP,IAAMA,EAAM3D,EACbgT,EAGX,IAAgB,KADhBA,EAAUpP,EAAS,IAAIG,OAAO,OAAS1B,EAAU2e,YAAYnd,EAAKwgB,gBAAkB,KAAKrgB,KAAKP,GAAQ,IAAIM,OAAO,SAASC,KAAKP,KAE3H,IAA0B,IAAtBI,EAAK+C,mBAAyDlE,IAAhCgB,EAAQ0E,eAAezE,IAAgE,MAA1CD,EAAQ0E,eAAezE,GAAKqH,MAAMkB,MAAgBmJ,EAAa,CAC1I,IAAIqf,EAAehxB,EAAQI,OAAOkE,KAAK,IAGnC8tB,GADJpB,GADAA,EAAeA,EAAahwB,QAAQ,IAAIX,OAAO,KAAO1B,EAAU2e,YAAYnd,EAAKswB,eAAeC,OAAS,IAAK,KAAM,KACxF1vB,QAAQ,IAAIX,OAAO1B,EAAU2e,YAAYnd,EAAKswB,eAAeE,MAAQ,KAAM,KACvEvsB,MAAMjE,EAAK8T,YACvCme,EAAaxuB,OAAS,IACtBwuB,EAAa,GAAKA,EAAa,GAAGpxB,QAAQ,KAAMb,EAAK2D,YAAYqB,OAAO,KAEpD,MAApBitB,EAAa,KACbA,EAAa,GAAKA,EAAa,GAAGpxB,QAAQ,KAAMb,EAAK2D,YAAYqB,OAAO,KAE5E6rB,EAAeoB,EAAa,GAAKjyB,EAAK8T,WAAame,EAAa,IAAM,GACtE,IAAIC,EAAiBryB,EAAQ2E,QAAQL,KAAK,IAI1C,IAHI0sB,IAAiB7wB,EAAK8T,aACtB+c,EAAeqB,GAEwD,OAApErB,EAAa1pB,MAAM3I,EAAU2e,YAAY+U,GAAkB,MAC9DA,EAAiBA,EAAevqB,MAAM,GAKtCwH,OADsBtQ,KAD1BgyB,GADAA,EAAeA,EAAahwB,QAAQqxB,EAAgB,KACxBjuB,MAAM,KACjBnE,GACH,CACNA,IAAKA,EACLkS,OAAQlS,GAGF,CACNA,IAAKA,SAITC,GAAUH,IAASI,EAAK8T,iBAAkDjV,IAApCgB,EAAQ0E,eAAezE,EAAM,KAC3EqP,EAAU,CACNkD,OAAQ,CACJvS,IAAKA,EACLxD,EAAG,GAEPwD,IAAKA,EAAM,IAGnB,OAAOqP,GAEXiiB,YAAa,GAEjBe,IAAK,CACDnzB,UAAW,SAAmBY,EAAMC,EAASC,EAAKC,EAAQC,GACtD,OAAOA,EAAKqwB,aAAwB,MAATzwB,GAAgBA,IAASI,EAAKswB,eAAeC,QAE5Ea,YAAa,EACbztB,YAAa,IAEjB5C,IAAK,CACD/B,UAAW,SAAmBY,EAAMC,EAASC,EAAKC,EAAQC,GACtD,OAAOA,EAAKqwB,YAAczwB,IAASI,EAAKswB,eAAeE,MAE3DY,YAAa,EACbztB,YAAa,IAEjByuB,IAAK,CACDpzB,UAAW,SAAmBY,EAAMC,EAASC,EAAKC,EAAQC,GACtD,IAAIqyB,EAAQ,IAAM7zB,EAAU2e,YAAYnd,EAAK8T,YAAc,IACvD3E,EAAU,IAAIjP,OAAOmyB,GAAOlyB,KAAKP,GAMrC,OALIuP,GAAWtP,EAAQ0E,eAAezE,IAAQD,EAAQ0E,eAAezE,GAAKqH,MAAMxD,cAAgB3D,EAAK8T,aACjG3E,EAAU,CACNC,MAAOtP,EAAM,IAGdqP,GAEXiiB,YAAa,EACbztB,YAAa,SAAqB3D,GAC9B,OAAOA,EAAK8T,cAIxB1T,SAAU,SAAkBC,EAAaC,EAAeN,GACpD,GAAsB,KAAlBM,IAA0C,IAAlBN,EAAKijB,SAC7B,OAAO3iB,EAEX,IAAIuwB,EAAexwB,EAAYQ,QAAQb,EAAKgwB,OAAQ,IAMpD,OAJAa,GADAA,EAAeA,EAAahwB,QAAQb,EAAKmwB,OAAQ,KACrBtvB,QAAQ,IAAIX,OAAO1B,EAAU2e,YAAYnd,EAAKwgB,gBAAiB,KAAM,IAC9D,KAA/BxgB,EAAK2D,YAAYqB,OAAO,KACxB6rB,EAAeA,EAAahwB,QAAQ,IAAIX,OAAOF,EAAK2D,YAAYqB,OAAO,GAAI,KAAM,MAEjFhF,EAAK0wB,gBACmB,KAApB1wB,EAAK8T,aAAgE,IAA3C+c,EAAahvB,QAAQ7B,EAAK8T,cAAoB+c,EAAeA,EAAahwB,QAAQrC,EAAU2e,YAAY/gB,KAAKiG,KAAMrC,EAAK8T,YAAa,MAEnK+c,GADAA,EAAeA,EAAahwB,QAAQ,IAAIX,OAAO,IAAM1B,EAAU2e,YAAYnd,EAAKswB,eAAeC,QAAS,MAC5E1vB,QAAQ,IAAIX,OAAO1B,EAAU2e,YAAYnd,EAAKswB,eAAeE,MAAQ,KAAM,IAChGkB,OAAOb,IAEXA,GAEX7d,WAAY,SAAoB/S,EAAQD,GACpC,IAAIK,GAAeL,EAAK+C,aAAe9C,EAAO0H,QAAQzD,UAAYjE,GAAQkE,KAAK,IAO/E,OAFA9D,GADAA,GADAA,GADAA,GADAA,EAAcA,EAAYQ,QAAQ,IAAIX,OAAO,IAAM1B,EAAU2e,YAAYnd,EAAKswB,eAAeC,QAAS,MAC5E1vB,QAAQ,IAAIX,OAAO1B,EAAU2e,YAAYnd,EAAKswB,eAAeE,MAAQ,KAAM,KAC3E3vB,QAAQb,EAAKgwB,OAAQ,KACrBnvB,QAAQb,EAAKmwB,OAAQ,KACrBtvB,QAAQ,IAAIX,OAAO1B,EAAU2e,YAAYnd,EAAKwgB,gBAAkB,aAAc,KAAM,MACtF,MAApBxgB,EAAK8T,aAAoBzT,EAAcA,EAAYQ,QAAQrC,EAAU2e,YAAYnd,EAAK8T,YAAa,MAChG5L,SAAS7H,IAEpB2a,aAAc,SAAsBiK,EAAcjlB,GAC9CA,EAAKkU,gBAAarV,EAClB,IAAIiV,EAAa9T,EAAK8T,YAAc,IACR,iBAAhBmR,GAA+C,WAAnBjlB,EAAK6a,WAA0C,KAAf/G,IACpEmR,EAAeA,EAAa9b,WAAWtI,QAAQ,IAAKiT,IAExD,IAAIwe,EAAarN,EAAahhB,MAAM6P,GAAa+d,EAAcS,EAAW,GAAGzxB,QAAQ,YAAa,IAAK0xB,EAAcD,EAAW7uB,OAAS,EAAI6uB,EAAW,GAAGzxB,QAAQ,UAAW,IAAM,GACpLokB,EAAe4M,GAA+B,KAAhBU,EAAqBze,EAAaye,EAAcA,GAC9E,IAAIhD,EAAS,EACb,GAAmB,KAAfzb,IACAyb,EAASgD,EAAY9uB,OACD,KAAhB8uB,GAAoB,CACpB,IAAIC,EAAe1oB,KAAK2oB,IAAI,GAAIlD,GAAU,GACtCrnB,SAASlI,EAAKuvB,UACdA,EAASzmB,SAAS9I,EAAKuvB,QACvBiD,EAAe1oB,KAAK2oB,IAAI,GAAIlD,IAEhCtK,EAAeA,EAAapkB,QAAQrC,EAAU2e,YAAYrJ,GAAa,KACnE5L,SAAS+c,KAAeA,EAAenb,KAAK4oB,MAAMlB,WAAWvM,GAAgBuN,GAAgBA,GACjGvN,EAAeA,EAAa9b,WAAWtI,QAAQ,IAAKiT,GAM5D,OAHoB,IAAhB9T,EAAKuvB,SAA6E,IAA7DtK,EAAapjB,QAAQrD,EAAU2e,YAAYrJ,MAChEmR,EAAeA,EAAa0N,UAAU,EAAG1N,EAAapjB,QAAQrD,EAAU2e,YAAYrJ,MAxdpG,SAAqB7T,EAAQsvB,EAAQvvB,GACjC,GAAIuvB,EAAS,EAAG,CACZ,IAAIuB,EAAgBvvB,EAAE2J,QAAQlL,EAAK8T,WAAY7T,IACxB,IAAnB6wB,IACA7wB,EAAO2H,KAAK5H,EAAK8T,YACjBgd,EAAgB7wB,EAAOwD,OAAS,GAEpC,IAAK,IAAIvH,EAAI,EAAGA,GAAKqzB,EAAQrzB,IACzB+D,EAAO6wB,EAAgB50B,GAAK+D,EAAO6wB,EAAgB50B,IAAM,IAGjE,OAAO+D,EA+cQ2yB,CAAY3N,EAAa9b,WAAWlF,MAAM,IAAKsrB,EAAQvvB,GAAMmE,KAAK,KAE7EgU,UAAW,SAAmBlC,EAAGhW,EAAQwU,EAAUzU,GAC/C,IAAIgV,EAASzT,EAAEc,MACf,GAAI4T,EAAEQ,QACF,OAAQR,EAAEzG,SACR,KAAKhR,EAAUgR,QAAQma,GACrB3U,EAAOkY,IAAIsE,WAAWnvB,KAAK8D,UAAUyW,iBAAmB9T,SAAS9I,EAAKywB,OACtEzb,EAAOG,QAAQ,YACf,MAEF,KAAK3W,EAAUgR,QAAQga,KACrBxU,EAAOkY,IAAIsE,WAAWnvB,KAAK8D,UAAUyW,iBAAmB9T,SAAS9I,EAAKywB,OACtEzb,EAAOG,QAAQ,eAM/B0d,SAAU,CACN7C,OAAQ,KACRxP,eAAgB,IAChBte,MAAO,UACPyB,YAAa,IACb6rB,WAAW,EACXD,OAAQ,EACRO,gBAAgB,EAChB7U,sBAAsB,GAE1B6X,QAAS,CACL5wB,MAAO,WAEX6wB,QAAS,CACL7wB,MAAO,UACPqtB,OAAQ,EACRzb,WAAY,IAEhBkf,WAAY,CACR9wB,MAAO,UACPqtB,OAAQ,EACRO,gBAAgB,EAChBhc,WAAY,IACZnQ,YAAa,IACb6rB,WAAW,EACX9gB,IAAK,EACLD,IAAK,IACL0hB,OAAQ,KACRE,YAAY,KAGb7xB,IA1hBoFC,EAA+B2C,MAAMpF,EAAS0C,GAAgCD,KACrHxC,EAAOD,QAAU2C,IA2hB1E,SAAS1C,EAAQD,EAASF,GACzB,aACA,IAAI2C,EAAgCC,EAA8BC,EAC9D0C,EAA4B,mBAAXrE,QAAoD,iBAApBA,OAAO4B,SAAwB,SAASP,GACzF,cAAcA,GACd,SAASA,GACT,OAAOA,GAAyB,mBAAXrB,QAAyBqB,EAAIiD,cAAgBtE,QAAUqB,IAAQrB,OAAOa,UAAY,gBAAkBQ,GAInHK,EAA+B,CAAE5C,EAAoB,GAAIA,EAAoB,SAE7C+C,KADQF,EAA0E,mBAApHF,EAGL,SAAS8C,EAAG/C,GA+EX,YA9EuBK,IAAnB0C,EAAE6G,GAAGjC,YACL5E,EAAE6G,GAAGjC,UAAY,SAASiC,EAAIjG,GAC1B,IAAI8wB,EAAS3rB,EAAQjF,KAAK,GAE1B,QADgBxD,IAAZsD,IAAuBA,EAAU,IACnB,iBAAPiG,EACP,OAAQA,GACN,IAAK,gBACH,OAAOd,GAASA,EAAMnB,UAAYmB,EAAMnB,UAAUyW,gBAAkBrb,EAAE+F,GAAO4lB,MAE/E,IAAK,SACH,OAAO7qB,KAAK6C,KAAK,WACT7C,KAAK8D,WAAW9D,KAAK8D,UAAU6L,WAGzC,IAAK,eACH,OAAO1K,GAASA,EAAMnB,UAAYmB,EAAMnB,UAAU0gB,eAAiB,GAErE,IAAK,iBACH,SAAOvf,IAASA,EAAMnB,YAAYmB,EAAMnB,UAAU2gB,iBAEpD,IAAK,aACH,OAAOxf,IAASA,EAAMnB,WAAYmB,EAAMnB,UAAU6M,aAEpD,IAAK,cACH,OAAO1L,GAASA,EAAMnB,UAAYmB,EAAMnB,UAAU4gB,mBAAgBloB,EAEpE,IAAK,WACHL,EAAUyoB,SAAS3f,EAAOnF,GAC1B,MAEF,IAAK,SACH,GAAuB,iBAAZA,EAKP,OAAOE,KAAK6C,KAAK,WACb,QAAuBrG,IAAnBwD,KAAK8D,UACL,OAAO9D,KAAK8D,UAAUggB,OAAOhkB,KANrC,GAAImF,QAA6BzI,IAApByI,EAAMnB,UACf,OAAOmB,EAAMnB,UAAUggB,OAAOhkB,GAStC,MAEF,QAGE,OAFAA,EAAQD,MAAQkG,EAChB6qB,EAAU,IAAIz0B,EAAU2D,GACjBE,KAAK6C,KAAK,WACb+tB,EAAQvzB,KAAK2C,YAGlB,CAAA,GAAIsN,MAAM7K,QAAQsD,GAGrB,OAFAjG,EAAQD,MAAQkG,EAChB6qB,EAAU,IAAIz0B,EAAU2D,GACjBE,KAAK6C,KAAK,WACb+tB,EAAQvzB,KAAK2C,QAEd,GAA+D,gBAA5C,IAAP+F,EAAqB,YAAc/G,EAAQ+G,IAE1D,OADA6qB,EAAU,IAAIz0B,EAAU4J,QACRvJ,IAAZuJ,EAAG1I,WAAmCb,IAAbuJ,EAAGlG,MACrBG,KAAK6C,KAAK,WACb,QAAuBrG,IAAnBwD,KAAK8D,UACL,OAAO9D,KAAK8D,UAAUggB,OAAO/d,GAC1B6qB,EAAQvzB,KAAK2C,QAGjBA,KAAK6C,KAAK,WACb+tB,EAAQvzB,KAAK2C,QAGlB,QAAWxD,IAAPuJ,EACP,OAAO/F,KAAK6C,KAAK,YACb+tB,EAAU,IAAIz0B,EAAU2D,IAChBzC,KAAK2C,WAKtBd,EAAE6G,GAAGjC,YAlFyH1H,EAA+B2C,MAAMpF,EAAS0C,GAAgCD,KAC/JxC,EAAOD,QAAU2C","sourcesContent":["/*!\n* jquery.inputmask.bundle.js\n* https://github.com/RobinHerbots/Inputmask\n* Copyright (c) 2010 - 2019 Robin Herbots\n* Licensed under the MIT license (http://www.opensource.org/licenses/mit-license.php)\n* Version: 4.0.9\n*/\n\n(function(modules) {\n    var installedModules = {};\n    function __webpack_require__(moduleId) {\n        if (installedModules[moduleId]) {\n            return installedModules[moduleId].exports;\n        }\n        var module = installedModules[moduleId] = {\n            i: moduleId,\n            l: false,\n            exports: {}\n        };\n        modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n        module.l = true;\n        return module.exports;\n    }\n    __webpack_require__.m = modules;\n    __webpack_require__.c = installedModules;\n    __webpack_require__.d = function(exports, name, getter) {\n        if (!__webpack_require__.o(exports, name)) {\n            Object.defineProperty(exports, name, {\n                enumerable: true,\n                get: getter\n            });\n        }\n    };\n    __webpack_require__.r = function(exports) {\n        if (typeof Symbol !== \"undefined\" && Symbol.toStringTag) {\n            Object.defineProperty(exports, Symbol.toStringTag, {\n                value: \"Module\"\n            });\n        }\n        Object.defineProperty(exports, \"__esModule\", {\n            value: true\n        });\n    };\n    __webpack_require__.t = function(value, mode) {\n        if (mode & 1) value = __webpack_require__(value);\n        if (mode & 8) return value;\n        if (mode & 4 && typeof value === \"object\" && value && value.__esModule) return value;\n        var ns = Object.create(null);\n        __webpack_require__.r(ns);\n        Object.defineProperty(ns, \"default\", {\n            enumerable: true,\n            value: value\n        });\n        if (mode & 2 && typeof value != \"string\") for (var key in value) __webpack_require__.d(ns, key, function(key) {\n            return value[key];\n        }.bind(null, key));\n        return ns;\n    };\n    __webpack_require__.n = function(module) {\n        var getter = module && module.__esModule ? function getDefault() {\n            return module[\"default\"];\n        } : function getModuleExports() {\n            return module;\n        };\n        __webpack_require__.d(getter, \"a\", getter);\n        return getter;\n    };\n    __webpack_require__.o = function(object, property) {\n        return Object.prototype.hasOwnProperty.call(object, property);\n    };\n    __webpack_require__.p = \"\";\n    return __webpack_require__(__webpack_require__.s = 0);\n})([ function(module, exports, __webpack_require__) {\n    \"use strict\";\n    __webpack_require__(1);\n    __webpack_require__(6);\n    __webpack_require__(7);\n    var _inputmask = __webpack_require__(2);\n    var _inputmask2 = _interopRequireDefault(_inputmask);\n    var _inputmask3 = __webpack_require__(3);\n    var _inputmask4 = _interopRequireDefault(_inputmask3);\n    var _jquery = __webpack_require__(4);\n    var _jquery2 = _interopRequireDefault(_jquery);\n    function _interopRequireDefault(obj) {\n        return obj && obj.__esModule ? obj : {\n            default: obj\n        };\n    }\n    if (_inputmask4.default === _jquery2.default) {\n        __webpack_require__(8);\n    }\n    window.Inputmask = _inputmask2.default;\n}, function(module, exports, __webpack_require__) {\n    \"use strict\";\n    var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;\n    var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function(obj) {\n        return typeof obj;\n    } : function(obj) {\n        return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n    (function(factory) {\n        if (true) {\n            !(__WEBPACK_AMD_DEFINE_ARRAY__ = [ __webpack_require__(2) ], __WEBPACK_AMD_DEFINE_FACTORY__ = factory, \n            __WEBPACK_AMD_DEFINE_RESULT__ = typeof __WEBPACK_AMD_DEFINE_FACTORY__ === \"function\" ? __WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__) : __WEBPACK_AMD_DEFINE_FACTORY__, \n            __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n        } else {}\n    })(function(Inputmask) {\n        Inputmask.extendDefinitions({\n            A: {\n                validator: \"[A-Za-z\\u0410-\\u044f\\u0401\\u0451\\xc0-\\xff\\xb5]\",\n                casing: \"upper\"\n            },\n            \"&\": {\n                validator: \"[0-9A-Za-z\\u0410-\\u044f\\u0401\\u0451\\xc0-\\xff\\xb5]\",\n                casing: \"upper\"\n            },\n            \"#\": {\n                validator: \"[0-9A-Fa-f]\",\n                casing: \"upper\"\n            }\n        });\n        Inputmask.extendAliases({\n            cssunit: {\n                regex: \"[+-]?[0-9]+\\\\.?([0-9]+)?(px|em|rem|ex|%|in|cm|mm|pt|pc)\"\n            },\n            url: {\n                regex: \"(https?|ftp)//.*\",\n                autoUnmask: false\n            },\n            ip: {\n                mask: \"i[i[i]].i[i[i]].i[i[i]].i[i[i]]\",\n                definitions: {\n                    i: {\n                        validator: function validator(chrs, maskset, pos, strict, opts) {\n                            if (pos - 1 > -1 && maskset.buffer[pos - 1] !== \".\") {\n                                chrs = maskset.buffer[pos - 1] + chrs;\n                                if (pos - 2 > -1 && maskset.buffer[pos - 2] !== \".\") {\n                                    chrs = maskset.buffer[pos - 2] + chrs;\n                                } else chrs = \"0\" + chrs;\n                            } else chrs = \"00\" + chrs;\n                            return new RegExp(\"25[0-5]|2[0-4][0-9]|[01][0-9][0-9]\").test(chrs);\n                        }\n                    }\n                },\n                onUnMask: function onUnMask(maskedValue, unmaskedValue, opts) {\n                    return maskedValue;\n                },\n                inputmode: \"numeric\"\n            },\n            email: {\n                mask: \"*{1,64}[.*{1,64}][.*{1,64}][.*{1,63}]@-{1,63}.-{1,63}[.-{1,63}][.-{1,63}]\",\n                greedy: false,\n                casing: \"lower\",\n                onBeforePaste: function onBeforePaste(pastedValue, opts) {\n                    pastedValue = pastedValue.toLowerCase();\n                    return pastedValue.replace(\"mailto:\", \"\");\n                },\n                definitions: {\n                    \"*\": {\n                        validator: \"[0-9\\uff11-\\uff19A-Za-z\\u0410-\\u044f\\u0401\\u0451\\xc0-\\xff\\xb5!#$%&'*+/=?^_`{|}~-]\"\n                    },\n                    \"-\": {\n                        validator: \"[0-9A-Za-z-]\"\n                    }\n                },\n                onUnMask: function onUnMask(maskedValue, unmaskedValue, opts) {\n                    return maskedValue;\n                },\n                inputmode: \"email\"\n            },\n            mac: {\n                mask: \"##:##:##:##:##:##\"\n            },\n            vin: {\n                mask: \"V{13}9{4}\",\n                definitions: {\n                    V: {\n                        validator: \"[A-HJ-NPR-Za-hj-npr-z\\\\d]\",\n                        casing: \"upper\"\n                    }\n                },\n                clearIncomplete: true,\n                autoUnmask: true\n            }\n        });\n        return Inputmask;\n    });\n}, function(module, exports, __webpack_require__) {\n    \"use strict\";\n    var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;\n    var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function(obj) {\n        return typeof obj;\n    } : function(obj) {\n        return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n    (function(factory) {\n        if (true) {\n            !(__WEBPACK_AMD_DEFINE_ARRAY__ = [ __webpack_require__(3), __webpack_require__(5) ], \n            __WEBPACK_AMD_DEFINE_FACTORY__ = factory, __WEBPACK_AMD_DEFINE_RESULT__ = typeof __WEBPACK_AMD_DEFINE_FACTORY__ === \"function\" ? __WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__) : __WEBPACK_AMD_DEFINE_FACTORY__, \n            __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n        } else {}\n    })(function($, window, undefined) {\n        var document = window.document, ua = navigator.userAgent, ie = ua.indexOf(\"MSIE \") > 0 || ua.indexOf(\"Trident/\") > 0, mobile = isInputEventSupported(\"touchstart\"), iemobile = /iemobile/i.test(ua), iphone = /iphone/i.test(ua) && !iemobile;\n        function Inputmask(alias, options, internal) {\n            if (!(this instanceof Inputmask)) {\n                return new Inputmask(alias, options, internal);\n            }\n            this.el = undefined;\n            this.events = {};\n            this.maskset = undefined;\n            this.refreshValue = false;\n            if (internal !== true) {\n                if ($.isPlainObject(alias)) {\n                    options = alias;\n                } else {\n                    options = options || {};\n                    if (alias) options.alias = alias;\n                }\n                this.opts = $.extend(true, {}, this.defaults, options);\n                this.noMasksCache = options && options.definitions !== undefined;\n                this.userOptions = options || {};\n                this.isRTL = this.opts.numericInput;\n                resolveAlias(this.opts.alias, options, this.opts);\n            }\n        }\n        Inputmask.prototype = {\n            dataAttribute: \"data-inputmask\",\n            defaults: {\n                placeholder: \"_\",\n                optionalmarker: [ \"[\", \"]\" ],\n                quantifiermarker: [ \"{\", \"}\" ],\n                groupmarker: [ \"(\", \")\" ],\n                alternatormarker: \"|\",\n                escapeChar: \"\\\\\",\n                mask: null,\n                regex: null,\n                oncomplete: $.noop,\n                onincomplete: $.noop,\n                oncleared: $.noop,\n                repeat: 0,\n                greedy: false,\n                autoUnmask: false,\n                removeMaskOnSubmit: false,\n                clearMaskOnLostFocus: true,\n                insertMode: true,\n                clearIncomplete: false,\n                alias: null,\n                onKeyDown: $.noop,\n                onBeforeMask: null,\n                onBeforePaste: function onBeforePaste(pastedValue, opts) {\n                    return $.isFunction(opts.onBeforeMask) ? opts.onBeforeMask.call(this, pastedValue, opts) : pastedValue;\n                },\n                onBeforeWrite: null,\n                onUnMask: null,\n                showMaskOnFocus: true,\n                showMaskOnHover: true,\n                onKeyValidation: $.noop,\n                skipOptionalPartCharacter: \" \",\n                numericInput: false,\n                rightAlign: false,\n                undoOnEscape: true,\n                radixPoint: \"\",\n                _radixDance: false,\n                groupSeparator: \"\",\n                keepStatic: null,\n                positionCaretOnTab: true,\n                tabThrough: false,\n                supportsInputType: [ \"text\", \"tel\", \"url\", \"password\", \"search\" ],\n                ignorables: [ 8, 9, 13, 19, 27, 33, 34, 35, 36, 37, 38, 39, 40, 45, 46, 93, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 0, 229 ],\n                isComplete: null,\n                preValidation: null,\n                postValidation: null,\n                staticDefinitionSymbol: undefined,\n                jitMasking: false,\n                nullable: true,\n                inputEventOnly: false,\n                noValuePatching: false,\n                positionCaretOnClick: \"lvp\",\n                casing: null,\n                inputmode: \"verbatim\",\n                colorMask: false,\n                disablePredictiveText: false,\n                importDataAttributes: true,\n                shiftPositions: true\n            },\n            definitions: {\n                9: {\n                    validator: \"[0-9\\uff11-\\uff19]\",\n                    definitionSymbol: \"*\"\n                },\n                a: {\n                    validator: \"[A-Za-z\\u0410-\\u044f\\u0401\\u0451\\xc0-\\xff\\xb5]\",\n                    definitionSymbol: \"*\"\n                },\n                \"*\": {\n                    validator: \"[0-9\\uff11-\\uff19A-Za-z\\u0410-\\u044f\\u0401\\u0451\\xc0-\\xff\\xb5]\"\n                }\n            },\n            aliases: {},\n            masksCache: {},\n            mask: function mask(elems) {\n                var that = this;\n                function importAttributeOptions(npt, opts, userOptions, dataAttribute) {\n                    if (opts.importDataAttributes === true) {\n                        var attrOptions = npt.getAttribute(dataAttribute), option, dataoptions, optionData, p;\n                        var importOption = function importOption(option, optionData) {\n                            optionData = optionData !== undefined ? optionData : npt.getAttribute(dataAttribute + \"-\" + option);\n                            if (optionData !== null) {\n                                if (typeof optionData === \"string\") {\n                                    if (option.indexOf(\"on\") === 0) optionData = window[optionData]; else if (optionData === \"false\") optionData = false; else if (optionData === \"true\") optionData = true;\n                                }\n                                userOptions[option] = optionData;\n                            }\n                        };\n                        if (attrOptions && attrOptions !== \"\") {\n                            attrOptions = attrOptions.replace(/'/g, '\"');\n                            dataoptions = JSON.parse(\"{\" + attrOptions + \"}\");\n                        }\n                        if (dataoptions) {\n                            optionData = undefined;\n                            for (p in dataoptions) {\n                                if (p.toLowerCase() === \"alias\") {\n                                    optionData = dataoptions[p];\n                                    break;\n                                }\n                            }\n                        }\n                        importOption(\"alias\", optionData);\n                        if (userOptions.alias) {\n                            resolveAlias(userOptions.alias, userOptions, opts);\n                        }\n                        for (option in opts) {\n                            if (dataoptions) {\n                                optionData = undefined;\n                                for (p in dataoptions) {\n                                    if (p.toLowerCase() === option.toLowerCase()) {\n                                        optionData = dataoptions[p];\n                                        break;\n                                    }\n                                }\n                            }\n                            importOption(option, optionData);\n                        }\n                    }\n                    $.extend(true, opts, userOptions);\n                    if (npt.dir === \"rtl\" || opts.rightAlign) {\n                        npt.style.textAlign = \"right\";\n                    }\n                    if (npt.dir === \"rtl\" || opts.numericInput) {\n                        npt.dir = \"ltr\";\n                        npt.removeAttribute(\"dir\");\n                        opts.isRTL = true;\n                    }\n                    return Object.keys(userOptions).length;\n                }\n                if (typeof elems === \"string\") {\n                    elems = document.getElementById(elems) || document.querySelectorAll(elems);\n                }\n                elems = elems.nodeName ? [ elems ] : elems;\n                $.each(elems, function(ndx, el) {\n                    var scopedOpts = $.extend(true, {}, that.opts);\n                    if (importAttributeOptions(el, scopedOpts, $.extend(true, {}, that.userOptions), that.dataAttribute)) {\n                        var maskset = generateMaskSet(scopedOpts, that.noMasksCache);\n                        if (maskset !== undefined) {\n                            if (el.inputmask !== undefined) {\n                                el.inputmask.opts.autoUnmask = true;\n                                el.inputmask.remove();\n                            }\n                            el.inputmask = new Inputmask(undefined, undefined, true);\n                            el.inputmask.opts = scopedOpts;\n                            el.inputmask.noMasksCache = that.noMasksCache;\n                            el.inputmask.userOptions = $.extend(true, {}, that.userOptions);\n                            el.inputmask.isRTL = scopedOpts.isRTL || scopedOpts.numericInput;\n                            el.inputmask.el = el;\n                            el.inputmask.maskset = maskset;\n                            $.data(el, \"_inputmask_opts\", scopedOpts);\n                            maskScope.call(el.inputmask, {\n                                action: \"mask\"\n                            });\n                        }\n                    }\n                });\n                return elems && elems[0] ? elems[0].inputmask || this : this;\n            },\n            option: function option(options, noremask) {\n                if (typeof options === \"string\") {\n                    return this.opts[options];\n                } else if ((typeof options === \"undefined\" ? \"undefined\" : _typeof(options)) === \"object\") {\n                    $.extend(this.userOptions, options);\n                    if (this.el && noremask !== true) {\n                        this.mask(this.el);\n                    }\n                    return this;\n                }\n            },\n            unmaskedvalue: function unmaskedvalue(value) {\n                this.maskset = this.maskset || generateMaskSet(this.opts, this.noMasksCache);\n                return maskScope.call(this, {\n                    action: \"unmaskedvalue\",\n                    value: value\n                });\n            },\n            remove: function remove() {\n                return maskScope.call(this, {\n                    action: \"remove\"\n                });\n            },\n            getemptymask: function getemptymask() {\n                this.maskset = this.maskset || generateMaskSet(this.opts, this.noMasksCache);\n                return maskScope.call(this, {\n                    action: \"getemptymask\"\n                });\n            },\n            hasMaskedValue: function hasMaskedValue() {\n                return !this.opts.autoUnmask;\n            },\n            isComplete: function isComplete() {\n                this.maskset = this.maskset || generateMaskSet(this.opts, this.noMasksCache);\n                return maskScope.call(this, {\n                    action: \"isComplete\"\n                });\n            },\n            getmetadata: function getmetadata() {\n                this.maskset = this.maskset || generateMaskSet(this.opts, this.noMasksCache);\n                return maskScope.call(this, {\n                    action: \"getmetadata\"\n                });\n            },\n            isValid: function isValid(value) {\n                this.maskset = this.maskset || generateMaskSet(this.opts, this.noMasksCache);\n                return maskScope.call(this, {\n                    action: \"isValid\",\n                    value: value\n                });\n            },\n            format: function format(value, metadata) {\n                this.maskset = this.maskset || generateMaskSet(this.opts, this.noMasksCache);\n                return maskScope.call(this, {\n                    action: \"format\",\n                    value: value,\n                    metadata: metadata\n                });\n            },\n            setValue: function setValue(value) {\n                if (this.el) {\n                    $(this.el).trigger(\"setvalue\", [ value ]);\n                }\n            },\n            analyseMask: function analyseMask(mask, regexMask, opts) {\n                var tokenizer = /(?:[?*+]|\\{[0-9\\+\\*]+(?:,[0-9\\+\\*]*)?(?:\\|[0-9\\+\\*]*)?\\})|[^.?*+^${[]()|\\\\]+|./g, regexTokenizer = /\\[\\^?]?(?:[^\\\\\\]]+|\\\\[\\S\\s]?)*]?|\\\\(?:0(?:[0-3][0-7]{0,2}|[4-7][0-7]?)?|[1-9][0-9]*|x[0-9A-Fa-f]{2}|u[0-9A-Fa-f]{4}|c[A-Za-z]|[\\S\\s]?)|\\((?:\\?[:=!]?)?|(?:[?*+]|\\{[0-9]+(?:,[0-9]*)?\\})\\??|[^.?*+^${[()|\\\\]+|./g, escaped = false, currentToken = new MaskToken(), match, m, openenings = [], maskTokens = [], openingToken, currentOpeningToken, alternator, lastMatch, groupToken;\n                function MaskToken(isGroup, isOptional, isQuantifier, isAlternator) {\n                    this.matches = [];\n                    this.openGroup = isGroup || false;\n                    this.alternatorGroup = false;\n                    this.isGroup = isGroup || false;\n                    this.isOptional = isOptional || false;\n                    this.isQuantifier = isQuantifier || false;\n                    this.isAlternator = isAlternator || false;\n                    this.quantifier = {\n                        min: 1,\n                        max: 1\n                    };\n                }\n                function insertTestDefinition(mtoken, element, position) {\n                    position = position !== undefined ? position : mtoken.matches.length;\n                    var prevMatch = mtoken.matches[position - 1];\n                    if (regexMask) {\n                        if (element.indexOf(\"[\") === 0 || escaped && /\\\\d|\\\\s|\\\\w]/i.test(element) || element === \".\") {\n                            mtoken.matches.splice(position++, 0, {\n                                fn: new RegExp(element, opts.casing ? \"i\" : \"\"),\n                                optionality: false,\n                                newBlockMarker: prevMatch === undefined ? \"master\" : prevMatch.def !== element,\n                                casing: null,\n                                def: element,\n                                placeholder: undefined,\n                                nativeDef: element\n                            });\n                        } else {\n                            if (escaped) element = element[element.length - 1];\n                            $.each(element.split(\"\"), function(ndx, lmnt) {\n                                prevMatch = mtoken.matches[position - 1];\n                                mtoken.matches.splice(position++, 0, {\n                                    fn: null,\n                                    optionality: false,\n                                    newBlockMarker: prevMatch === undefined ? \"master\" : prevMatch.def !== lmnt && prevMatch.fn !== null,\n                                    casing: null,\n                                    def: opts.staticDefinitionSymbol || lmnt,\n                                    placeholder: opts.staticDefinitionSymbol !== undefined ? lmnt : undefined,\n                                    nativeDef: (escaped ? \"'\" : \"\") + lmnt\n                                });\n                            });\n                        }\n                        escaped = false;\n                    } else {\n                        var maskdef = (opts.definitions ? opts.definitions[element] : undefined) || Inputmask.prototype.definitions[element];\n                        if (maskdef && !escaped) {\n                            mtoken.matches.splice(position++, 0, {\n                                fn: maskdef.validator ? typeof maskdef.validator == \"string\" ? new RegExp(maskdef.validator, opts.casing ? \"i\" : \"\") : new function() {\n                                    this.test = maskdef.validator;\n                                }() : new RegExp(\".\"),\n                                optionality: false,\n                                newBlockMarker: prevMatch === undefined ? \"master\" : prevMatch.def !== (maskdef.definitionSymbol || element),\n                                casing: maskdef.casing,\n                                def: maskdef.definitionSymbol || element,\n                                placeholder: maskdef.placeholder,\n                                nativeDef: element\n                            });\n                        } else {\n                            mtoken.matches.splice(position++, 0, {\n                                fn: null,\n                                optionality: false,\n                                newBlockMarker: prevMatch === undefined ? \"master\" : prevMatch.def !== element && prevMatch.fn !== null,\n                                casing: null,\n                                def: opts.staticDefinitionSymbol || element,\n                                placeholder: opts.staticDefinitionSymbol !== undefined ? element : undefined,\n                                nativeDef: (escaped ? \"'\" : \"\") + element\n                            });\n                            escaped = false;\n                        }\n                    }\n                }\n                function verifyGroupMarker(maskToken) {\n                    if (maskToken && maskToken.matches) {\n                        $.each(maskToken.matches, function(ndx, token) {\n                            var nextToken = maskToken.matches[ndx + 1];\n                            if ((nextToken === undefined || nextToken.matches === undefined || nextToken.isQuantifier === false) && token && token.isGroup) {\n                                token.isGroup = false;\n                                if (!regexMask) {\n                                    insertTestDefinition(token, opts.groupmarker[0], 0);\n                                    if (token.openGroup !== true) {\n                                        insertTestDefinition(token, opts.groupmarker[1]);\n                                    }\n                                }\n                            }\n                            verifyGroupMarker(token);\n                        });\n                    }\n                }\n                function defaultCase() {\n                    if (openenings.length > 0) {\n                        currentOpeningToken = openenings[openenings.length - 1];\n                        insertTestDefinition(currentOpeningToken, m);\n                        if (currentOpeningToken.isAlternator) {\n                            alternator = openenings.pop();\n                            for (var mndx = 0; mndx < alternator.matches.length; mndx++) {\n                                if (alternator.matches[mndx].isGroup) alternator.matches[mndx].isGroup = false;\n                            }\n                            if (openenings.length > 0) {\n                                currentOpeningToken = openenings[openenings.length - 1];\n                                currentOpeningToken.matches.push(alternator);\n                            } else {\n                                currentToken.matches.push(alternator);\n                            }\n                        }\n                    } else {\n                        insertTestDefinition(currentToken, m);\n                    }\n                }\n                function reverseTokens(maskToken) {\n                    function reverseStatic(st) {\n                        if (st === opts.optionalmarker[0]) st = opts.optionalmarker[1]; else if (st === opts.optionalmarker[1]) st = opts.optionalmarker[0]; else if (st === opts.groupmarker[0]) st = opts.groupmarker[1]; else if (st === opts.groupmarker[1]) st = opts.groupmarker[0];\n                        return st;\n                    }\n                    maskToken.matches = maskToken.matches.reverse();\n                    for (var match in maskToken.matches) {\n                        if (maskToken.matches.hasOwnProperty(match)) {\n                            var intMatch = parseInt(match);\n                            if (maskToken.matches[match].isQuantifier && maskToken.matches[intMatch + 1] && maskToken.matches[intMatch + 1].isGroup) {\n                                var qt = maskToken.matches[match];\n                                maskToken.matches.splice(match, 1);\n                                maskToken.matches.splice(intMatch + 1, 0, qt);\n                            }\n                            if (maskToken.matches[match].matches !== undefined) {\n                                maskToken.matches[match] = reverseTokens(maskToken.matches[match]);\n                            } else {\n                                maskToken.matches[match] = reverseStatic(maskToken.matches[match]);\n                            }\n                        }\n                    }\n                    return maskToken;\n                }\n                function groupify(matches) {\n                    var groupToken = new MaskToken(true);\n                    groupToken.openGroup = false;\n                    groupToken.matches = matches;\n                    return groupToken;\n                }\n                if (regexMask) {\n                    opts.optionalmarker[0] = undefined;\n                    opts.optionalmarker[1] = undefined;\n                }\n                while (match = regexMask ? regexTokenizer.exec(mask) : tokenizer.exec(mask)) {\n                    m = match[0];\n                    if (regexMask) {\n                        switch (m.charAt(0)) {\n                          case \"?\":\n                            m = \"{0,1}\";\n                            break;\n\n                          case \"+\":\n                          case \"*\":\n                            m = \"{\" + m + \"}\";\n                            break;\n                        }\n                    }\n                    if (escaped) {\n                        defaultCase();\n                        continue;\n                    }\n                    switch (m.charAt(0)) {\n                      case \"(?=\":\n                        break;\n\n                      case \"(?!\":\n                        break;\n\n                      case \"(?<=\":\n                        break;\n\n                      case \"(?<!\":\n                        break;\n\n                      case opts.escapeChar:\n                        escaped = true;\n                        if (regexMask) {\n                            defaultCase();\n                        }\n                        break;\n\n                      case opts.optionalmarker[1]:\n                      case opts.groupmarker[1]:\n                        openingToken = openenings.pop();\n                        openingToken.openGroup = false;\n                        if (openingToken !== undefined) {\n                            if (openenings.length > 0) {\n                                currentOpeningToken = openenings[openenings.length - 1];\n                                currentOpeningToken.matches.push(openingToken);\n                                if (currentOpeningToken.isAlternator) {\n                                    alternator = openenings.pop();\n                                    for (var mndx = 0; mndx < alternator.matches.length; mndx++) {\n                                        alternator.matches[mndx].isGroup = false;\n                                        alternator.matches[mndx].alternatorGroup = false;\n                                    }\n                                    if (openenings.length > 0) {\n                                        currentOpeningToken = openenings[openenings.length - 1];\n                                        currentOpeningToken.matches.push(alternator);\n                                    } else {\n                                        currentToken.matches.push(alternator);\n                                    }\n                                }\n                            } else {\n                                currentToken.matches.push(openingToken);\n                            }\n                        } else defaultCase();\n                        break;\n\n                      case opts.optionalmarker[0]:\n                        openenings.push(new MaskToken(false, true));\n                        break;\n\n                      case opts.groupmarker[0]:\n                        openenings.push(new MaskToken(true));\n                        break;\n\n                      case opts.quantifiermarker[0]:\n                        var quantifier = new MaskToken(false, false, true);\n                        m = m.replace(/[{}]/g, \"\");\n                        var mqj = m.split(\"|\"), mq = mqj[0].split(\",\"), mq0 = isNaN(mq[0]) ? mq[0] : parseInt(mq[0]), mq1 = mq.length === 1 ? mq0 : isNaN(mq[1]) ? mq[1] : parseInt(mq[1]);\n                        if (mq0 === \"*\" || mq0 === \"+\") {\n                            mq0 = mq1 === \"*\" ? 0 : 1;\n                        }\n                        quantifier.quantifier = {\n                            min: mq0,\n                            max: mq1,\n                            jit: mqj[1]\n                        };\n                        var matches = openenings.length > 0 ? openenings[openenings.length - 1].matches : currentToken.matches;\n                        match = matches.pop();\n                        if (match.isAlternator) {\n                            matches.push(match);\n                            matches = match.matches;\n                            var groupToken = new MaskToken(true);\n                            var tmpMatch = matches.pop();\n                            matches.push(groupToken);\n                            matches = groupToken.matches;\n                            match = tmpMatch;\n                        }\n                        if (!match.isGroup) {\n                            match = groupify([ match ]);\n                        }\n                        matches.push(match);\n                        matches.push(quantifier);\n                        break;\n\n                      case opts.alternatormarker:\n                        var groupQuantifier = function groupQuantifier(matches) {\n                            var lastMatch = matches.pop();\n                            if (lastMatch.isQuantifier) {\n                                lastMatch = groupify([ matches.pop(), lastMatch ]);\n                            }\n                            return lastMatch;\n                        };\n                        if (openenings.length > 0) {\n                            currentOpeningToken = openenings[openenings.length - 1];\n                            var subToken = currentOpeningToken.matches[currentOpeningToken.matches.length - 1];\n                            if (currentOpeningToken.openGroup && (subToken.matches === undefined || subToken.isGroup === false && subToken.isAlternator === false)) {\n                                lastMatch = openenings.pop();\n                            } else {\n                                lastMatch = groupQuantifier(currentOpeningToken.matches);\n                            }\n                        } else {\n                            lastMatch = groupQuantifier(currentToken.matches);\n                        }\n                        if (lastMatch.isAlternator) {\n                            openenings.push(lastMatch);\n                        } else {\n                            if (lastMatch.alternatorGroup) {\n                                alternator = openenings.pop();\n                                lastMatch.alternatorGroup = false;\n                            } else {\n                                alternator = new MaskToken(false, false, false, true);\n                            }\n                            alternator.matches.push(lastMatch);\n                            openenings.push(alternator);\n                            if (lastMatch.openGroup) {\n                                lastMatch.openGroup = false;\n                                var alternatorGroup = new MaskToken(true);\n                                alternatorGroup.alternatorGroup = true;\n                                openenings.push(alternatorGroup);\n                            }\n                        }\n                        break;\n\n                      default:\n                        defaultCase();\n                    }\n                }\n                while (openenings.length > 0) {\n                    openingToken = openenings.pop();\n                    currentToken.matches.push(openingToken);\n                }\n                if (currentToken.matches.length > 0) {\n                    verifyGroupMarker(currentToken);\n                    maskTokens.push(currentToken);\n                }\n                if (opts.numericInput || opts.isRTL) {\n                    reverseTokens(maskTokens[0]);\n                }\n                return maskTokens;\n            },\n            positionColorMask: function positionColorMask(input, template) {\n                input.style.left = template.offsetLeft + \"px\";\n            }\n        };\n        Inputmask.extendDefaults = function(options) {\n            $.extend(true, Inputmask.prototype.defaults, options);\n        };\n        Inputmask.extendDefinitions = function(definition) {\n            $.extend(true, Inputmask.prototype.definitions, definition);\n        };\n        Inputmask.extendAliases = function(alias) {\n            $.extend(true, Inputmask.prototype.aliases, alias);\n        };\n        Inputmask.format = function(value, options, metadata) {\n            return Inputmask(options).format(value, metadata);\n        };\n        Inputmask.unmask = function(value, options) {\n            return Inputmask(options).unmaskedvalue(value);\n        };\n        Inputmask.isValid = function(value, options) {\n            return Inputmask(options).isValid(value);\n        };\n        Inputmask.remove = function(elems) {\n            if (typeof elems === \"string\") {\n                elems = document.getElementById(elems) || document.querySelectorAll(elems);\n            }\n            elems = elems.nodeName ? [ elems ] : elems;\n            $.each(elems, function(ndx, el) {\n                if (el.inputmask) el.inputmask.remove();\n            });\n        };\n        Inputmask.setValue = function(elems, value) {\n            if (typeof elems === \"string\") {\n                elems = document.getElementById(elems) || document.querySelectorAll(elems);\n            }\n            elems = elems.nodeName ? [ elems ] : elems;\n            $.each(elems, function(ndx, el) {\n                if (el.inputmask) el.inputmask.setValue(value); else $(el).trigger(\"setvalue\", [ value ]);\n            });\n        };\n        Inputmask.escapeRegex = function(str) {\n            var specials = [ \"/\", \".\", \"*\", \"+\", \"?\", \"|\", \"(\", \")\", \"[\", \"]\", \"{\", \"}\", \"\\\\\", \"$\", \"^\" ];\n            return str.replace(new RegExp(\"(\\\\\" + specials.join(\"|\\\\\") + \")\", \"gim\"), \"\\\\$1\");\n        };\n        Inputmask.keyCode = {\n            BACKSPACE: 8,\n            BACKSPACE_SAFARI: 127,\n            DELETE: 46,\n            DOWN: 40,\n            END: 35,\n            ENTER: 13,\n            ESCAPE: 27,\n            HOME: 36,\n            INSERT: 45,\n            LEFT: 37,\n            PAGE_DOWN: 34,\n            PAGE_UP: 33,\n            RIGHT: 39,\n            SPACE: 32,\n            TAB: 9,\n            UP: 38,\n            X: 88,\n            CONTROL: 17\n        };\n        Inputmask.dependencyLib = $;\n        function resolveAlias(aliasStr, options, opts) {\n            var aliasDefinition = Inputmask.prototype.aliases[aliasStr];\n            if (aliasDefinition) {\n                if (aliasDefinition.alias) resolveAlias(aliasDefinition.alias, undefined, opts);\n                $.extend(true, opts, aliasDefinition);\n                $.extend(true, opts, options);\n                return true;\n            } else if (opts.mask === null) {\n                opts.mask = aliasStr;\n            }\n            return false;\n        }\n        function generateMaskSet(opts, nocache) {\n            function generateMask(mask, metadata, opts) {\n                var regexMask = false;\n                if (mask === null || mask === \"\") {\n                    regexMask = opts.regex !== null;\n                    if (regexMask) {\n                        mask = opts.regex;\n                        mask = mask.replace(/^(\\^)(.*)(\\$)$/, \"$2\");\n                    } else {\n                        regexMask = true;\n                        mask = \".*\";\n                    }\n                }\n                if (mask.length === 1 && opts.greedy === false && opts.repeat !== 0) {\n                    opts.placeholder = \"\";\n                }\n                if (opts.repeat > 0 || opts.repeat === \"*\" || opts.repeat === \"+\") {\n                    var repeatStart = opts.repeat === \"*\" ? 0 : opts.repeat === \"+\" ? 1 : opts.repeat;\n                    mask = opts.groupmarker[0] + mask + opts.groupmarker[1] + opts.quantifiermarker[0] + repeatStart + \",\" + opts.repeat + opts.quantifiermarker[1];\n                }\n                var masksetDefinition, maskdefKey = regexMask ? \"regex_\" + opts.regex : opts.numericInput ? mask.split(\"\").reverse().join(\"\") : mask;\n                if (Inputmask.prototype.masksCache[maskdefKey] === undefined || nocache === true) {\n                    masksetDefinition = {\n                        mask: mask,\n                        maskToken: Inputmask.prototype.analyseMask(mask, regexMask, opts),\n                        validPositions: {},\n                        _buffer: undefined,\n                        buffer: undefined,\n                        tests: {},\n                        excludes: {},\n                        metadata: metadata,\n                        maskLength: undefined,\n                        jitOffset: {}\n                    };\n                    if (nocache !== true) {\n                        Inputmask.prototype.masksCache[maskdefKey] = masksetDefinition;\n                        masksetDefinition = $.extend(true, {}, Inputmask.prototype.masksCache[maskdefKey]);\n                    }\n                } else masksetDefinition = $.extend(true, {}, Inputmask.prototype.masksCache[maskdefKey]);\n                return masksetDefinition;\n            }\n            var ms;\n            if ($.isFunction(opts.mask)) {\n                opts.mask = opts.mask(opts);\n            }\n            if ($.isArray(opts.mask)) {\n                if (opts.mask.length > 1) {\n                    if (opts.keepStatic === null) {\n                        opts.keepStatic = \"auto\";\n                        for (var i = 0; i < opts.mask.length; i++) {\n                            if (opts.mask[i].charAt(0) !== opts.mask[0].charAt(0)) {\n                                opts.keepStatic = true;\n                                break;\n                            }\n                        }\n                    }\n                    var altMask = opts.groupmarker[0];\n                    $.each(opts.isRTL ? opts.mask.reverse() : opts.mask, function(ndx, msk) {\n                        if (altMask.length > 1) {\n                            altMask += opts.groupmarker[1] + opts.alternatormarker + opts.groupmarker[0];\n                        }\n                        if (msk.mask !== undefined && !$.isFunction(msk.mask)) {\n                            altMask += msk.mask;\n                        } else {\n                            altMask += msk;\n                        }\n                    });\n                    altMask += opts.groupmarker[1];\n                    return generateMask(altMask, opts.mask, opts);\n                } else opts.mask = opts.mask.pop();\n            }\n            if (opts.mask && opts.mask.mask !== undefined && !$.isFunction(opts.mask.mask)) {\n                ms = generateMask(opts.mask.mask, opts.mask, opts);\n            } else {\n                ms = generateMask(opts.mask, opts.mask, opts);\n            }\n            return ms;\n        }\n        function isInputEventSupported(eventName) {\n            var el = document.createElement(\"input\"), evName = \"on\" + eventName, isSupported = evName in el;\n            if (!isSupported) {\n                el.setAttribute(evName, \"return;\");\n                isSupported = typeof el[evName] === \"function\";\n            }\n            el = null;\n            return isSupported;\n        }\n        function maskScope(actionObj, maskset, opts) {\n            maskset = maskset || this.maskset;\n            opts = opts || this.opts;\n            var inputmask = this, el = this.el, isRTL = this.isRTL, undoValue, $el, skipKeyPressEvent = false, skipInputEvent = false, ignorable = false, maxLength, mouseEnter = false, colorMask, originalPlaceholder;\n            var getMaskTemplate = function getMaskTemplate(baseOnInput, minimalPos, includeMode, noJit, clearOptionalTail) {\n                var greedy = opts.greedy;\n                if (clearOptionalTail) opts.greedy = false;\n                minimalPos = minimalPos || 0;\n                var maskTemplate = [], ndxIntlzr, pos = 0, test, testPos, lvp = getLastValidPosition();\n                do {\n                    if (baseOnInput === true && getMaskSet().validPositions[pos]) {\n                        testPos = clearOptionalTail && getMaskSet().validPositions[pos].match.optionality === true && getMaskSet().validPositions[pos + 1] === undefined && (getMaskSet().validPositions[pos].generatedInput === true || getMaskSet().validPositions[pos].input == opts.skipOptionalPartCharacter && pos > 0) ? determineTestTemplate(pos, getTests(pos, ndxIntlzr, pos - 1)) : getMaskSet().validPositions[pos];\n                        test = testPos.match;\n                        ndxIntlzr = testPos.locator.slice();\n                        maskTemplate.push(includeMode === true ? testPos.input : includeMode === false ? test.nativeDef : getPlaceholder(pos, test));\n                    } else {\n                        testPos = getTestTemplate(pos, ndxIntlzr, pos - 1);\n                        test = testPos.match;\n                        ndxIntlzr = testPos.locator.slice();\n                        var jitMasking = noJit === true ? false : opts.jitMasking !== false ? opts.jitMasking : test.jit;\n                        if (jitMasking === false || jitMasking === undefined || typeof jitMasking === \"number\" && isFinite(jitMasking) && jitMasking > pos) {\n                            maskTemplate.push(includeMode === false ? test.nativeDef : getPlaceholder(pos, test));\n                        }\n                    }\n                    if (opts.keepStatic === \"auto\") {\n                        if (test.newBlockMarker && test.fn !== null) {\n                            opts.keepStatic = pos - 1;\n                        }\n                    }\n                    pos++;\n                } while ((maxLength === undefined || pos < maxLength) && (test.fn !== null || test.def !== \"\") || minimalPos > pos);\n                if (maskTemplate[maskTemplate.length - 1] === \"\") {\n                    maskTemplate.pop();\n                }\n                if (includeMode !== false || getMaskSet().maskLength === undefined) getMaskSet().maskLength = pos - 1;\n                opts.greedy = greedy;\n                return maskTemplate;\n            };\n            function getMaskSet() {\n                return maskset;\n            }\n            function resetMaskSet(soft) {\n                var maskset = getMaskSet();\n                maskset.buffer = undefined;\n                if (soft !== true) {\n                    maskset.validPositions = {};\n                    maskset.p = 0;\n                }\n            }\n            function getLastValidPosition(closestTo, strict, validPositions) {\n                var before = -1, after = -1, valids = validPositions || getMaskSet().validPositions;\n                if (closestTo === undefined) closestTo = -1;\n                for (var posNdx in valids) {\n                    var psNdx = parseInt(posNdx);\n                    if (valids[psNdx] && (strict || valids[psNdx].generatedInput !== true)) {\n                        if (psNdx <= closestTo) before = psNdx;\n                        if (psNdx >= closestTo) after = psNdx;\n                    }\n                }\n                return before === -1 || before == closestTo ? after : after == -1 ? before : closestTo - before < after - closestTo ? before : after;\n            }\n            function getDecisionTaker(tst) {\n                var decisionTaker = tst.locator[tst.alternation];\n                if (typeof decisionTaker == \"string\" && decisionTaker.length > 0) {\n                    decisionTaker = decisionTaker.split(\",\")[0];\n                }\n                return decisionTaker !== undefined ? decisionTaker.toString() : \"\";\n            }\n            function getLocator(tst, align) {\n                var locator = (tst.alternation != undefined ? tst.mloc[getDecisionTaker(tst)] : tst.locator).join(\"\");\n                if (locator !== \"\") while (locator.length < align) {\n                    locator += \"0\";\n                }\n                return locator;\n            }\n            function determineTestTemplate(pos, tests) {\n                pos = pos > 0 ? pos - 1 : 0;\n                var altTest = getTest(pos), targetLocator = getLocator(altTest), tstLocator, closest, bestMatch;\n                for (var ndx = 0; ndx < tests.length; ndx++) {\n                    var tst = tests[ndx];\n                    tstLocator = getLocator(tst, targetLocator.length);\n                    var distance = Math.abs(tstLocator - targetLocator);\n                    if (closest === undefined || tstLocator !== \"\" && distance < closest || bestMatch && !opts.greedy && bestMatch.match.optionality && bestMatch.match.newBlockMarker === \"master\" && (!tst.match.optionality || !tst.match.newBlockMarker) || bestMatch && bestMatch.match.optionalQuantifier && !tst.match.optionalQuantifier) {\n                        closest = distance;\n                        bestMatch = tst;\n                    }\n                }\n                return bestMatch;\n            }\n            function getTestTemplate(pos, ndxIntlzr, tstPs) {\n                return getMaskSet().validPositions[pos] || determineTestTemplate(pos, getTests(pos, ndxIntlzr ? ndxIntlzr.slice() : ndxIntlzr, tstPs));\n            }\n            function getTest(pos, tests) {\n                if (getMaskSet().validPositions[pos]) {\n                    return getMaskSet().validPositions[pos];\n                }\n                return (tests || getTests(pos))[0];\n            }\n            function positionCanMatchDefinition(pos, def) {\n                var valid = false, tests = getTests(pos);\n                for (var tndx = 0; tndx < tests.length; tndx++) {\n                    if (tests[tndx].match && tests[tndx].match.def === def) {\n                        valid = true;\n                        break;\n                    }\n                }\n                return valid;\n            }\n            function getTests(pos, ndxIntlzr, tstPs) {\n                var maskTokens = getMaskSet().maskToken, testPos = ndxIntlzr ? tstPs : 0, ndxInitializer = ndxIntlzr ? ndxIntlzr.slice() : [ 0 ], matches = [], insertStop = false, latestMatch, cacheDependency = ndxIntlzr ? ndxIntlzr.join(\"\") : \"\";\n                function resolveTestFromToken(maskToken, ndxInitializer, loopNdx, quantifierRecurse) {\n                    function handleMatch(match, loopNdx, quantifierRecurse) {\n                        function isFirstMatch(latestMatch, tokenGroup) {\n                            var firstMatch = $.inArray(latestMatch, tokenGroup.matches) === 0;\n                            if (!firstMatch) {\n                                $.each(tokenGroup.matches, function(ndx, match) {\n                                    if (match.isQuantifier === true) firstMatch = isFirstMatch(latestMatch, tokenGroup.matches[ndx - 1]); else if (match.hasOwnProperty(\"matches\")) firstMatch = isFirstMatch(latestMatch, match);\n                                    if (firstMatch) return false;\n                                });\n                            }\n                            return firstMatch;\n                        }\n                        function resolveNdxInitializer(pos, alternateNdx, targetAlternation) {\n                            var bestMatch, indexPos;\n                            if (getMaskSet().tests[pos] || getMaskSet().validPositions[pos]) {\n                                $.each(getMaskSet().tests[pos] || [ getMaskSet().validPositions[pos] ], function(ndx, lmnt) {\n                                    if (lmnt.mloc[alternateNdx]) {\n                                        bestMatch = lmnt;\n                                        return false;\n                                    }\n                                    var alternation = targetAlternation !== undefined ? targetAlternation : lmnt.alternation, ndxPos = lmnt.locator[alternation] !== undefined ? lmnt.locator[alternation].toString().indexOf(alternateNdx) : -1;\n                                    if ((indexPos === undefined || ndxPos < indexPos) && ndxPos !== -1) {\n                                        bestMatch = lmnt;\n                                        indexPos = ndxPos;\n                                    }\n                                });\n                            }\n                            if (bestMatch) {\n                                var bestMatchAltIndex = bestMatch.locator[bestMatch.alternation];\n                                var locator = bestMatch.mloc[alternateNdx] || bestMatch.mloc[bestMatchAltIndex] || bestMatch.locator;\n                                return locator.slice((targetAlternation !== undefined ? targetAlternation : bestMatch.alternation) + 1);\n                            } else {\n                                return targetAlternation !== undefined ? resolveNdxInitializer(pos, alternateNdx) : undefined;\n                            }\n                        }\n                        function isSubsetOf(source, target) {\n                            function expand(pattern) {\n                                var expanded = [], start, end;\n                                for (var i = 0, l = pattern.length; i < l; i++) {\n                                    if (pattern.charAt(i) === \"-\") {\n                                        end = pattern.charCodeAt(i + 1);\n                                        while (++start < end) {\n                                            expanded.push(String.fromCharCode(start));\n                                        }\n                                    } else {\n                                        start = pattern.charCodeAt(i);\n                                        expanded.push(pattern.charAt(i));\n                                    }\n                                }\n                                return expanded.join(\"\");\n                            }\n                            if (opts.regex && source.match.fn !== null && target.match.fn !== null) {\n                                return expand(target.match.def.replace(/[\\[\\]]/g, \"\")).indexOf(expand(source.match.def.replace(/[\\[\\]]/g, \"\"))) !== -1;\n                            }\n                            return source.match.def === target.match.nativeDef;\n                        }\n                        function staticCanMatchDefinition(source, target) {\n                            var sloc = source.locator.slice(source.alternation).join(\"\"), tloc = target.locator.slice(target.alternation).join(\"\"), canMatch = sloc == tloc;\n                            canMatch = canMatch && source.match.fn === null && target.match.fn !== null ? target.match.fn.test(source.match.def, getMaskSet(), pos, false, opts, false) : false;\n                            return canMatch;\n                        }\n                        function setMergeLocators(targetMatch, altMatch) {\n                            if (altMatch === undefined || targetMatch.alternation === altMatch.alternation && targetMatch.locator[targetMatch.alternation].toString().indexOf(altMatch.locator[altMatch.alternation]) === -1) {\n                                targetMatch.mloc = targetMatch.mloc || {};\n                                var locNdx = targetMatch.locator[targetMatch.alternation];\n                                if (locNdx === undefined) targetMatch.alternation = undefined; else {\n                                    if (typeof locNdx === \"string\") locNdx = locNdx.split(\",\")[0];\n                                    if (targetMatch.mloc[locNdx] === undefined) targetMatch.mloc[locNdx] = targetMatch.locator.slice();\n                                    if (altMatch !== undefined) {\n                                        for (var ndx in altMatch.mloc) {\n                                            if (typeof ndx === \"string\") ndx = ndx.split(\",\")[0];\n                                            if (targetMatch.mloc[ndx] === undefined) targetMatch.mloc[ndx] = altMatch.mloc[ndx];\n                                        }\n                                        targetMatch.locator[targetMatch.alternation] = Object.keys(targetMatch.mloc).join(\",\");\n                                    }\n                                    return true;\n                                }\n                            }\n                            return false;\n                        }\n                        if (testPos > 500 && quantifierRecurse !== undefined) {\n                            throw \"Inputmask: There is probably an error in your mask definition or in the code. Create an issue on github with an example of the mask you are using. \" + getMaskSet().mask;\n                        }\n                        if (testPos === pos && match.matches === undefined) {\n                            matches.push({\n                                match: match,\n                                locator: loopNdx.reverse(),\n                                cd: cacheDependency,\n                                mloc: {}\n                            });\n                            return true;\n                        } else if (match.matches !== undefined) {\n                            if (match.isGroup && quantifierRecurse !== match) {\n                                match = handleMatch(maskToken.matches[$.inArray(match, maskToken.matches) + 1], loopNdx, quantifierRecurse);\n                                if (match) return true;\n                            } else if (match.isOptional) {\n                                var optionalToken = match;\n                                match = resolveTestFromToken(match, ndxInitializer, loopNdx, quantifierRecurse);\n                                if (match) {\n                                    $.each(matches, function(ndx, mtch) {\n                                        mtch.match.optionality = true;\n                                    });\n                                    latestMatch = matches[matches.length - 1].match;\n                                    if (quantifierRecurse === undefined && isFirstMatch(latestMatch, optionalToken)) {\n                                        insertStop = true;\n                                        testPos = pos;\n                                    } else return true;\n                                }\n                            } else if (match.isAlternator) {\n                                var alternateToken = match, malternateMatches = [], maltMatches, currentMatches = matches.slice(), loopNdxCnt = loopNdx.length;\n                                var altIndex = ndxInitializer.length > 0 ? ndxInitializer.shift() : -1;\n                                if (altIndex === -1 || typeof altIndex === \"string\") {\n                                    var currentPos = testPos, ndxInitializerClone = ndxInitializer.slice(), altIndexArr = [], amndx;\n                                    if (typeof altIndex == \"string\") {\n                                        altIndexArr = altIndex.split(\",\");\n                                    } else {\n                                        for (amndx = 0; amndx < alternateToken.matches.length; amndx++) {\n                                            altIndexArr.push(amndx.toString());\n                                        }\n                                    }\n                                    if (getMaskSet().excludes[pos]) {\n                                        var altIndexArrClone = altIndexArr.slice();\n                                        for (var i = 0, el = getMaskSet().excludes[pos].length; i < el; i++) {\n                                            altIndexArr.splice(altIndexArr.indexOf(getMaskSet().excludes[pos][i].toString()), 1);\n                                        }\n                                        if (altIndexArr.length === 0) {\n                                            getMaskSet().excludes[pos] = undefined;\n                                            altIndexArr = altIndexArrClone;\n                                        }\n                                    }\n                                    if (opts.keepStatic === true || isFinite(parseInt(opts.keepStatic)) && currentPos >= opts.keepStatic) altIndexArr = altIndexArr.slice(0, 1);\n                                    var unMatchedAlternation = false;\n                                    for (var ndx = 0; ndx < altIndexArr.length; ndx++) {\n                                        amndx = parseInt(altIndexArr[ndx]);\n                                        matches = [];\n                                        ndxInitializer = typeof altIndex === \"string\" ? resolveNdxInitializer(testPos, amndx, loopNdxCnt) || ndxInitializerClone.slice() : ndxInitializerClone.slice();\n                                        if (alternateToken.matches[amndx] && handleMatch(alternateToken.matches[amndx], [ amndx ].concat(loopNdx), quantifierRecurse)) match = true; else if (ndx === 0) {\n                                            unMatchedAlternation = true;\n                                        }\n                                        maltMatches = matches.slice();\n                                        testPos = currentPos;\n                                        matches = [];\n                                        for (var ndx1 = 0; ndx1 < maltMatches.length; ndx1++) {\n                                            var altMatch = maltMatches[ndx1], dropMatch = false;\n                                            altMatch.match.jit = altMatch.match.jit || unMatchedAlternation;\n                                            altMatch.alternation = altMatch.alternation || loopNdxCnt;\n                                            setMergeLocators(altMatch);\n                                            for (var ndx2 = 0; ndx2 < malternateMatches.length; ndx2++) {\n                                                var altMatch2 = malternateMatches[ndx2];\n                                                if (typeof altIndex !== \"string\" || altMatch.alternation !== undefined && $.inArray(altMatch.locator[altMatch.alternation].toString(), altIndexArr) !== -1) {\n                                                    if (altMatch.match.nativeDef === altMatch2.match.nativeDef) {\n                                                        dropMatch = true;\n                                                        setMergeLocators(altMatch2, altMatch);\n                                                        break;\n                                                    } else if (isSubsetOf(altMatch, altMatch2)) {\n                                                        if (setMergeLocators(altMatch, altMatch2)) {\n                                                            dropMatch = true;\n                                                            malternateMatches.splice(malternateMatches.indexOf(altMatch2), 0, altMatch);\n                                                        }\n                                                        break;\n                                                    } else if (isSubsetOf(altMatch2, altMatch)) {\n                                                        setMergeLocators(altMatch2, altMatch);\n                                                        break;\n                                                    } else if (staticCanMatchDefinition(altMatch, altMatch2)) {\n                                                        if (setMergeLocators(altMatch, altMatch2)) {\n                                                            dropMatch = true;\n                                                            malternateMatches.splice(malternateMatches.indexOf(altMatch2), 0, altMatch);\n                                                        }\n                                                        break;\n                                                    }\n                                                }\n                                            }\n                                            if (!dropMatch) {\n                                                malternateMatches.push(altMatch);\n                                            }\n                                        }\n                                    }\n                                    matches = currentMatches.concat(malternateMatches);\n                                    testPos = pos;\n                                    insertStop = matches.length > 0;\n                                    match = malternateMatches.length > 0;\n                                    ndxInitializer = ndxInitializerClone.slice();\n                                } else match = handleMatch(alternateToken.matches[altIndex] || maskToken.matches[altIndex], [ altIndex ].concat(loopNdx), quantifierRecurse);\n                                if (match) return true;\n                            } else if (match.isQuantifier && quantifierRecurse !== maskToken.matches[$.inArray(match, maskToken.matches) - 1]) {\n                                var qt = match;\n                                for (var qndx = ndxInitializer.length > 0 ? ndxInitializer.shift() : 0; qndx < (isNaN(qt.quantifier.max) ? qndx + 1 : qt.quantifier.max) && testPos <= pos; qndx++) {\n                                    var tokenGroup = maskToken.matches[$.inArray(qt, maskToken.matches) - 1];\n                                    match = handleMatch(tokenGroup, [ qndx ].concat(loopNdx), tokenGroup);\n                                    if (match) {\n                                        latestMatch = matches[matches.length - 1].match;\n                                        latestMatch.optionalQuantifier = qndx >= qt.quantifier.min;\n                                        latestMatch.jit = (qndx || 1) * tokenGroup.matches.indexOf(latestMatch) >= qt.quantifier.jit;\n                                        if (latestMatch.optionalQuantifier && isFirstMatch(latestMatch, tokenGroup)) {\n                                            insertStop = true;\n                                            testPos = pos;\n                                            break;\n                                        }\n                                        if (latestMatch.jit) {\n                                            getMaskSet().jitOffset[pos] = tokenGroup.matches.indexOf(latestMatch);\n                                        }\n                                        return true;\n                                    }\n                                }\n                            } else {\n                                match = resolveTestFromToken(match, ndxInitializer, loopNdx, quantifierRecurse);\n                                if (match) return true;\n                            }\n                        } else {\n                            testPos++;\n                        }\n                    }\n                    for (var tndx = ndxInitializer.length > 0 ? ndxInitializer.shift() : 0; tndx < maskToken.matches.length; tndx++) {\n                        if (maskToken.matches[tndx].isQuantifier !== true) {\n                            var match = handleMatch(maskToken.matches[tndx], [ tndx ].concat(loopNdx), quantifierRecurse);\n                            if (match && testPos === pos) {\n                                return match;\n                            } else if (testPos > pos) {\n                                break;\n                            }\n                        }\n                    }\n                }\n                function mergeLocators(pos, tests) {\n                    var locator = [];\n                    if (!$.isArray(tests)) tests = [ tests ];\n                    if (tests.length > 0) {\n                        if (tests[0].alternation === undefined) {\n                            locator = determineTestTemplate(pos, tests.slice()).locator.slice();\n                            if (locator.length === 0) locator = tests[0].locator.slice();\n                        } else {\n                            $.each(tests, function(ndx, tst) {\n                                if (tst.def !== \"\") {\n                                    if (locator.length === 0) locator = tst.locator.slice(); else {\n                                        for (var i = 0; i < locator.length; i++) {\n                                            if (tst.locator[i] && locator[i].toString().indexOf(tst.locator[i]) === -1) {\n                                                locator[i] += \",\" + tst.locator[i];\n                                            }\n                                        }\n                                    }\n                                }\n                            });\n                        }\n                    }\n                    return locator;\n                }\n                if (pos > -1) {\n                    if (ndxIntlzr === undefined) {\n                        var previousPos = pos - 1, test;\n                        while ((test = getMaskSet().validPositions[previousPos] || getMaskSet().tests[previousPos]) === undefined && previousPos > -1) {\n                            previousPos--;\n                        }\n                        if (test !== undefined && previousPos > -1) {\n                            ndxInitializer = mergeLocators(previousPos, test);\n                            cacheDependency = ndxInitializer.join(\"\");\n                            testPos = previousPos;\n                        }\n                    }\n                    if (getMaskSet().tests[pos] && getMaskSet().tests[pos][0].cd === cacheDependency) {\n                        return getMaskSet().tests[pos];\n                    }\n                    for (var mtndx = ndxInitializer.shift(); mtndx < maskTokens.length; mtndx++) {\n                        var match = resolveTestFromToken(maskTokens[mtndx], ndxInitializer, [ mtndx ]);\n                        if (match && testPos === pos || testPos > pos) {\n                            break;\n                        }\n                    }\n                }\n                if (matches.length === 0 || insertStop) {\n                    matches.push({\n                        match: {\n                            fn: null,\n                            optionality: false,\n                            casing: null,\n                            def: \"\",\n                            placeholder: \"\"\n                        },\n                        locator: [],\n                        mloc: {},\n                        cd: cacheDependency\n                    });\n                }\n                if (ndxIntlzr !== undefined && getMaskSet().tests[pos]) {\n                    return $.extend(true, [], matches);\n                }\n                getMaskSet().tests[pos] = $.extend(true, [], matches);\n                return getMaskSet().tests[pos];\n            }\n            function getBufferTemplate() {\n                if (getMaskSet()._buffer === undefined) {\n                    getMaskSet()._buffer = getMaskTemplate(false, 1);\n                    if (getMaskSet().buffer === undefined) getMaskSet().buffer = getMaskSet()._buffer.slice();\n                }\n                return getMaskSet()._buffer;\n            }\n            function getBuffer(noCache) {\n                if (getMaskSet().buffer === undefined || noCache === true) {\n                    getMaskSet().buffer = getMaskTemplate(true, getLastValidPosition(), true);\n                    if (getMaskSet()._buffer === undefined) getMaskSet()._buffer = getMaskSet().buffer.slice();\n                }\n                return getMaskSet().buffer;\n            }\n            function refreshFromBuffer(start, end, buffer) {\n                var i, p;\n                if (start === true) {\n                    resetMaskSet();\n                    start = 0;\n                    end = buffer.length;\n                } else {\n                    for (i = start; i < end; i++) {\n                        delete getMaskSet().validPositions[i];\n                    }\n                }\n                p = start;\n                for (i = start; i < end; i++) {\n                    resetMaskSet(true);\n                    if (buffer[i] !== opts.skipOptionalPartCharacter) {\n                        var valResult = isValid(p, buffer[i], true, true);\n                        if (valResult !== false) {\n                            resetMaskSet(true);\n                            p = valResult.caret !== undefined ? valResult.caret : valResult.pos + 1;\n                        }\n                    }\n                }\n            }\n            function casing(elem, test, pos) {\n                switch (opts.casing || test.casing) {\n                  case \"upper\":\n                    elem = elem.toUpperCase();\n                    break;\n\n                  case \"lower\":\n                    elem = elem.toLowerCase();\n                    break;\n\n                  case \"title\":\n                    var posBefore = getMaskSet().validPositions[pos - 1];\n                    if (pos === 0 || posBefore && posBefore.input === String.fromCharCode(Inputmask.keyCode.SPACE)) {\n                        elem = elem.toUpperCase();\n                    } else {\n                        elem = elem.toLowerCase();\n                    }\n                    break;\n\n                  default:\n                    if ($.isFunction(opts.casing)) {\n                        var args = Array.prototype.slice.call(arguments);\n                        args.push(getMaskSet().validPositions);\n                        elem = opts.casing.apply(this, args);\n                    }\n                }\n                return elem;\n            }\n            function checkAlternationMatch(altArr1, altArr2, na) {\n                var altArrC = opts.greedy ? altArr2 : altArr2.slice(0, 1), isMatch = false, naArr = na !== undefined ? na.split(\",\") : [], naNdx;\n                for (var i = 0; i < naArr.length; i++) {\n                    if ((naNdx = altArr1.indexOf(naArr[i])) !== -1) {\n                        altArr1.splice(naNdx, 1);\n                    }\n                }\n                for (var alndx = 0; alndx < altArr1.length; alndx++) {\n                    if ($.inArray(altArr1[alndx], altArrC) !== -1) {\n                        isMatch = true;\n                        break;\n                    }\n                }\n                return isMatch;\n            }\n            function alternate(pos, c, strict, fromSetValid, rAltPos) {\n                var validPsClone = $.extend(true, {}, getMaskSet().validPositions), lastAlt, alternation, isValidRslt = false, altPos, prevAltPos, i, validPos, decisionPos, lAltPos = rAltPos !== undefined ? rAltPos : getLastValidPosition();\n                if (lAltPos === -1 && rAltPos === undefined) {\n                    lastAlt = 0;\n                    prevAltPos = getTest(lastAlt);\n                    alternation = prevAltPos.alternation;\n                } else {\n                    for (;lAltPos >= 0; lAltPos--) {\n                        altPos = getMaskSet().validPositions[lAltPos];\n                        if (altPos && altPos.alternation !== undefined) {\n                            if (prevAltPos && prevAltPos.locator[altPos.alternation] !== altPos.locator[altPos.alternation]) {\n                                break;\n                            }\n                            lastAlt = lAltPos;\n                            alternation = getMaskSet().validPositions[lastAlt].alternation;\n                            prevAltPos = altPos;\n                        }\n                    }\n                }\n                if (alternation !== undefined) {\n                    decisionPos = parseInt(lastAlt);\n                    getMaskSet().excludes[decisionPos] = getMaskSet().excludes[decisionPos] || [];\n                    if (pos !== true) {\n                        getMaskSet().excludes[decisionPos].push(getDecisionTaker(prevAltPos));\n                    }\n                    var validInputsClone = [], staticInputsBeforePos = 0;\n                    for (i = decisionPos; i < getLastValidPosition(undefined, true) + 1; i++) {\n                        validPos = getMaskSet().validPositions[i];\n                        if (validPos && validPos.generatedInput !== true) {\n                            validInputsClone.push(validPos.input);\n                        } else if (i < pos) staticInputsBeforePos++;\n                        delete getMaskSet().validPositions[i];\n                    }\n                    while (getMaskSet().excludes[decisionPos] && getMaskSet().excludes[decisionPos].length < 10) {\n                        var posOffset = staticInputsBeforePos * -1, validInputs = validInputsClone.slice();\n                        getMaskSet().tests[decisionPos] = undefined;\n                        resetMaskSet(true);\n                        isValidRslt = true;\n                        while (validInputs.length > 0) {\n                            var input = validInputs.shift();\n                            if (!(isValidRslt = isValid(getLastValidPosition(undefined, true) + 1, input, false, fromSetValid, true))) {\n                                break;\n                            }\n                        }\n                        if (isValidRslt && c !== undefined) {\n                            var targetLvp = getLastValidPosition(pos) + 1;\n                            for (i = decisionPos; i < getLastValidPosition() + 1; i++) {\n                                validPos = getMaskSet().validPositions[i];\n                                if ((validPos === undefined || validPos.match.fn == null) && i < pos + posOffset) {\n                                    posOffset++;\n                                }\n                            }\n                            pos = pos + posOffset;\n                            isValidRslt = isValid(pos > targetLvp ? targetLvp : pos, c, strict, fromSetValid, true);\n                        }\n                        if (!isValidRslt) {\n                            resetMaskSet();\n                            prevAltPos = getTest(decisionPos);\n                            getMaskSet().validPositions = $.extend(true, {}, validPsClone);\n                            if (getMaskSet().excludes[decisionPos]) {\n                                var decisionTaker = getDecisionTaker(prevAltPos);\n                                if (getMaskSet().excludes[decisionPos].indexOf(decisionTaker) !== -1) {\n                                    isValidRslt = alternate(pos, c, strict, fromSetValid, decisionPos - 1);\n                                    break;\n                                }\n                                getMaskSet().excludes[decisionPos].push(decisionTaker);\n                                for (i = decisionPos; i < getLastValidPosition(undefined, true) + 1; i++) {\n                                    delete getMaskSet().validPositions[i];\n                                }\n                            } else {\n                                isValidRslt = alternate(pos, c, strict, fromSetValid, decisionPos - 1);\n                                break;\n                            }\n                        } else break;\n                    }\n                }\n                getMaskSet().excludes[decisionPos] = undefined;\n                return isValidRslt;\n            }\n            function isValid(pos, c, strict, fromSetValid, fromAlternate, validateOnly) {\n                function isSelection(posObj) {\n                    return isRTL ? posObj.begin - posObj.end > 1 || posObj.begin - posObj.end === 1 : posObj.end - posObj.begin > 1 || posObj.end - posObj.begin === 1;\n                }\n                strict = strict === true;\n                var maskPos = pos;\n                if (pos.begin !== undefined) {\n                    maskPos = isRTL ? pos.end : pos.begin;\n                }\n                function _isValid(position, c, strict) {\n                    var rslt = false;\n                    $.each(getTests(position), function(ndx, tst) {\n                        var test = tst.match;\n                        getBuffer(true);\n                        rslt = test.fn != null ? test.fn.test(c, getMaskSet(), position, strict, opts, isSelection(pos)) : (c === test.def || c === opts.skipOptionalPartCharacter) && test.def !== \"\" ? {\n                            c: getPlaceholder(position, test, true) || test.def,\n                            pos: position\n                        } : false;\n                        if (rslt !== false) {\n                            var elem = rslt.c !== undefined ? rslt.c : c, validatedPos = position;\n                            elem = elem === opts.skipOptionalPartCharacter && test.fn === null ? getPlaceholder(position, test, true) || test.def : elem;\n                            if (rslt.remove !== undefined) {\n                                if (!$.isArray(rslt.remove)) rslt.remove = [ rslt.remove ];\n                                $.each(rslt.remove.sort(function(a, b) {\n                                    return b - a;\n                                }), function(ndx, lmnt) {\n                                    revalidateMask({\n                                        begin: lmnt,\n                                        end: lmnt + 1\n                                    });\n                                });\n                            }\n                            if (rslt.insert !== undefined) {\n                                if (!$.isArray(rslt.insert)) rslt.insert = [ rslt.insert ];\n                                $.each(rslt.insert.sort(function(a, b) {\n                                    return a - b;\n                                }), function(ndx, lmnt) {\n                                    isValid(lmnt.pos, lmnt.c, true, fromSetValid);\n                                });\n                            }\n                            if (rslt !== true && rslt.pos !== undefined && rslt.pos !== position) {\n                                validatedPos = rslt.pos;\n                            }\n                            if (rslt !== true && rslt.pos === undefined && rslt.c === undefined) {\n                                return false;\n                            }\n                            if (!revalidateMask(pos, $.extend({}, tst, {\n                                input: casing(elem, test, validatedPos)\n                            }), fromSetValid, validatedPos)) {\n                                rslt = false;\n                            }\n                            return false;\n                        }\n                    });\n                    return rslt;\n                }\n                var result = true, positionsClone = $.extend(true, {}, getMaskSet().validPositions);\n                if ($.isFunction(opts.preValidation) && !strict && fromSetValid !== true && validateOnly !== true) {\n                    result = opts.preValidation(getBuffer(), maskPos, c, isSelection(pos), opts, getMaskSet());\n                }\n                if (result === true) {\n                    trackbackPositions(undefined, maskPos, true);\n                    if (maxLength === undefined || maskPos < maxLength) {\n                        result = _isValid(maskPos, c, strict);\n                        if ((!strict || fromSetValid === true) && result === false && validateOnly !== true) {\n                            var currentPosValid = getMaskSet().validPositions[maskPos];\n                            if (currentPosValid && currentPosValid.match.fn === null && (currentPosValid.match.def === c || c === opts.skipOptionalPartCharacter)) {\n                                result = {\n                                    caret: seekNext(maskPos)\n                                };\n                            } else {\n                                if ((opts.insertMode || getMaskSet().validPositions[seekNext(maskPos)] === undefined) && (!isMask(maskPos, true) || getMaskSet().jitOffset[maskPos])) {\n                                    if (getMaskSet().jitOffset[maskPos] && getMaskSet().validPositions[seekNext(maskPos)] === undefined) {\n                                        result = isValid(maskPos + getMaskSet().jitOffset[maskPos], c, strict);\n                                        if (result !== false) result.caret = maskPos;\n                                    } else for (var nPos = maskPos + 1, snPos = seekNext(maskPos); nPos <= snPos; nPos++) {\n                                        result = _isValid(nPos, c, strict);\n                                        if (result !== false) {\n                                            result = trackbackPositions(maskPos, result.pos !== undefined ? result.pos : nPos) || result;\n                                            maskPos = nPos;\n                                            break;\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    if (result === false && opts.keepStatic !== false && (opts.regex == null || isComplete(getBuffer())) && !strict && fromAlternate !== true) {\n                        result = alternate(maskPos, c, strict, fromSetValid);\n                    }\n                    if (result === true) {\n                        result = {\n                            pos: maskPos\n                        };\n                    }\n                }\n                if ($.isFunction(opts.postValidation) && result !== false && !strict && fromSetValid !== true && validateOnly !== true) {\n                    var postResult = opts.postValidation(getBuffer(true), pos.begin !== undefined ? isRTL ? pos.end : pos.begin : pos, result, opts);\n                    if (postResult !== undefined) {\n                        if (postResult.refreshFromBuffer && postResult.buffer) {\n                            var refresh = postResult.refreshFromBuffer;\n                            refreshFromBuffer(refresh === true ? refresh : refresh.start, refresh.end, postResult.buffer);\n                        }\n                        result = postResult === true ? result : postResult;\n                    }\n                }\n                if (result && result.pos === undefined) {\n                    result.pos = maskPos;\n                }\n                if (result === false || validateOnly === true) {\n                    resetMaskSet(true);\n                    getMaskSet().validPositions = $.extend(true, {}, positionsClone);\n                }\n                return result;\n            }\n            function trackbackPositions(originalPos, newPos, fillOnly) {\n                var result;\n                if (originalPos === undefined) {\n                    for (originalPos = newPos - 1; originalPos > 0; originalPos--) {\n                        if (getMaskSet().validPositions[originalPos]) break;\n                    }\n                }\n                for (var ps = originalPos; ps < newPos; ps++) {\n                    if (getMaskSet().validPositions[ps] === undefined && !isMask(ps, true)) {\n                        var vp = ps == 0 ? getTest(ps) : getMaskSet().validPositions[ps - 1];\n                        if (vp) {\n                            var tests = getTests(ps).slice();\n                            if (tests[tests.length - 1].match.def === \"\") tests.pop();\n                            var bestMatch = determineTestTemplate(ps, tests);\n                            bestMatch = $.extend({}, bestMatch, {\n                                input: getPlaceholder(ps, bestMatch.match, true) || bestMatch.match.def\n                            });\n                            bestMatch.generatedInput = true;\n                            revalidateMask(ps, bestMatch, true);\n                            if (fillOnly !== true) {\n                                var cvpInput = getMaskSet().validPositions[newPos].input;\n                                getMaskSet().validPositions[newPos] = undefined;\n                                result = isValid(newPos, cvpInput, true, true);\n                            }\n                        }\n                    }\n                }\n                return result;\n            }\n            function revalidateMask(pos, validTest, fromSetValid, validatedPos) {\n                function IsEnclosedStatic(pos, valids, selection) {\n                    var posMatch = valids[pos];\n                    if (posMatch !== undefined && (posMatch.match.fn === null && posMatch.match.optionality !== true || posMatch.input === opts.radixPoint)) {\n                        var prevMatch = selection.begin <= pos - 1 ? valids[pos - 1] && valids[pos - 1].match.fn === null && valids[pos - 1] : valids[pos - 1], nextMatch = selection.end > pos + 1 ? valids[pos + 1] && valids[pos + 1].match.fn === null && valids[pos + 1] : valids[pos + 1];\n                        return prevMatch && nextMatch;\n                    }\n                    return false;\n                }\n                var begin = pos.begin !== undefined ? pos.begin : pos, end = pos.end !== undefined ? pos.end : pos;\n                if (pos.begin > pos.end) {\n                    begin = pos.end;\n                    end = pos.begin;\n                }\n                validatedPos = validatedPos !== undefined ? validatedPos : begin;\n                if (begin !== end || opts.insertMode && getMaskSet().validPositions[validatedPos] !== undefined && fromSetValid === undefined) {\n                    var positionsClone = $.extend(true, {}, getMaskSet().validPositions), lvp = getLastValidPosition(undefined, true), i;\n                    getMaskSet().p = begin;\n                    for (i = lvp; i >= begin; i--) {\n                        if (getMaskSet().validPositions[i] && getMaskSet().validPositions[i].match.nativeDef === \"+\") {\n                            opts.isNegative = false;\n                        }\n                        delete getMaskSet().validPositions[i];\n                    }\n                    var valid = true, j = validatedPos, vps = getMaskSet().validPositions, needsValidation = false, posMatch = j, i = j;\n                    if (validTest) {\n                        getMaskSet().validPositions[validatedPos] = $.extend(true, {}, validTest);\n                        posMatch++;\n                        j++;\n                        if (begin < end) i++;\n                    }\n                    for (;i <= lvp; i++) {\n                        var t = positionsClone[i];\n                        if (t !== undefined && (i >= end || i >= begin && t.generatedInput !== true && IsEnclosedStatic(i, positionsClone, {\n                            begin: begin,\n                            end: end\n                        }))) {\n                            while (getTest(posMatch).match.def !== \"\") {\n                                if (needsValidation === false && positionsClone[posMatch] && positionsClone[posMatch].match.nativeDef === t.match.nativeDef) {\n                                    getMaskSet().validPositions[posMatch] = $.extend(true, {}, positionsClone[posMatch]);\n                                    getMaskSet().validPositions[posMatch].input = t.input;\n                                    trackbackPositions(undefined, posMatch, true);\n                                    j = posMatch + 1;\n                                    valid = true;\n                                } else if (opts.shiftPositions && positionCanMatchDefinition(posMatch, t.match.def)) {\n                                    var result = isValid(posMatch, t.input, true, true);\n                                    valid = result !== false;\n                                    j = result.caret || result.insert ? getLastValidPosition() : posMatch + 1;\n                                    needsValidation = true;\n                                } else {\n                                    valid = t.generatedInput === true || t.input === opts.radixPoint && opts.numericInput === true;\n                                }\n                                if (valid) break;\n                                if (!valid && posMatch > end && isMask(posMatch, true) && (t.match.fn !== null || posMatch > getMaskSet().maskLength)) {\n                                    break;\n                                }\n                                posMatch++;\n                            }\n                            if (getTest(posMatch).match.def == \"\") valid = false;\n                            posMatch = j;\n                        }\n                        if (!valid) break;\n                    }\n                    if (!valid) {\n                        getMaskSet().validPositions = $.extend(true, {}, positionsClone);\n                        resetMaskSet(true);\n                        return false;\n                    }\n                } else if (validTest) {\n                    getMaskSet().validPositions[validatedPos] = $.extend(true, {}, validTest);\n                }\n                resetMaskSet(true);\n                return true;\n            }\n            function isMask(pos, strict) {\n                var test = getTestTemplate(pos).match;\n                if (test.def === \"\") test = getTest(pos).match;\n                if (test.fn != null) {\n                    return test.fn;\n                }\n                if (strict !== true && pos > -1) {\n                    var tests = getTests(pos);\n                    return tests.length > 1 + (tests[tests.length - 1].match.def === \"\" ? 1 : 0);\n                }\n                return false;\n            }\n            function seekNext(pos, newBlock) {\n                var position = pos + 1;\n                while (getTest(position).match.def !== \"\" && (newBlock === true && (getTest(position).match.newBlockMarker !== true || !isMask(position)) || newBlock !== true && !isMask(position))) {\n                    position++;\n                }\n                return position;\n            }\n            function seekPrevious(pos, newBlock) {\n                var position = pos, tests;\n                if (position <= 0) return 0;\n                while (--position > 0 && (newBlock === true && getTest(position).match.newBlockMarker !== true || newBlock !== true && !isMask(position) && (tests = getTests(position), \n                tests.length < 2 || tests.length === 2 && tests[1].match.def === \"\"))) {}\n                return position;\n            }\n            function writeBuffer(input, buffer, caretPos, event, triggerEvents) {\n                if (event && $.isFunction(opts.onBeforeWrite)) {\n                    var result = opts.onBeforeWrite.call(inputmask, event, buffer, caretPos, opts);\n                    if (result) {\n                        if (result.refreshFromBuffer) {\n                            var refresh = result.refreshFromBuffer;\n                            refreshFromBuffer(refresh === true ? refresh : refresh.start, refresh.end, result.buffer || buffer);\n                            buffer = getBuffer(true);\n                        }\n                        if (caretPos !== undefined) caretPos = result.caret !== undefined ? result.caret : caretPos;\n                    }\n                }\n                if (input !== undefined) {\n                    input.inputmask._valueSet(buffer.join(\"\"));\n                    if (caretPos !== undefined && (event === undefined || event.type !== \"blur\")) {\n                        caret(input, caretPos);\n                    } else renderColorMask(input, caretPos, buffer.length === 0);\n                    if (triggerEvents === true) {\n                        var $input = $(input), nptVal = input.inputmask._valueGet();\n                        skipInputEvent = true;\n                        $input.trigger(\"input\");\n                        setTimeout(function() {\n                            if (nptVal === getBufferTemplate().join(\"\")) {\n                                $input.trigger(\"cleared\");\n                            } else if (isComplete(buffer) === true) {\n                                $input.trigger(\"complete\");\n                            }\n                        }, 0);\n                    }\n                }\n            }\n            function getPlaceholder(pos, test, returnPL) {\n                test = test || getTest(pos).match;\n                if (test.placeholder !== undefined || returnPL === true) {\n                    return $.isFunction(test.placeholder) ? test.placeholder(opts) : test.placeholder;\n                } else if (test.fn === null) {\n                    if (pos > -1 && getMaskSet().validPositions[pos] === undefined) {\n                        var tests = getTests(pos), staticAlternations = [], prevTest;\n                        if (tests.length > 1 + (tests[tests.length - 1].match.def === \"\" ? 1 : 0)) {\n                            for (var i = 0; i < tests.length; i++) {\n                                if (tests[i].match.optionality !== true && tests[i].match.optionalQuantifier !== true && (tests[i].match.fn === null || prevTest === undefined || tests[i].match.fn.test(prevTest.match.def, getMaskSet(), pos, true, opts) !== false)) {\n                                    staticAlternations.push(tests[i]);\n                                    if (tests[i].match.fn === null) prevTest = tests[i];\n                                    if (staticAlternations.length > 1) {\n                                        if (/[0-9a-bA-Z]/.test(staticAlternations[0].match.def)) {\n                                            return opts.placeholder.charAt(pos % opts.placeholder.length);\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    return test.def;\n                }\n                return opts.placeholder.charAt(pos % opts.placeholder.length);\n            }\n            function HandleNativePlaceholder(npt, value) {\n                if (ie) {\n                    if (npt.inputmask._valueGet() !== value && (npt.placeholder !== value || npt.placeholder === \"\")) {\n                        var buffer = getBuffer().slice(), nptValue = npt.inputmask._valueGet();\n                        if (nptValue !== value) {\n                            var lvp = getLastValidPosition();\n                            if (lvp === -1 && nptValue === getBufferTemplate().join(\"\")) {\n                                buffer = [];\n                            } else if (lvp !== -1) {\n                                clearOptionalTail(buffer);\n                            }\n                            writeBuffer(npt, buffer);\n                        }\n                    }\n                } else if (npt.placeholder !== value) {\n                    npt.placeholder = value;\n                    if (npt.placeholder === \"\") npt.removeAttribute(\"placeholder\");\n                }\n            }\n            var EventRuler = {\n                on: function on(input, eventName, eventHandler) {\n                    var ev = function ev(e) {\n                        var that = this;\n                        if (that.inputmask === undefined && this.nodeName !== \"FORM\") {\n                            var imOpts = $.data(that, \"_inputmask_opts\");\n                            if (imOpts) new Inputmask(imOpts).mask(that); else EventRuler.off(that);\n                        } else if (e.type !== \"setvalue\" && this.nodeName !== \"FORM\" && (that.disabled || that.readOnly && !(e.type === \"keydown\" && e.ctrlKey && e.keyCode === 67 || opts.tabThrough === false && e.keyCode === Inputmask.keyCode.TAB))) {\n                            e.preventDefault();\n                        } else {\n                            switch (e.type) {\n                              case \"input\":\n                                if (skipInputEvent === true) {\n                                    skipInputEvent = false;\n                                    return e.preventDefault();\n                                }\n                                if (mobile) {\n                                    var args = arguments;\n                                    setTimeout(function() {\n                                        eventHandler.apply(that, args);\n                                        caret(that, that.inputmask.caretPos, undefined, true);\n                                    }, 0);\n                                    return false;\n                                }\n                                break;\n\n                              case \"keydown\":\n                                skipKeyPressEvent = false;\n                                skipInputEvent = false;\n                                break;\n\n                              case \"keypress\":\n                                if (skipKeyPressEvent === true) {\n                                    return e.preventDefault();\n                                }\n                                skipKeyPressEvent = true;\n                                break;\n\n                              case \"click\":\n                                if (iemobile || iphone) {\n                                    var args = arguments;\n                                    setTimeout(function() {\n                                        eventHandler.apply(that, args);\n                                    }, 0);\n                                    return false;\n                                }\n                                break;\n                            }\n                            var returnVal = eventHandler.apply(that, arguments);\n                            if (returnVal === false) {\n                                e.preventDefault();\n                                e.stopPropagation();\n                            }\n                            return returnVal;\n                        }\n                    };\n                    input.inputmask.events[eventName] = input.inputmask.events[eventName] || [];\n                    input.inputmask.events[eventName].push(ev);\n                    if ($.inArray(eventName, [ \"submit\", \"reset\" ]) !== -1) {\n                        if (input.form !== null) $(input.form).on(eventName, ev);\n                    } else {\n                        $(input).on(eventName, ev);\n                    }\n                },\n                off: function off(input, event) {\n                    if (input.inputmask && input.inputmask.events) {\n                        var events;\n                        if (event) {\n                            events = [];\n                            events[event] = input.inputmask.events[event];\n                        } else {\n                            events = input.inputmask.events;\n                        }\n                        $.each(events, function(eventName, evArr) {\n                            while (evArr.length > 0) {\n                                var ev = evArr.pop();\n                                if ($.inArray(eventName, [ \"submit\", \"reset\" ]) !== -1) {\n                                    if (input.form !== null) $(input.form).off(eventName, ev);\n                                } else {\n                                    $(input).off(eventName, ev);\n                                }\n                            }\n                            delete input.inputmask.events[eventName];\n                        });\n                    }\n                }\n            };\n            var EventHandlers = {\n                keydownEvent: function keydownEvent(e) {\n                    var input = this, $input = $(input), k = e.keyCode, pos = caret(input);\n                    if (k === Inputmask.keyCode.BACKSPACE || k === Inputmask.keyCode.DELETE || iphone && k === Inputmask.keyCode.BACKSPACE_SAFARI || e.ctrlKey && k === Inputmask.keyCode.X && !isInputEventSupported(\"cut\")) {\n                        e.preventDefault();\n                        handleRemove(input, k, pos);\n                        writeBuffer(input, getBuffer(true), getMaskSet().p, e, input.inputmask._valueGet() !== getBuffer().join(\"\"));\n                    } else if (k === Inputmask.keyCode.END || k === Inputmask.keyCode.PAGE_DOWN) {\n                        e.preventDefault();\n                        var caretPos = seekNext(getLastValidPosition());\n                        caret(input, e.shiftKey ? pos.begin : caretPos, caretPos, true);\n                    } else if (k === Inputmask.keyCode.HOME && !e.shiftKey || k === Inputmask.keyCode.PAGE_UP) {\n                        e.preventDefault();\n                        caret(input, 0, e.shiftKey ? pos.begin : 0, true);\n                    } else if ((opts.undoOnEscape && k === Inputmask.keyCode.ESCAPE || k === 90 && e.ctrlKey) && e.altKey !== true) {\n                        checkVal(input, true, false, undoValue.split(\"\"));\n                        $input.trigger(\"click\");\n                    } else if (k === Inputmask.keyCode.INSERT && !(e.shiftKey || e.ctrlKey)) {\n                        opts.insertMode = !opts.insertMode;\n                        input.setAttribute(\"im-insert\", opts.insertMode);\n                    } else if (opts.tabThrough === true && k === Inputmask.keyCode.TAB) {\n                        if (e.shiftKey === true) {\n                            if (getTest(pos.begin).match.fn === null) {\n                                pos.begin = seekNext(pos.begin);\n                            }\n                            pos.end = seekPrevious(pos.begin, true);\n                            pos.begin = seekPrevious(pos.end, true);\n                        } else {\n                            pos.begin = seekNext(pos.begin, true);\n                            pos.end = seekNext(pos.begin, true);\n                            if (pos.end < getMaskSet().maskLength) pos.end--;\n                        }\n                        if (pos.begin < getMaskSet().maskLength) {\n                            e.preventDefault();\n                            caret(input, pos.begin, pos.end);\n                        }\n                    }\n                    opts.onKeyDown.call(this, e, getBuffer(), caret(input).begin, opts);\n                    ignorable = $.inArray(k, opts.ignorables) !== -1;\n                },\n                keypressEvent: function keypressEvent(e, checkval, writeOut, strict, ndx) {\n                    var input = this, $input = $(input), k = e.which || e.charCode || e.keyCode;\n                    if (checkval !== true && !(e.ctrlKey && e.altKey) && (e.ctrlKey || e.metaKey || ignorable)) {\n                        if (k === Inputmask.keyCode.ENTER && undoValue !== getBuffer().join(\"\")) {\n                            undoValue = getBuffer().join(\"\");\n                            setTimeout(function() {\n                                $input.trigger(\"change\");\n                            }, 0);\n                        }\n                        return true;\n                    } else {\n                        if (k) {\n                            if (k === 46 && e.shiftKey === false && opts.radixPoint !== \"\") k = opts.radixPoint.charCodeAt(0);\n                            var pos = checkval ? {\n                                begin: ndx,\n                                end: ndx\n                            } : caret(input), forwardPosition, c = String.fromCharCode(k), offset = 0;\n                            if (opts._radixDance && opts.numericInput) {\n                                var caretPos = getBuffer().indexOf(opts.radixPoint.charAt(0)) + 1;\n                                if (pos.begin <= caretPos) {\n                                    if (k === opts.radixPoint.charCodeAt(0)) offset = 1;\n                                    pos.begin -= 1;\n                                    pos.end -= 1;\n                                }\n                            }\n                            getMaskSet().writeOutBuffer = true;\n                            var valResult = isValid(pos, c, strict);\n                            if (valResult !== false) {\n                                resetMaskSet(true);\n                                forwardPosition = valResult.caret !== undefined ? valResult.caret : seekNext(valResult.pos.begin ? valResult.pos.begin : valResult.pos);\n                                getMaskSet().p = forwardPosition;\n                            }\n                            forwardPosition = (opts.numericInput && valResult.caret === undefined ? seekPrevious(forwardPosition) : forwardPosition) + offset;\n                            if (writeOut !== false) {\n                                setTimeout(function() {\n                                    opts.onKeyValidation.call(input, k, valResult, opts);\n                                }, 0);\n                                if (getMaskSet().writeOutBuffer && valResult !== false) {\n                                    var buffer = getBuffer();\n                                    writeBuffer(input, buffer, forwardPosition, e, checkval !== true);\n                                }\n                            }\n                            e.preventDefault();\n                            if (checkval) {\n                                if (valResult !== false) valResult.forwardPosition = forwardPosition;\n                                return valResult;\n                            }\n                        }\n                    }\n                },\n                pasteEvent: function pasteEvent(e) {\n                    var input = this, ev = e.originalEvent || e, $input = $(input), inputValue = input.inputmask._valueGet(true), caretPos = caret(input), tempValue;\n                    if (isRTL) {\n                        tempValue = caretPos.end;\n                        caretPos.end = caretPos.begin;\n                        caretPos.begin = tempValue;\n                    }\n                    var valueBeforeCaret = inputValue.substr(0, caretPos.begin), valueAfterCaret = inputValue.substr(caretPos.end, inputValue.length);\n                    if (valueBeforeCaret === (isRTL ? getBufferTemplate().reverse() : getBufferTemplate()).slice(0, caretPos.begin).join(\"\")) valueBeforeCaret = \"\";\n                    if (valueAfterCaret === (isRTL ? getBufferTemplate().reverse() : getBufferTemplate()).slice(caretPos.end).join(\"\")) valueAfterCaret = \"\";\n                    if (window.clipboardData && window.clipboardData.getData) {\n                        inputValue = valueBeforeCaret + window.clipboardData.getData(\"Text\") + valueAfterCaret;\n                    } else if (ev.clipboardData && ev.clipboardData.getData) {\n                        inputValue = valueBeforeCaret + ev.clipboardData.getData(\"text/plain\") + valueAfterCaret;\n                    } else return true;\n                    var pasteValue = inputValue;\n                    if ($.isFunction(opts.onBeforePaste)) {\n                        pasteValue = opts.onBeforePaste.call(inputmask, inputValue, opts);\n                        if (pasteValue === false) {\n                            return e.preventDefault();\n                        }\n                        if (!pasteValue) {\n                            pasteValue = inputValue;\n                        }\n                    }\n                    checkVal(input, false, false, pasteValue.toString().split(\"\"));\n                    writeBuffer(input, getBuffer(), seekNext(getLastValidPosition()), e, undoValue !== getBuffer().join(\"\"));\n                    return e.preventDefault();\n                },\n                inputFallBackEvent: function inputFallBackEvent(e) {\n                    function radixPointHandler(input, inputValue, caretPos) {\n                        if (inputValue.charAt(caretPos.begin - 1) === \".\" && opts.radixPoint !== \"\") {\n                            inputValue = inputValue.split(\"\");\n                            inputValue[caretPos.begin - 1] = opts.radixPoint.charAt(0);\n                            inputValue = inputValue.join(\"\");\n                        }\n                        return inputValue;\n                    }\n                    function ieMobileHandler(input, inputValue, caretPos) {\n                        if (iemobile) {\n                            var inputChar = inputValue.replace(getBuffer().join(\"\"), \"\");\n                            if (inputChar.length === 1) {\n                                var iv = inputValue.split(\"\");\n                                iv.splice(caretPos.begin, 0, inputChar);\n                                inputValue = iv.join(\"\");\n                            }\n                        }\n                        return inputValue;\n                    }\n                    var input = this, inputValue = input.inputmask._valueGet();\n                    if (getBuffer().join(\"\") !== inputValue) {\n                        var caretPos = caret(input);\n                        inputValue = radixPointHandler(input, inputValue, caretPos);\n                        inputValue = ieMobileHandler(input, inputValue, caretPos);\n                        if (getBuffer().join(\"\") !== inputValue) {\n                            var buffer = getBuffer().join(\"\"), offset = !opts.numericInput && inputValue.length > buffer.length ? -1 : 0, frontPart = inputValue.substr(0, caretPos.begin), backPart = inputValue.substr(caretPos.begin), frontBufferPart = buffer.substr(0, caretPos.begin + offset), backBufferPart = buffer.substr(caretPos.begin + offset);\n                            var selection = caretPos, entries = \"\", isEntry = false;\n                            if (frontPart !== frontBufferPart) {\n                                var fpl = (isEntry = frontPart.length >= frontBufferPart.length) ? frontPart.length : frontBufferPart.length, i;\n                                for (i = 0; frontPart.charAt(i) === frontBufferPart.charAt(i) && i < fpl; i++) {}\n                                if (isEntry) {\n                                    selection.begin = i - offset;\n                                    entries += frontPart.slice(i, selection.end);\n                                }\n                            }\n                            if (backPart !== backBufferPart) {\n                                if (backPart.length > backBufferPart.length) {\n                                    entries += backPart.slice(0, 1);\n                                } else {\n                                    if (backPart.length < backBufferPart.length) {\n                                        selection.end += backBufferPart.length - backPart.length;\n                                        if (!isEntry && opts.radixPoint !== \"\" && backPart === \"\" && frontPart.charAt(selection.begin + offset - 1) === opts.radixPoint) {\n                                            selection.begin--;\n                                            entries = opts.radixPoint;\n                                        }\n                                    }\n                                }\n                            }\n                            writeBuffer(input, getBuffer(), {\n                                begin: selection.begin + offset,\n                                end: selection.end + offset\n                            });\n                            if (entries.length > 0) {\n                                $.each(entries.split(\"\"), function(ndx, entry) {\n                                    var keypress = new $.Event(\"keypress\");\n                                    keypress.which = entry.charCodeAt(0);\n                                    ignorable = false;\n                                    EventHandlers.keypressEvent.call(input, keypress);\n                                });\n                            } else {\n                                if (selection.begin === selection.end - 1) {\n                                    selection.begin = seekPrevious(selection.begin + 1);\n                                    if (selection.begin === selection.end - 1) {\n                                        caret(input, selection.begin);\n                                    } else {\n                                        caret(input, selection.begin, selection.end);\n                                    }\n                                }\n                                var keydown = new $.Event(\"keydown\");\n                                keydown.keyCode = opts.numericInput ? Inputmask.keyCode.BACKSPACE : Inputmask.keyCode.DELETE;\n                                EventHandlers.keydownEvent.call(input, keydown);\n                            }\n                            e.preventDefault();\n                        }\n                    }\n                },\n                beforeInputEvent: function beforeInputEvent(e) {\n                    if (e.cancelable) {\n                        var input = this;\n                        switch (e.inputType) {\n                          case \"insertText\":\n                            $.each(e.data.split(\"\"), function(ndx, entry) {\n                                var keypress = new $.Event(\"keypress\");\n                                keypress.which = entry.charCodeAt(0);\n                                ignorable = false;\n                                EventHandlers.keypressEvent.call(input, keypress);\n                            });\n                            return e.preventDefault();\n\n                          case \"deleteContentBackward\":\n                            var keydown = new $.Event(\"keydown\");\n                            keydown.keyCode = Inputmask.keyCode.BACKSPACE;\n                            EventHandlers.keydownEvent.call(input, keydown);\n                            return e.preventDefault();\n\n                          case \"deleteContentForward\":\n                            var keydown = new $.Event(\"keydown\");\n                            keydown.keyCode = Inputmask.keyCode.DELETE;\n                            EventHandlers.keydownEvent.call(input, keydown);\n                            return e.preventDefault();\n                        }\n                    }\n                },\n                setValueEvent: function setValueEvent(e) {\n                    this.inputmask.refreshValue = false;\n                    var input = this, value = e && e.detail ? e.detail[0] : arguments[1], value = value || input.inputmask._valueGet(true);\n                    if ($.isFunction(opts.onBeforeMask)) value = opts.onBeforeMask.call(inputmask, value, opts) || value;\n                    value = value.toString().split(\"\");\n                    checkVal(input, true, false, value);\n                    undoValue = getBuffer().join(\"\");\n                    if ((opts.clearMaskOnLostFocus || opts.clearIncomplete) && input.inputmask._valueGet() === getBufferTemplate().join(\"\")) {\n                        input.inputmask._valueSet(\"\");\n                    }\n                },\n                focusEvent: function focusEvent(e) {\n                    var input = this, nptValue = input.inputmask._valueGet();\n                    if (opts.showMaskOnFocus) {\n                        if (nptValue !== getBuffer().join(\"\")) {\n                            writeBuffer(input, getBuffer(), seekNext(getLastValidPosition()));\n                        } else if (mouseEnter === false) {\n                            caret(input, seekNext(getLastValidPosition()));\n                        }\n                    }\n                    if (opts.positionCaretOnTab === true && mouseEnter === false) {\n                        EventHandlers.clickEvent.apply(input, [ e, true ]);\n                    }\n                    undoValue = getBuffer().join(\"\");\n                },\n                mouseleaveEvent: function mouseleaveEvent(e) {\n                    var input = this;\n                    mouseEnter = false;\n                    if (opts.clearMaskOnLostFocus && document.activeElement !== input) {\n                        HandleNativePlaceholder(input, originalPlaceholder);\n                    }\n                },\n                clickEvent: function clickEvent(e, tabbed) {\n                    function doRadixFocus(clickPos) {\n                        if (opts.radixPoint !== \"\") {\n                            var vps = getMaskSet().validPositions;\n                            if (vps[clickPos] === undefined || vps[clickPos].input === getPlaceholder(clickPos)) {\n                                if (clickPos < seekNext(-1)) return true;\n                                var radixPos = $.inArray(opts.radixPoint, getBuffer());\n                                if (radixPos !== -1) {\n                                    for (var vp in vps) {\n                                        if (radixPos < vp && vps[vp].input !== getPlaceholder(vp)) {\n                                            return false;\n                                        }\n                                    }\n                                    return true;\n                                }\n                            }\n                        }\n                        return false;\n                    }\n                    var input = this;\n                    setTimeout(function() {\n                        if (document.activeElement === input) {\n                            var selectedCaret = caret(input);\n                            if (tabbed) {\n                                if (isRTL) {\n                                    selectedCaret.end = selectedCaret.begin;\n                                } else {\n                                    selectedCaret.begin = selectedCaret.end;\n                                }\n                            }\n                            if (selectedCaret.begin === selectedCaret.end) {\n                                switch (opts.positionCaretOnClick) {\n                                  case \"none\":\n                                    break;\n\n                                  case \"select\":\n                                    caret(input, 0, getBuffer().length);\n                                    break;\n\n                                  case \"ignore\":\n                                    caret(input, seekNext(getLastValidPosition()));\n                                    break;\n\n                                  case \"radixFocus\":\n                                    if (doRadixFocus(selectedCaret.begin)) {\n                                        var radixPos = getBuffer().join(\"\").indexOf(opts.radixPoint);\n                                        caret(input, opts.numericInput ? seekNext(radixPos) : radixPos);\n                                        break;\n                                    }\n\n                                  default:\n                                    var clickPosition = selectedCaret.begin, lvclickPosition = getLastValidPosition(clickPosition, true), lastPosition = seekNext(lvclickPosition);\n                                    if (clickPosition < lastPosition) {\n                                        caret(input, !isMask(clickPosition, true) && !isMask(clickPosition - 1, true) ? seekNext(clickPosition) : clickPosition);\n                                    } else {\n                                        var lvp = getMaskSet().validPositions[lvclickPosition], tt = getTestTemplate(lastPosition, lvp ? lvp.match.locator : undefined, lvp), placeholder = getPlaceholder(lastPosition, tt.match);\n                                        if (placeholder !== \"\" && getBuffer()[lastPosition] !== placeholder && tt.match.optionalQuantifier !== true && tt.match.newBlockMarker !== true || !isMask(lastPosition, opts.keepStatic) && tt.match.def === placeholder) {\n                                            var newPos = seekNext(lastPosition);\n                                            if (clickPosition >= newPos || clickPosition === lastPosition) {\n                                                lastPosition = newPos;\n                                            }\n                                        }\n                                        caret(input, lastPosition);\n                                    }\n                                    break;\n                                }\n                            }\n                        }\n                    }, 0);\n                },\n                cutEvent: function cutEvent(e) {\n                    var input = this, $input = $(input), pos = caret(input), ev = e.originalEvent || e;\n                    var clipboardData = window.clipboardData || ev.clipboardData, clipData = isRTL ? getBuffer().slice(pos.end, pos.begin) : getBuffer().slice(pos.begin, pos.end);\n                    clipboardData.setData(\"text\", isRTL ? clipData.reverse().join(\"\") : clipData.join(\"\"));\n                    if (document.execCommand) document.execCommand(\"copy\");\n                    handleRemove(input, Inputmask.keyCode.DELETE, pos);\n                    writeBuffer(input, getBuffer(), getMaskSet().p, e, undoValue !== getBuffer().join(\"\"));\n                },\n                blurEvent: function blurEvent(e) {\n                    var $input = $(this), input = this;\n                    if (input.inputmask) {\n                        HandleNativePlaceholder(input, originalPlaceholder);\n                        var nptValue = input.inputmask._valueGet(), buffer = getBuffer().slice();\n                        if (nptValue !== \"\" || colorMask !== undefined) {\n                            if (opts.clearMaskOnLostFocus) {\n                                if (getLastValidPosition() === -1 && nptValue === getBufferTemplate().join(\"\")) {\n                                    buffer = [];\n                                } else {\n                                    clearOptionalTail(buffer);\n                                }\n                            }\n                            if (isComplete(buffer) === false) {\n                                setTimeout(function() {\n                                    $input.trigger(\"incomplete\");\n                                }, 0);\n                                if (opts.clearIncomplete) {\n                                    resetMaskSet();\n                                    if (opts.clearMaskOnLostFocus) {\n                                        buffer = [];\n                                    } else {\n                                        buffer = getBufferTemplate().slice();\n                                    }\n                                }\n                            }\n                            writeBuffer(input, buffer, undefined, e);\n                        }\n                        if (undoValue !== getBuffer().join(\"\")) {\n                            undoValue = buffer.join(\"\");\n                            $input.trigger(\"change\");\n                        }\n                    }\n                },\n                mouseenterEvent: function mouseenterEvent(e) {\n                    var input = this;\n                    mouseEnter = true;\n                    if (document.activeElement !== input && opts.showMaskOnHover) {\n                        HandleNativePlaceholder(input, (isRTL ? getBuffer().slice().reverse() : getBuffer()).join(\"\"));\n                    }\n                },\n                submitEvent: function submitEvent(e) {\n                    if (undoValue !== getBuffer().join(\"\")) {\n                        $el.trigger(\"change\");\n                    }\n                    if (opts.clearMaskOnLostFocus && getLastValidPosition() === -1 && el.inputmask._valueGet && el.inputmask._valueGet() === getBufferTemplate().join(\"\")) {\n                        el.inputmask._valueSet(\"\");\n                    }\n                    if (opts.clearIncomplete && isComplete(getBuffer()) === false) {\n                        el.inputmask._valueSet(\"\");\n                    }\n                    if (opts.removeMaskOnSubmit) {\n                        el.inputmask._valueSet(el.inputmask.unmaskedvalue(), true);\n                        setTimeout(function() {\n                            writeBuffer(el, getBuffer());\n                        }, 0);\n                    }\n                },\n                resetEvent: function resetEvent(e) {\n                    el.inputmask.refreshValue = true;\n                    setTimeout(function() {\n                        $el.trigger(\"setvalue\");\n                    }, 0);\n                }\n            };\n            function checkVal(input, writeOut, strict, nptvl, initiatingEvent) {\n                var inputmask = this || input.inputmask, inputValue = nptvl.slice(), charCodes = \"\", initialNdx = -1, result = undefined;\n                function isTemplateMatch(ndx, charCodes) {\n                    var charCodeNdx = getMaskTemplate(true, 0, false).slice(ndx, seekNext(ndx)).join(\"\").replace(/'/g, \"\").indexOf(charCodes);\n                    return charCodeNdx !== -1 && !isMask(ndx) && (getTest(ndx).match.nativeDef === charCodes.charAt(0) || getTest(ndx).match.fn === null && getTest(ndx).match.nativeDef === \"'\" + charCodes.charAt(0) || getTest(ndx).match.nativeDef === \" \" && (getTest(ndx + 1).match.nativeDef === charCodes.charAt(0) || getTest(ndx + 1).match.fn === null && getTest(ndx + 1).match.nativeDef === \"'\" + charCodes.charAt(0)));\n                }\n                resetMaskSet();\n                if (!strict && opts.autoUnmask !== true) {\n                    var staticInput = getBufferTemplate().slice(0, seekNext(-1)).join(\"\"), matches = inputValue.join(\"\").match(new RegExp(\"^\" + Inputmask.escapeRegex(staticInput), \"g\"));\n                    if (matches && matches.length > 0) {\n                        inputValue.splice(0, matches.length * staticInput.length);\n                        initialNdx = seekNext(initialNdx);\n                    }\n                } else {\n                    initialNdx = seekNext(initialNdx);\n                }\n                if (initialNdx === -1) {\n                    getMaskSet().p = seekNext(initialNdx);\n                    initialNdx = 0;\n                } else getMaskSet().p = initialNdx;\n                inputmask.caretPos = {\n                    begin: initialNdx\n                };\n                $.each(inputValue, function(ndx, charCode) {\n                    if (charCode !== undefined) {\n                        if (getMaskSet().validPositions[ndx] === undefined && inputValue[ndx] === getPlaceholder(ndx) && isMask(ndx, true) && isValid(ndx, inputValue[ndx], true, undefined, undefined, true) === false) {\n                            getMaskSet().p++;\n                        } else {\n                            var keypress = new $.Event(\"_checkval\");\n                            keypress.which = charCode.charCodeAt(0);\n                            charCodes += charCode;\n                            var lvp = getLastValidPosition(undefined, true);\n                            if (!isTemplateMatch(initialNdx, charCodes)) {\n                                result = EventHandlers.keypressEvent.call(input, keypress, true, false, strict, inputmask.caretPos.begin);\n                                if (result) {\n                                    initialNdx = inputmask.caretPos.begin + 1;\n                                    charCodes = \"\";\n                                }\n                            } else {\n                                result = EventHandlers.keypressEvent.call(input, keypress, true, false, strict, lvp + 1);\n                            }\n                            if (result) {\n                                writeBuffer(undefined, getBuffer(), result.forwardPosition, keypress, false);\n                                inputmask.caretPos = {\n                                    begin: result.forwardPosition,\n                                    end: result.forwardPosition\n                                };\n                            }\n                        }\n                    }\n                });\n                if (writeOut) writeBuffer(input, getBuffer(), result ? result.forwardPosition : undefined, initiatingEvent || new $.Event(\"checkval\"), initiatingEvent && initiatingEvent.type === \"input\");\n            }\n            function unmaskedvalue(input) {\n                if (input) {\n                    if (input.inputmask === undefined) {\n                        return input.value;\n                    }\n                    if (input.inputmask && input.inputmask.refreshValue) {\n                        EventHandlers.setValueEvent.call(input);\n                    }\n                }\n                var umValue = [], vps = getMaskSet().validPositions;\n                for (var pndx in vps) {\n                    if (vps[pndx].match && vps[pndx].match.fn != null) {\n                        umValue.push(vps[pndx].input);\n                    }\n                }\n                var unmaskedValue = umValue.length === 0 ? \"\" : (isRTL ? umValue.reverse() : umValue).join(\"\");\n                if ($.isFunction(opts.onUnMask)) {\n                    var bufferValue = (isRTL ? getBuffer().slice().reverse() : getBuffer()).join(\"\");\n                    unmaskedValue = opts.onUnMask.call(inputmask, bufferValue, unmaskedValue, opts);\n                }\n                return unmaskedValue;\n            }\n            function caret(input, begin, end, notranslate) {\n                function translatePosition(pos) {\n                    if (isRTL && typeof pos === \"number\" && (!opts.greedy || opts.placeholder !== \"\") && el) {\n                        pos = el.inputmask._valueGet().length - pos;\n                    }\n                    return pos;\n                }\n                var range;\n                if (begin !== undefined) {\n                    if ($.isArray(begin)) {\n                        end = isRTL ? begin[0] : begin[1];\n                        begin = isRTL ? begin[1] : begin[0];\n                    }\n                    if (begin.begin !== undefined) {\n                        end = isRTL ? begin.begin : begin.end;\n                        begin = isRTL ? begin.end : begin.begin;\n                    }\n                    if (typeof begin === \"number\") {\n                        begin = notranslate ? begin : translatePosition(begin);\n                        end = notranslate ? end : translatePosition(end);\n                        end = typeof end == \"number\" ? end : begin;\n                        var scrollCalc = parseInt(((input.ownerDocument.defaultView || window).getComputedStyle ? (input.ownerDocument.defaultView || window).getComputedStyle(input, null) : input.currentStyle).fontSize) * end;\n                        input.scrollLeft = scrollCalc > input.scrollWidth ? scrollCalc : 0;\n                        input.inputmask.caretPos = {\n                            begin: begin,\n                            end: end\n                        };\n                        if (input === document.activeElement) {\n                            if (\"selectionStart\" in input) {\n                                input.selectionStart = begin;\n                                input.selectionEnd = end;\n                            } else if (window.getSelection) {\n                                range = document.createRange();\n                                if (input.firstChild === undefined || input.firstChild === null) {\n                                    var textNode = document.createTextNode(\"\");\n                                    input.appendChild(textNode);\n                                }\n                                range.setStart(input.firstChild, begin < input.inputmask._valueGet().length ? begin : input.inputmask._valueGet().length);\n                                range.setEnd(input.firstChild, end < input.inputmask._valueGet().length ? end : input.inputmask._valueGet().length);\n                                range.collapse(true);\n                                var sel = window.getSelection();\n                                sel.removeAllRanges();\n                                sel.addRange(range);\n                            } else if (input.createTextRange) {\n                                range = input.createTextRange();\n                                range.collapse(true);\n                                range.moveEnd(\"character\", end);\n                                range.moveStart(\"character\", begin);\n                                range.select();\n                            }\n                            renderColorMask(input, {\n                                begin: begin,\n                                end: end\n                            });\n                        }\n                    }\n                } else {\n                    if (\"selectionStart\" in input) {\n                        begin = input.selectionStart;\n                        end = input.selectionEnd;\n                    } else if (window.getSelection) {\n                        range = window.getSelection().getRangeAt(0);\n                        if (range.commonAncestorContainer.parentNode === input || range.commonAncestorContainer === input) {\n                            begin = range.startOffset;\n                            end = range.endOffset;\n                        }\n                    } else if (document.selection && document.selection.createRange) {\n                        range = document.selection.createRange();\n                        begin = 0 - range.duplicate().moveStart(\"character\", -input.inputmask._valueGet().length);\n                        end = begin + range.text.length;\n                    }\n                    return {\n                        begin: notranslate ? begin : translatePosition(begin),\n                        end: notranslate ? end : translatePosition(end)\n                    };\n                }\n            }\n            function determineLastRequiredPosition(returnDefinition) {\n                var buffer = getMaskTemplate(true, getLastValidPosition(), true, true), bl = buffer.length, pos, lvp = getLastValidPosition(), positions = {}, lvTest = getMaskSet().validPositions[lvp], ndxIntlzr = lvTest !== undefined ? lvTest.locator.slice() : undefined, testPos;\n                for (pos = lvp + 1; pos < buffer.length; pos++) {\n                    testPos = getTestTemplate(pos, ndxIntlzr, pos - 1);\n                    ndxIntlzr = testPos.locator.slice();\n                    positions[pos] = $.extend(true, {}, testPos);\n                }\n                var lvTestAlt = lvTest && lvTest.alternation !== undefined ? lvTest.locator[lvTest.alternation] : undefined;\n                for (pos = bl - 1; pos > lvp; pos--) {\n                    testPos = positions[pos];\n                    if ((testPos.match.optionality || testPos.match.optionalQuantifier && testPos.match.newBlockMarker || lvTestAlt && (lvTestAlt !== positions[pos].locator[lvTest.alternation] && testPos.match.fn != null || testPos.match.fn === null && testPos.locator[lvTest.alternation] && checkAlternationMatch(testPos.locator[lvTest.alternation].toString().split(\",\"), lvTestAlt.toString().split(\",\")) && getTests(pos)[0].def !== \"\")) && buffer[pos] === getPlaceholder(pos, testPos.match)) {\n                        bl--;\n                    } else break;\n                }\n                return returnDefinition ? {\n                    l: bl,\n                    def: positions[bl] ? positions[bl].match : undefined\n                } : bl;\n            }\n            function clearOptionalTail(buffer) {\n                buffer.length = 0;\n                var template = getMaskTemplate(true, 0, true, undefined, true), lmnt, validPos;\n                while (lmnt = template.shift(), lmnt !== undefined) {\n                    buffer.push(lmnt);\n                }\n                return buffer;\n            }\n            function isComplete(buffer) {\n                if ($.isFunction(opts.isComplete)) return opts.isComplete(buffer, opts);\n                if (opts.repeat === \"*\") return undefined;\n                var complete = false, lrp = determineLastRequiredPosition(true), aml = seekPrevious(lrp.l);\n                if (lrp.def === undefined || lrp.def.newBlockMarker || lrp.def.optionality || lrp.def.optionalQuantifier) {\n                    complete = true;\n                    for (var i = 0; i <= aml; i++) {\n                        var test = getTestTemplate(i).match;\n                        if (test.fn !== null && getMaskSet().validPositions[i] === undefined && test.optionality !== true && test.optionalQuantifier !== true || test.fn === null && buffer[i] !== getPlaceholder(i, test)) {\n                            complete = false;\n                            break;\n                        }\n                    }\n                }\n                return complete;\n            }\n            function handleRemove(input, k, pos, strict, fromIsValid) {\n                if (opts.numericInput || isRTL) {\n                    if (k === Inputmask.keyCode.BACKSPACE) {\n                        k = Inputmask.keyCode.DELETE;\n                    } else if (k === Inputmask.keyCode.DELETE) {\n                        k = Inputmask.keyCode.BACKSPACE;\n                    }\n                    if (isRTL) {\n                        var pend = pos.end;\n                        pos.end = pos.begin;\n                        pos.begin = pend;\n                    }\n                }\n                if (k === Inputmask.keyCode.BACKSPACE && pos.end - pos.begin < 1) {\n                    pos.begin = seekPrevious(pos.begin);\n                    if (getMaskSet().validPositions[pos.begin] !== undefined && getMaskSet().validPositions[pos.begin].input === opts.groupSeparator) {\n                        pos.begin--;\n                    }\n                } else if (k === Inputmask.keyCode.DELETE && pos.begin === pos.end) {\n                    pos.end = isMask(pos.end, true) && getMaskSet().validPositions[pos.end] && getMaskSet().validPositions[pos.end].input !== opts.radixPoint ? pos.end + 1 : seekNext(pos.end) + 1;\n                    if (getMaskSet().validPositions[pos.begin] !== undefined && getMaskSet().validPositions[pos.begin].input === opts.groupSeparator) {\n                        pos.end++;\n                    }\n                }\n                revalidateMask(pos);\n                if (strict !== true && opts.keepStatic !== false || opts.regex !== null) {\n                    var result = alternate(true);\n                    if (result) {\n                        var newPos = result.caret !== undefined ? result.caret : result.pos ? seekNext(result.pos.begin ? result.pos.begin : result.pos) : getLastValidPosition(-1, true);\n                        if (k !== Inputmask.keyCode.DELETE || pos.begin > newPos) {\n                            pos.begin == newPos;\n                        }\n                    }\n                }\n                var lvp = getLastValidPosition(pos.begin, true);\n                if (lvp < pos.begin || pos.begin === -1) {\n                    getMaskSet().p = seekNext(lvp);\n                } else if (strict !== true) {\n                    getMaskSet().p = pos.begin;\n                    if (fromIsValid !== true) {\n                        while (getMaskSet().p < lvp && getMaskSet().validPositions[getMaskSet().p] === undefined) {\n                            getMaskSet().p++;\n                        }\n                    }\n                }\n            }\n            function initializeColorMask(input) {\n                var computedStyle = (input.ownerDocument.defaultView || window).getComputedStyle(input, null);\n                function findCaretPos(clientx) {\n                    var e = document.createElement(\"span\"), caretPos;\n                    for (var style in computedStyle) {\n                        if (isNaN(style) && style.indexOf(\"font\") !== -1) {\n                            e.style[style] = computedStyle[style];\n                        }\n                    }\n                    e.style.textTransform = computedStyle.textTransform;\n                    e.style.letterSpacing = computedStyle.letterSpacing;\n                    e.style.position = \"absolute\";\n                    e.style.height = \"auto\";\n                    e.style.width = \"auto\";\n                    e.style.visibility = \"hidden\";\n                    e.style.whiteSpace = \"nowrap\";\n                    document.body.appendChild(e);\n                    var inputText = input.inputmask._valueGet(), previousWidth = 0, itl;\n                    for (caretPos = 0, itl = inputText.length; caretPos <= itl; caretPos++) {\n                        e.innerHTML += inputText.charAt(caretPos) || \"_\";\n                        if (e.offsetWidth >= clientx) {\n                            var offset1 = clientx - previousWidth;\n                            var offset2 = e.offsetWidth - clientx;\n                            e.innerHTML = inputText.charAt(caretPos);\n                            offset1 -= e.offsetWidth / 3;\n                            caretPos = offset1 < offset2 ? caretPos - 1 : caretPos;\n                            break;\n                        }\n                        previousWidth = e.offsetWidth;\n                    }\n                    document.body.removeChild(e);\n                    return caretPos;\n                }\n                var template = document.createElement(\"div\");\n                template.style.width = computedStyle.width;\n                template.style.textAlign = computedStyle.textAlign;\n                colorMask = document.createElement(\"div\");\n                input.inputmask.colorMask = colorMask;\n                colorMask.className = \"im-colormask\";\n                input.parentNode.insertBefore(colorMask, input);\n                input.parentNode.removeChild(input);\n                colorMask.appendChild(input);\n                colorMask.appendChild(template);\n                input.style.left = template.offsetLeft + \"px\";\n                $(colorMask).on(\"mouseleave\", function(e) {\n                    return EventHandlers.mouseleaveEvent.call(input, [ e ]);\n                });\n                $(colorMask).on(\"mouseenter\", function(e) {\n                    return EventHandlers.mouseenterEvent.call(input, [ e ]);\n                });\n                $(colorMask).on(\"click\", function(e) {\n                    caret(input, findCaretPos(e.clientX));\n                    return EventHandlers.clickEvent.call(input, [ e ]);\n                });\n            }\n            function renderColorMask(input, caretPos, clear) {\n                var maskTemplate = [], isStatic = false, test, testPos, ndxIntlzr, pos = 0;\n                function setEntry(entry) {\n                    if (entry === undefined) entry = \"\";\n                    if (!isStatic && (test.fn === null || testPos.input === undefined)) {\n                        isStatic = true;\n                        maskTemplate.push(\"<span class='im-static'>\" + entry);\n                    } else if (isStatic && (test.fn !== null && testPos.input !== undefined || test.def === \"\")) {\n                        isStatic = false;\n                        var mtl = maskTemplate.length;\n                        maskTemplate[mtl - 1] = maskTemplate[mtl - 1] + \"</span>\";\n                        maskTemplate.push(entry);\n                    } else maskTemplate.push(entry);\n                }\n                function setCaret() {\n                    if (document.activeElement === input) {\n                        maskTemplate.splice(caretPos.begin, 0, caretPos.begin === caretPos.end || caretPos.end > getMaskSet().maskLength ? '<mark class=\"im-caret\" style=\"border-right-width: 1px;border-right-style: solid;\">' : '<mark class=\"im-caret-select\">');\n                        maskTemplate.splice(caretPos.end + 1, 0, \"</mark>\");\n                    }\n                }\n                if (colorMask !== undefined) {\n                    var buffer = getBuffer();\n                    if (caretPos === undefined) {\n                        caretPos = caret(input);\n                    } else if (caretPos.begin === undefined) {\n                        caretPos = {\n                            begin: caretPos,\n                            end: caretPos\n                        };\n                    }\n                    if (clear !== true) {\n                        var lvp = getLastValidPosition();\n                        do {\n                            if (getMaskSet().validPositions[pos]) {\n                                testPos = getMaskSet().validPositions[pos];\n                                test = testPos.match;\n                                ndxIntlzr = testPos.locator.slice();\n                                setEntry(buffer[pos]);\n                            } else {\n                                testPos = getTestTemplate(pos, ndxIntlzr, pos - 1);\n                                test = testPos.match;\n                                ndxIntlzr = testPos.locator.slice();\n                                if (opts.jitMasking === false || pos < lvp || typeof opts.jitMasking === \"number\" && isFinite(opts.jitMasking) && opts.jitMasking > pos) {\n                                    setEntry(getPlaceholder(pos, test));\n                                } else isStatic = false;\n                            }\n                            pos++;\n                        } while ((maxLength === undefined || pos < maxLength) && (test.fn !== null || test.def !== \"\") || lvp > pos || isStatic);\n                        if (isStatic) setEntry();\n                        setCaret();\n                    }\n                    var template = colorMask.getElementsByTagName(\"div\")[0];\n                    template.innerHTML = maskTemplate.join(\"\");\n                    input.inputmask.positionColorMask(input, template);\n                }\n            }\n            function mask(elem) {\n                function isElementTypeSupported(input, opts) {\n                    function patchValueProperty(npt) {\n                        var valueGet;\n                        var valueSet;\n                        function patchValhook(type) {\n                            if ($.valHooks && ($.valHooks[type] === undefined || $.valHooks[type].inputmaskpatch !== true)) {\n                                var valhookGet = $.valHooks[type] && $.valHooks[type].get ? $.valHooks[type].get : function(elem) {\n                                    return elem.value;\n                                };\n                                var valhookSet = $.valHooks[type] && $.valHooks[type].set ? $.valHooks[type].set : function(elem, value) {\n                                    elem.value = value;\n                                    return elem;\n                                };\n                                $.valHooks[type] = {\n                                    get: function get(elem) {\n                                        if (elem.inputmask) {\n                                            if (elem.inputmask.opts.autoUnmask) {\n                                                return elem.inputmask.unmaskedvalue();\n                                            } else {\n                                                var result = valhookGet(elem);\n                                                return getLastValidPosition(undefined, undefined, elem.inputmask.maskset.validPositions) !== -1 || opts.nullable !== true ? result : \"\";\n                                            }\n                                        } else return valhookGet(elem);\n                                    },\n                                    set: function set(elem, value) {\n                                        var $elem = $(elem), result;\n                                        result = valhookSet(elem, value);\n                                        if (elem.inputmask) {\n                                            $elem.trigger(\"setvalue\", [ value ]);\n                                        }\n                                        return result;\n                                    },\n                                    inputmaskpatch: true\n                                };\n                            }\n                        }\n                        function getter() {\n                            if (this.inputmask) {\n                                return this.inputmask.opts.autoUnmask ? this.inputmask.unmaskedvalue() : getLastValidPosition() !== -1 || opts.nullable !== true ? document.activeElement === this && opts.clearMaskOnLostFocus ? (isRTL ? clearOptionalTail(getBuffer().slice()).reverse() : clearOptionalTail(getBuffer().slice())).join(\"\") : valueGet.call(this) : \"\";\n                            } else return valueGet.call(this);\n                        }\n                        function setter(value) {\n                            valueSet.call(this, value);\n                            if (this.inputmask) {\n                                $(this).trigger(\"setvalue\", [ value ]);\n                            }\n                        }\n                        function installNativeValueSetFallback(npt) {\n                            EventRuler.on(npt, \"mouseenter\", function(event) {\n                                var $input = $(this), input = this, value = input.inputmask._valueGet();\n                                if (value !== getBuffer().join(\"\")) {\n                                    $input.trigger(\"setvalue\");\n                                }\n                            });\n                        }\n                        if (!npt.inputmask.__valueGet) {\n                            if (opts.noValuePatching !== true) {\n                                if (Object.getOwnPropertyDescriptor) {\n                                    if (typeof Object.getPrototypeOf !== \"function\") {\n                                        Object.getPrototypeOf = _typeof(\"test\".__proto__) === \"object\" ? function(object) {\n                                            return object.__proto__;\n                                        } : function(object) {\n                                            return object.constructor.prototype;\n                                        };\n                                    }\n                                    var valueProperty = Object.getPrototypeOf ? Object.getOwnPropertyDescriptor(Object.getPrototypeOf(npt), \"value\") : undefined;\n                                    if (valueProperty && valueProperty.get && valueProperty.set) {\n                                        valueGet = valueProperty.get;\n                                        valueSet = valueProperty.set;\n                                        Object.defineProperty(npt, \"value\", {\n                                            get: getter,\n                                            set: setter,\n                                            configurable: true\n                                        });\n                                    } else if (npt.tagName !== \"INPUT\") {\n                                        valueGet = function valueGet() {\n                                            return this.textContent;\n                                        };\n                                        valueSet = function valueSet(value) {\n                                            this.textContent = value;\n                                        };\n                                        Object.defineProperty(npt, \"value\", {\n                                            get: getter,\n                                            set: setter,\n                                            configurable: true\n                                        });\n                                    }\n                                } else if (document.__lookupGetter__ && npt.__lookupGetter__(\"value\")) {\n                                    valueGet = npt.__lookupGetter__(\"value\");\n                                    valueSet = npt.__lookupSetter__(\"value\");\n                                    npt.__defineGetter__(\"value\", getter);\n                                    npt.__defineSetter__(\"value\", setter);\n                                }\n                                npt.inputmask.__valueGet = valueGet;\n                                npt.inputmask.__valueSet = valueSet;\n                            }\n                            npt.inputmask._valueGet = function(overruleRTL) {\n                                return isRTL && overruleRTL !== true ? valueGet.call(this.el).split(\"\").reverse().join(\"\") : valueGet.call(this.el);\n                            };\n                            npt.inputmask._valueSet = function(value, overruleRTL) {\n                                valueSet.call(this.el, value === null || value === undefined ? \"\" : overruleRTL !== true && isRTL ? value.split(\"\").reverse().join(\"\") : value);\n                            };\n                            if (valueGet === undefined) {\n                                valueGet = function valueGet() {\n                                    return this.value;\n                                };\n                                valueSet = function valueSet(value) {\n                                    this.value = value;\n                                };\n                                patchValhook(npt.type);\n                                installNativeValueSetFallback(npt);\n                            }\n                        }\n                    }\n                    var elementType = input.getAttribute(\"type\");\n                    var isSupported = input.tagName === \"INPUT\" && $.inArray(elementType, opts.supportsInputType) !== -1 || input.isContentEditable || input.tagName === \"TEXTAREA\";\n                    if (!isSupported) {\n                        if (input.tagName === \"INPUT\") {\n                            var el = document.createElement(\"input\");\n                            el.setAttribute(\"type\", elementType);\n                            isSupported = el.type === \"text\";\n                            el = null;\n                        } else isSupported = \"partial\";\n                    }\n                    if (isSupported !== false) {\n                        patchValueProperty(input);\n                    } else input.inputmask = undefined;\n                    return isSupported;\n                }\n                EventRuler.off(elem);\n                var isSupported = isElementTypeSupported(elem, opts);\n                if (isSupported !== false) {\n                    el = elem;\n                    $el = $(el);\n                    originalPlaceholder = el.placeholder;\n                    maxLength = el !== undefined ? el.maxLength : undefined;\n                    if (maxLength === -1) maxLength = undefined;\n                    if (opts.colorMask === true) {\n                        initializeColorMask(el);\n                    }\n                    if (mobile) {\n                        if (\"inputMode\" in el) {\n                            el.inputmode = opts.inputmode;\n                            el.setAttribute(\"inputmode\", opts.inputmode);\n                        }\n                        if (opts.disablePredictiveText === true) {\n                            if (\"autocorrect\" in el) {\n                                el.autocorrect = false;\n                            } else {\n                                if (opts.colorMask !== true) {\n                                    initializeColorMask(el);\n                                }\n                                el.type = \"password\";\n                            }\n                        }\n                    }\n                    if (isSupported === true) {\n                        el.setAttribute(\"im-insert\", opts.insertMode);\n                        EventRuler.on(el, \"submit\", EventHandlers.submitEvent);\n                        EventRuler.on(el, \"reset\", EventHandlers.resetEvent);\n                        EventRuler.on(el, \"blur\", EventHandlers.blurEvent);\n                        EventRuler.on(el, \"focus\", EventHandlers.focusEvent);\n                        if (opts.colorMask !== true) {\n                            EventRuler.on(el, \"click\", EventHandlers.clickEvent);\n                            EventRuler.on(el, \"mouseleave\", EventHandlers.mouseleaveEvent);\n                            EventRuler.on(el, \"mouseenter\", EventHandlers.mouseenterEvent);\n                        }\n                        EventRuler.on(el, \"paste\", EventHandlers.pasteEvent);\n                        EventRuler.on(el, \"cut\", EventHandlers.cutEvent);\n                        EventRuler.on(el, \"complete\", opts.oncomplete);\n                        EventRuler.on(el, \"incomplete\", opts.onincomplete);\n                        EventRuler.on(el, \"cleared\", opts.oncleared);\n                        if (!mobile && opts.inputEventOnly !== true) {\n                            EventRuler.on(el, \"keydown\", EventHandlers.keydownEvent);\n                            EventRuler.on(el, \"keypress\", EventHandlers.keypressEvent);\n                        } else {\n                            el.removeAttribute(\"maxLength\");\n                        }\n                        EventRuler.on(el, \"input\", EventHandlers.inputFallBackEvent);\n                        EventRuler.on(el, \"beforeinput\", EventHandlers.beforeInputEvent);\n                    }\n                    EventRuler.on(el, \"setvalue\", EventHandlers.setValueEvent);\n                    undoValue = getBufferTemplate().join(\"\");\n                    if (el.inputmask._valueGet(true) !== \"\" || opts.clearMaskOnLostFocus === false || document.activeElement === el) {\n                        var initialValue = $.isFunction(opts.onBeforeMask) ? opts.onBeforeMask.call(inputmask, el.inputmask._valueGet(true), opts) || el.inputmask._valueGet(true) : el.inputmask._valueGet(true);\n                        if (initialValue !== \"\") checkVal(el, true, false, initialValue.split(\"\"));\n                        var buffer = getBuffer().slice();\n                        undoValue = buffer.join(\"\");\n                        if (isComplete(buffer) === false) {\n                            if (opts.clearIncomplete) {\n                                resetMaskSet();\n                            }\n                        }\n                        if (opts.clearMaskOnLostFocus && document.activeElement !== el) {\n                            if (getLastValidPosition() === -1) {\n                                buffer = [];\n                            } else {\n                                clearOptionalTail(buffer);\n                            }\n                        }\n                        if (opts.clearMaskOnLostFocus === false || opts.showMaskOnFocus && document.activeElement === el || el.inputmask._valueGet(true) !== \"\") writeBuffer(el, buffer);\n                        if (document.activeElement === el) {\n                            caret(el, seekNext(getLastValidPosition()));\n                        }\n                    }\n                }\n            }\n            var valueBuffer;\n            if (actionObj !== undefined) {\n                switch (actionObj.action) {\n                  case \"isComplete\":\n                    el = actionObj.el;\n                    return isComplete(getBuffer());\n\n                  case \"unmaskedvalue\":\n                    if (el === undefined || actionObj.value !== undefined) {\n                        valueBuffer = actionObj.value;\n                        valueBuffer = ($.isFunction(opts.onBeforeMask) ? opts.onBeforeMask.call(inputmask, valueBuffer, opts) || valueBuffer : valueBuffer).split(\"\");\n                        checkVal.call(this, undefined, false, false, valueBuffer);\n                        if ($.isFunction(opts.onBeforeWrite)) opts.onBeforeWrite.call(inputmask, undefined, getBuffer(), 0, opts);\n                    }\n                    return unmaskedvalue(el);\n\n                  case \"mask\":\n                    mask(el);\n                    break;\n\n                  case \"format\":\n                    valueBuffer = ($.isFunction(opts.onBeforeMask) ? opts.onBeforeMask.call(inputmask, actionObj.value, opts) || actionObj.value : actionObj.value).split(\"\");\n                    checkVal.call(this, undefined, true, false, valueBuffer);\n                    if (actionObj.metadata) {\n                        return {\n                            value: isRTL ? getBuffer().slice().reverse().join(\"\") : getBuffer().join(\"\"),\n                            metadata: maskScope.call(this, {\n                                action: \"getmetadata\"\n                            }, maskset, opts)\n                        };\n                    }\n                    return isRTL ? getBuffer().slice().reverse().join(\"\") : getBuffer().join(\"\");\n\n                  case \"isValid\":\n                    if (actionObj.value) {\n                        valueBuffer = actionObj.value.split(\"\");\n                        checkVal.call(this, undefined, true, true, valueBuffer);\n                    } else {\n                        actionObj.value = getBuffer().join(\"\");\n                    }\n                    var buffer = getBuffer();\n                    var rl = determineLastRequiredPosition(), lmib = buffer.length - 1;\n                    for (;lmib > rl; lmib--) {\n                        if (isMask(lmib)) break;\n                    }\n                    buffer.splice(rl, lmib + 1 - rl);\n                    return isComplete(buffer) && actionObj.value === getBuffer().join(\"\");\n\n                  case \"getemptymask\":\n                    return getBufferTemplate().join(\"\");\n\n                  case \"remove\":\n                    if (el && el.inputmask) {\n                        $.data(el, \"_inputmask_opts\", null);\n                        $el = $(el);\n                        el.inputmask._valueSet(opts.autoUnmask ? unmaskedvalue(el) : el.inputmask._valueGet(true));\n                        EventRuler.off(el);\n                        if (el.inputmask.colorMask) {\n                            colorMask = el.inputmask.colorMask;\n                            colorMask.removeChild(el);\n                            colorMask.parentNode.insertBefore(el, colorMask);\n                            colorMask.parentNode.removeChild(colorMask);\n                        }\n                        var valueProperty;\n                        if (Object.getOwnPropertyDescriptor && Object.getPrototypeOf) {\n                            valueProperty = Object.getOwnPropertyDescriptor(Object.getPrototypeOf(el), \"value\");\n                            if (valueProperty) {\n                                if (el.inputmask.__valueGet) {\n                                    Object.defineProperty(el, \"value\", {\n                                        get: el.inputmask.__valueGet,\n                                        set: el.inputmask.__valueSet,\n                                        configurable: true\n                                    });\n                                }\n                            }\n                        } else if (document.__lookupGetter__ && el.__lookupGetter__(\"value\")) {\n                            if (el.inputmask.__valueGet) {\n                                el.__defineGetter__(\"value\", el.inputmask.__valueGet);\n                                el.__defineSetter__(\"value\", el.inputmask.__valueSet);\n                            }\n                        }\n                        el.inputmask = undefined;\n                    }\n                    return el;\n                    break;\n\n                  case \"getmetadata\":\n                    if ($.isArray(maskset.metadata)) {\n                        var maskTarget = getMaskTemplate(true, 0, false).join(\"\");\n                        $.each(maskset.metadata, function(ndx, mtdt) {\n                            if (mtdt.mask === maskTarget) {\n                                maskTarget = mtdt;\n                                return false;\n                            }\n                        });\n                        return maskTarget;\n                    }\n                    return maskset.metadata;\n                }\n            }\n        }\n        return Inputmask;\n    });\n}, function(module, exports, __webpack_require__) {\n    \"use strict\";\n    var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;\n    var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function(obj) {\n        return typeof obj;\n    } : function(obj) {\n        return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n    (function(factory) {\n        if (true) {\n            !(__WEBPACK_AMD_DEFINE_ARRAY__ = [ __webpack_require__(4) ], __WEBPACK_AMD_DEFINE_FACTORY__ = factory, \n            __WEBPACK_AMD_DEFINE_RESULT__ = typeof __WEBPACK_AMD_DEFINE_FACTORY__ === \"function\" ? __WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__) : __WEBPACK_AMD_DEFINE_FACTORY__, \n            __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n        } else {}\n    })(function($) {\n        return $;\n    });\n}, function(module, exports) {\n    module.exports = jQuery;\n}, function(module, exports, __webpack_require__) {\n    \"use strict\";\n    var __WEBPACK_AMD_DEFINE_RESULT__;\n    var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function(obj) {\n        return typeof obj;\n    } : function(obj) {\n        return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n    if (true) !(__WEBPACK_AMD_DEFINE_RESULT__ = function() {\n        return typeof window !== \"undefined\" ? window : new (eval(\"require('jsdom').JSDOM\"))(\"\").window;\n    }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); else {}\n}, function(module, exports, __webpack_require__) {\n    \"use strict\";\n    var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;\n    var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function(obj) {\n        return typeof obj;\n    } : function(obj) {\n        return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n    (function(factory) {\n        if (true) {\n            !(__WEBPACK_AMD_DEFINE_ARRAY__ = [ __webpack_require__(2) ], __WEBPACK_AMD_DEFINE_FACTORY__ = factory, \n            __WEBPACK_AMD_DEFINE_RESULT__ = typeof __WEBPACK_AMD_DEFINE_FACTORY__ === \"function\" ? __WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__) : __WEBPACK_AMD_DEFINE_FACTORY__, \n            __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n        } else {}\n    })(function(Inputmask) {\n        var $ = Inputmask.dependencyLib;\n        var formatCode = {\n            d: [ \"[1-9]|[12][0-9]|3[01]\", Date.prototype.setDate, \"day\", Date.prototype.getDate ],\n            dd: [ \"0[1-9]|[12][0-9]|3[01]\", Date.prototype.setDate, \"day\", function() {\n                return pad(Date.prototype.getDate.call(this), 2);\n            } ],\n            ddd: [ \"\" ],\n            dddd: [ \"\" ],\n            m: [ \"[1-9]|1[012]\", Date.prototype.setMonth, \"month\", function() {\n                return Date.prototype.getMonth.call(this) + 1;\n            } ],\n            mm: [ \"0[1-9]|1[012]\", Date.prototype.setMonth, \"month\", function() {\n                return pad(Date.prototype.getMonth.call(this) + 1, 2);\n            } ],\n            mmm: [ \"\" ],\n            mmmm: [ \"\" ],\n            yy: [ \"[0-9]{2}\", Date.prototype.setFullYear, \"year\", function() {\n                return pad(Date.prototype.getFullYear.call(this), 2);\n            } ],\n            yyyy: [ \"[0-9]{4}\", Date.prototype.setFullYear, \"year\", function() {\n                return pad(Date.prototype.getFullYear.call(this), 4);\n            } ],\n            h: [ \"[1-9]|1[0-2]\", Date.prototype.setHours, \"hours\", Date.prototype.getHours ],\n            hh: [ \"0[1-9]|1[0-2]\", Date.prototype.setHours, \"hours\", function() {\n                return pad(Date.prototype.getHours.call(this), 2);\n            } ],\n            hhh: [ \"[0-9]+\", Date.prototype.setHours, \"hours\", Date.prototype.getHours ],\n            H: [ \"1?[0-9]|2[0-3]\", Date.prototype.setHours, \"hours\", Date.prototype.getHours ],\n            HH: [ \"0[0-9]|1[0-9]|2[0-3]\", Date.prototype.setHours, \"hours\", function() {\n                return pad(Date.prototype.getHours.call(this), 2);\n            } ],\n            HHH: [ \"[0-9]+\", Date.prototype.setHours, \"hours\", Date.prototype.getHours ],\n            M: [ \"[1-5]?[0-9]\", Date.prototype.setMinutes, \"minutes\", Date.prototype.getMinutes ],\n            MM: [ \"0[0-9]|1[0-9]|2[0-9]|3[0-9]|4[0-9]|5[0-9]\", Date.prototype.setMinutes, \"minutes\", function() {\n                return pad(Date.prototype.getMinutes.call(this), 2);\n            } ],\n            ss: [ \"[0-5][0-9]\", Date.prototype.setSeconds, \"seconds\", function() {\n                return pad(Date.prototype.getSeconds.call(this), 2);\n            } ],\n            l: [ \"[0-9]{3}\", Date.prototype.setMilliseconds, \"milliseconds\", function() {\n                return pad(Date.prototype.getMilliseconds.call(this), 3);\n            } ],\n            L: [ \"[0-9]{2}\", Date.prototype.setMilliseconds, \"milliseconds\", function() {\n                return pad(Date.prototype.getMilliseconds.call(this), 2);\n            } ],\n            t: [ \"[ap]\" ],\n            tt: [ \"[ap]m\" ],\n            T: [ \"[AP]\" ],\n            TT: [ \"[AP]M\" ],\n            Z: [ \"\" ],\n            o: [ \"\" ],\n            S: [ \"\" ]\n        }, formatAlias = {\n            isoDate: \"yyyy-mm-dd\",\n            isoTime: \"HH:MM:ss\",\n            isoDateTime: \"yyyy-mm-dd'T'HH:MM:ss\",\n            isoUtcDateTime: \"UTC:yyyy-mm-dd'T'HH:MM:ss'Z'\"\n        };\n        function getTokenizer(opts) {\n            if (!opts.tokenizer) {\n                var tokens = [];\n                for (var ndx in formatCode) {\n                    if (tokens.indexOf(ndx[0]) === -1) tokens.push(ndx[0]);\n                }\n                opts.tokenizer = \"(\" + tokens.join(\"+|\") + \")+?|.\";\n                opts.tokenizer = new RegExp(opts.tokenizer, \"g\");\n            }\n            return opts.tokenizer;\n        }\n        function isValidDate(dateParts, currentResult) {\n            return !isFinite(dateParts.rawday) || dateParts.day == \"29\" && !isFinite(dateParts.rawyear) || new Date(dateParts.date.getFullYear(), isFinite(dateParts.rawmonth) ? dateParts.month : dateParts.date.getMonth() + 1, 0).getDate() >= dateParts.day ? currentResult : false;\n        }\n        function isDateInRange(dateParts, opts) {\n            var result = true;\n            if (opts.min) {\n                if (dateParts[\"rawyear\"]) {\n                    var rawYear = dateParts[\"rawyear\"].replace(/[^0-9]/g, \"\"), minYear = opts.min.year.substr(0, rawYear.length);\n                    result = minYear <= rawYear;\n                }\n                if (dateParts[\"year\"] === dateParts[\"rawyear\"]) {\n                    if (opts.min.date.getTime() === opts.min.date.getTime()) {\n                        result = opts.min.date.getTime() <= dateParts.date.getTime();\n                    }\n                }\n            }\n            if (result && opts.max && opts.max.date.getTime() === opts.max.date.getTime()) {\n                result = opts.max.date.getTime() >= dateParts.date.getTime();\n            }\n            return result;\n        }\n        function parse(format, dateObjValue, opts, raw) {\n            var mask = \"\", match;\n            while (match = getTokenizer(opts).exec(format)) {\n                if (dateObjValue === undefined) {\n                    if (formatCode[match[0]]) {\n                        mask += \"(\" + formatCode[match[0]][0] + \")\";\n                    } else {\n                        switch (match[0]) {\n                          case \"[\":\n                            mask += \"(\";\n                            break;\n\n                          case \"]\":\n                            mask += \")?\";\n                            break;\n\n                          default:\n                            mask += Inputmask.escapeRegex(match[0]);\n                        }\n                    }\n                } else {\n                    if (formatCode[match[0]]) {\n                        if (raw !== true && formatCode[match[0]][3]) {\n                            var getFn = formatCode[match[0]][3];\n                            mask += getFn.call(dateObjValue.date);\n                        } else if (formatCode[match[0]][2]) mask += dateObjValue[\"raw\" + formatCode[match[0]][2]]; else mask += match[0];\n                    } else mask += match[0];\n                }\n            }\n            return mask;\n        }\n        function pad(val, len) {\n            val = String(val);\n            len = len || 2;\n            while (val.length < len) {\n                val = \"0\" + val;\n            }\n            return val;\n        }\n        function analyseMask(maskString, format, opts) {\n            var dateObj = {\n                date: new Date(1, 0, 1)\n            }, targetProp, mask = maskString, match, dateOperation, targetValidator;\n            function extendProperty(value) {\n                var correctedValue = value.replace(/[^0-9]/g, \"0\");\n                if (correctedValue != value) {\n                    var enteredPart = value.replace(/[^0-9]/g, \"\"), min = (opts.min && opts.min[targetProp] || value).toString(), max = (opts.max && opts.max[targetProp] || value).toString();\n                    correctedValue = enteredPart + (enteredPart < min.slice(0, enteredPart.length) ? min.slice(enteredPart.length) : enteredPart > max.slice(0, enteredPart.length) ? max.slice(enteredPart.length) : correctedValue.toString().slice(enteredPart.length));\n                }\n                return correctedValue;\n            }\n            function setValue(dateObj, value, opts) {\n                dateObj[targetProp] = extendProperty(value);\n                dateObj[\"raw\" + targetProp] = value;\n                if (dateOperation !== undefined) dateOperation.call(dateObj.date, targetProp == \"month\" ? parseInt(dateObj[targetProp]) - 1 : dateObj[targetProp]);\n            }\n            if (typeof mask === \"string\") {\n                while (match = getTokenizer(opts).exec(format)) {\n                    var value = mask.slice(0, match[0].length);\n                    if (formatCode.hasOwnProperty(match[0])) {\n                        targetValidator = formatCode[match[0]][0];\n                        targetProp = formatCode[match[0]][2];\n                        dateOperation = formatCode[match[0]][1];\n                        setValue(dateObj, value, opts);\n                    }\n                    mask = mask.slice(value.length);\n                }\n                return dateObj;\n            } else if (mask && (typeof mask === \"undefined\" ? \"undefined\" : _typeof(mask)) === \"object\" && mask.hasOwnProperty(\"date\")) {\n                return mask;\n            }\n            return undefined;\n        }\n        Inputmask.extendAliases({\n            datetime: {\n                mask: function mask(opts) {\n                    formatCode.S = opts.i18n.ordinalSuffix.join(\"|\");\n                    opts.inputFormat = formatAlias[opts.inputFormat] || opts.inputFormat;\n                    opts.displayFormat = formatAlias[opts.displayFormat] || opts.displayFormat || opts.inputFormat;\n                    opts.outputFormat = formatAlias[opts.outputFormat] || opts.outputFormat || opts.inputFormat;\n                    opts.placeholder = opts.placeholder !== \"\" ? opts.placeholder : opts.inputFormat.replace(/[\\[\\]]/, \"\");\n                    opts.regex = parse(opts.inputFormat, undefined, opts);\n                    return null;\n                },\n                placeholder: \"\",\n                inputFormat: \"isoDateTime\",\n                displayFormat: undefined,\n                outputFormat: undefined,\n                min: null,\n                max: null,\n                i18n: {\n                    dayNames: [ \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\" ],\n                    monthNames: [ \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\", \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" ],\n                    ordinalSuffix: [ \"st\", \"nd\", \"rd\", \"th\" ]\n                },\n                postValidation: function postValidation(buffer, pos, currentResult, opts) {\n                    opts.min = analyseMask(opts.min, opts.inputFormat, opts);\n                    opts.max = analyseMask(opts.max, opts.inputFormat, opts);\n                    var result = currentResult, dateParts = analyseMask(buffer.join(\"\"), opts.inputFormat, opts);\n                    if (result && dateParts.date.getTime() === dateParts.date.getTime()) {\n                        result = isValidDate(dateParts, result);\n                        result = result && isDateInRange(dateParts, opts);\n                    }\n                    if (pos && result && currentResult.pos !== pos) {\n                        return {\n                            buffer: parse(opts.inputFormat, dateParts, opts),\n                            refreshFromBuffer: {\n                                start: pos,\n                                end: currentResult.pos\n                            }\n                        };\n                    }\n                    return result;\n                },\n                onKeyDown: function onKeyDown(e, buffer, caretPos, opts) {\n                    var input = this;\n                    if (e.ctrlKey && e.keyCode === Inputmask.keyCode.RIGHT) {\n                        var today = new Date(), match, date = \"\";\n                        while (match = getTokenizer(opts).exec(opts.inputFormat)) {\n                            if (match[0].charAt(0) === \"d\") {\n                                date += pad(today.getDate(), match[0].length);\n                            } else if (match[0].charAt(0) === \"m\") {\n                                date += pad(today.getMonth() + 1, match[0].length);\n                            } else if (match[0] === \"yyyy\") {\n                                date += today.getFullYear().toString();\n                            } else if (match[0].charAt(0) === \"y\") {\n                                date += pad(today.getYear(), match[0].length);\n                            }\n                        }\n                        input.inputmask._valueSet(date);\n                        $(input).trigger(\"setvalue\");\n                    }\n                },\n                onUnMask: function onUnMask(maskedValue, unmaskedValue, opts) {\n                    return parse(opts.outputFormat, analyseMask(maskedValue, opts.inputFormat, opts), opts, true);\n                },\n                casing: function casing(elem, test, pos, validPositions) {\n                    if (test.nativeDef.indexOf(\"[ap]\") == 0) return elem.toLowerCase();\n                    if (test.nativeDef.indexOf(\"[AP]\") == 0) return elem.toUpperCase();\n                    return elem;\n                },\n                insertMode: false,\n                shiftPositions: false\n            }\n        });\n        return Inputmask;\n    });\n}, function(module, exports, __webpack_require__) {\n    \"use strict\";\n    var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;\n    var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function(obj) {\n        return typeof obj;\n    } : function(obj) {\n        return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n    (function(factory) {\n        if (true) {\n            !(__WEBPACK_AMD_DEFINE_ARRAY__ = [ __webpack_require__(2) ], __WEBPACK_AMD_DEFINE_FACTORY__ = factory, \n            __WEBPACK_AMD_DEFINE_RESULT__ = typeof __WEBPACK_AMD_DEFINE_FACTORY__ === \"function\" ? __WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__) : __WEBPACK_AMD_DEFINE_FACTORY__, \n            __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n        } else {}\n    })(function(Inputmask) {\n        var $ = Inputmask.dependencyLib;\n        function autoEscape(txt, opts) {\n            var escapedTxt = \"\";\n            for (var i = 0; i < txt.length; i++) {\n                if (Inputmask.prototype.definitions[txt.charAt(i)] || opts.definitions[txt.charAt(i)] || opts.optionalmarker.start === txt.charAt(i) || opts.optionalmarker.end === txt.charAt(i) || opts.quantifiermarker.start === txt.charAt(i) || opts.quantifiermarker.end === txt.charAt(i) || opts.groupmarker.start === txt.charAt(i) || opts.groupmarker.end === txt.charAt(i) || opts.alternatormarker === txt.charAt(i)) {\n                    escapedTxt += \"\\\\\" + txt.charAt(i);\n                } else escapedTxt += txt.charAt(i);\n            }\n            return escapedTxt;\n        }\n        function alignDigits(buffer, digits, opts) {\n            if (digits > 0) {\n                var radixPosition = $.inArray(opts.radixPoint, buffer);\n                if (radixPosition === -1) {\n                    buffer.push(opts.radixPoint);\n                    radixPosition = buffer.length - 1;\n                }\n                for (var i = 1; i <= digits; i++) {\n                    buffer[radixPosition + i] = buffer[radixPosition + i] || \"0\";\n                }\n            }\n            return buffer;\n        }\n        Inputmask.extendAliases({\n            numeric: {\n                mask: function mask(opts) {\n                    if (opts.repeat !== 0 && isNaN(opts.integerDigits)) {\n                        opts.integerDigits = opts.repeat;\n                    }\n                    opts.repeat = 0;\n                    if (opts.groupSeparator === opts.radixPoint && opts.digits && opts.digits !== \"0\") {\n                        if (opts.radixPoint === \".\") {\n                            opts.groupSeparator = \",\";\n                        } else if (opts.radixPoint === \",\") {\n                            opts.groupSeparator = \".\";\n                        } else opts.groupSeparator = \"\";\n                    }\n                    if (opts.groupSeparator === \" \") {\n                        opts.skipOptionalPartCharacter = undefined;\n                    }\n                    opts.autoGroup = opts.autoGroup && opts.groupSeparator !== \"\";\n                    if (opts.autoGroup) {\n                        if (typeof opts.groupSize == \"string\" && isFinite(opts.groupSize)) opts.groupSize = parseInt(opts.groupSize);\n                        if (isFinite(opts.integerDigits)) {\n                            var seps = Math.floor(opts.integerDigits / opts.groupSize);\n                            var mod = opts.integerDigits % opts.groupSize;\n                            opts.integerDigits = parseInt(opts.integerDigits) + (mod === 0 ? seps - 1 : seps);\n                            if (opts.integerDigits < 1) {\n                                opts.integerDigits = \"*\";\n                            }\n                        }\n                    }\n                    if (opts.placeholder.length > 1) {\n                        opts.placeholder = opts.placeholder.charAt(0);\n                    }\n                    if (opts.positionCaretOnClick === \"radixFocus\" && opts.placeholder === \"\" && opts.integerOptional === false) {\n                        opts.positionCaretOnClick = \"lvp\";\n                    }\n                    opts.definitions[\";\"] = opts.definitions[\"~\"];\n                    opts.definitions[\";\"].definitionSymbol = \"~\";\n                    if (opts.numericInput === true) {\n                        opts.positionCaretOnClick = opts.positionCaretOnClick === \"radixFocus\" ? \"lvp\" : opts.positionCaretOnClick;\n                        opts.digitsOptional = false;\n                        if (isNaN(opts.digits)) opts.digits = 2;\n                        opts.decimalProtect = false;\n                    }\n                    var mask = \"[+]\";\n                    mask += autoEscape(opts.prefix, opts);\n                    if (opts.integerOptional === true) {\n                        mask += \"~{1,\" + opts.integerDigits + \"}\";\n                    } else mask += \"~{\" + opts.integerDigits + \"}\";\n                    if (opts.digits !== undefined) {\n                        var radixDef = opts.decimalProtect ? \":\" : opts.radixPoint;\n                        var dq = opts.digits.toString().split(\",\");\n                        if (isFinite(dq[0]) && dq[1] && isFinite(dq[1])) {\n                            mask += radixDef + \";{\" + opts.digits + \"}\";\n                        } else if (isNaN(opts.digits) || parseInt(opts.digits) > 0) {\n                            if (opts.digitsOptional) {\n                                mask += \"[\" + radixDef + \";{1,\" + opts.digits + \"}]\";\n                            } else mask += radixDef + \";{\" + opts.digits + \"}\";\n                        }\n                    }\n                    mask += autoEscape(opts.suffix, opts);\n                    mask += \"[-]\";\n                    opts.greedy = false;\n                    return mask;\n                },\n                placeholder: \"\",\n                greedy: false,\n                digits: \"*\",\n                digitsOptional: true,\n                enforceDigitsOnBlur: false,\n                radixPoint: \".\",\n                positionCaretOnClick: \"radixFocus\",\n                groupSize: 3,\n                groupSeparator: \"\",\n                autoGroup: false,\n                allowMinus: true,\n                negationSymbol: {\n                    front: \"-\",\n                    back: \"\"\n                },\n                integerDigits: \"+\",\n                integerOptional: true,\n                prefix: \"\",\n                suffix: \"\",\n                rightAlign: true,\n                decimalProtect: true,\n                min: null,\n                max: null,\n                step: 1,\n                insertMode: true,\n                autoUnmask: false,\n                unmaskAsNumber: false,\n                inputType: \"text\",\n                inputmode: \"numeric\",\n                preValidation: function preValidation(buffer, pos, c, isSelection, opts, maskset) {\n                    if (c === \"-\" || c === opts.negationSymbol.front) {\n                        if (opts.allowMinus !== true) return false;\n                        opts.isNegative = opts.isNegative === undefined ? true : !opts.isNegative;\n                        if (buffer.join(\"\") === \"\") return true;\n                        return {\n                            caret: maskset.validPositions[pos] ? pos : undefined,\n                            dopost: true\n                        };\n                    }\n                    if (isSelection === false && c === opts.radixPoint && opts.digits !== undefined && (isNaN(opts.digits) || parseInt(opts.digits) > 0)) {\n                        var radixPos = $.inArray(opts.radixPoint, buffer);\n                        if (radixPos !== -1 && maskset.validPositions[radixPos] !== undefined) {\n                            if (opts.numericInput === true) {\n                                return pos === radixPos;\n                            }\n                            return {\n                                caret: radixPos + 1\n                            };\n                        }\n                    }\n                    return true;\n                },\n                postValidation: function postValidation(buffer, pos, currentResult, opts) {\n                    function buildPostMask(buffer, opts) {\n                        var postMask = \"\";\n                        postMask += \"(\" + opts.groupSeparator + \"*{\" + opts.groupSize + \"}){*}\";\n                        if (opts.radixPoint !== \"\") {\n                            var radixSplit = buffer.join(\"\").split(opts.radixPoint);\n                            if (radixSplit[1]) {\n                                postMask += opts.radixPoint + \"*{\" + radixSplit[1].match(/^\\d*\\??\\d*/)[0].length + \"}\";\n                            }\n                        }\n                        return postMask;\n                    }\n                    var suffix = opts.suffix.split(\"\"), prefix = opts.prefix.split(\"\");\n                    if (currentResult.pos === undefined && currentResult.caret !== undefined && currentResult.dopost !== true) return currentResult;\n                    var caretPos = currentResult.caret !== undefined ? currentResult.caret : currentResult.pos;\n                    var maskedValue = buffer.slice();\n                    if (opts.numericInput) {\n                        caretPos = maskedValue.length - caretPos - 1;\n                        maskedValue = maskedValue.reverse();\n                    }\n                    var charAtPos = maskedValue[caretPos];\n                    if (charAtPos === opts.groupSeparator) {\n                        caretPos += 1;\n                        charAtPos = maskedValue[caretPos];\n                    }\n                    if (caretPos === maskedValue.length - opts.suffix.length - 1 && charAtPos === opts.radixPoint) return currentResult;\n                    if (charAtPos !== undefined) {\n                        if (charAtPos !== opts.radixPoint && charAtPos !== opts.negationSymbol.front && charAtPos !== opts.negationSymbol.back) {\n                            maskedValue[caretPos] = \"?\";\n                            if (opts.prefix.length > 0 && caretPos >= (opts.isNegative === false ? 1 : 0) && caretPos < opts.prefix.length - 1 + (opts.isNegative === false ? 1 : 0)) {\n                                prefix[caretPos - (opts.isNegative === false ? 1 : 0)] = \"?\";\n                            } else if (opts.suffix.length > 0 && caretPos >= maskedValue.length - opts.suffix.length - (opts.isNegative === false ? 1 : 0)) {\n                                suffix[caretPos - (maskedValue.length - opts.suffix.length - (opts.isNegative === false ? 1 : 0))] = \"?\";\n                            }\n                        }\n                    }\n                    prefix = prefix.join(\"\");\n                    suffix = suffix.join(\"\");\n                    var processValue = maskedValue.join(\"\").replace(prefix, \"\");\n                    processValue = processValue.replace(suffix, \"\");\n                    processValue = processValue.replace(new RegExp(Inputmask.escapeRegex(opts.groupSeparator), \"g\"), \"\");\n                    processValue = processValue.replace(new RegExp(\"[-\" + Inputmask.escapeRegex(opts.negationSymbol.front) + \"]\", \"g\"), \"\");\n                    processValue = processValue.replace(new RegExp(Inputmask.escapeRegex(opts.negationSymbol.back) + \"$\"), \"\");\n                    if (isNaN(opts.placeholder)) {\n                        processValue = processValue.replace(new RegExp(Inputmask.escapeRegex(opts.placeholder), \"g\"), \"\");\n                    }\n                    if (processValue.length > 1 && processValue.indexOf(opts.radixPoint) !== 1) {\n                        if (charAtPos === \"0\") {\n                            processValue = processValue.replace(/^\\?/g, \"\");\n                        }\n                        processValue = processValue.replace(/^0/g, \"\");\n                    }\n                    if (processValue.charAt(0) === opts.radixPoint && opts.radixPoint !== \"\" && opts.numericInput !== true) {\n                        processValue = \"0\" + processValue;\n                    }\n                    if (processValue !== \"\") {\n                        processValue = processValue.split(\"\");\n                        if ((!opts.digitsOptional || opts.enforceDigitsOnBlur && currentResult.event === \"blur\") && isFinite(opts.digits)) {\n                            var radixPosition = $.inArray(opts.radixPoint, processValue);\n                            var rpb = $.inArray(opts.radixPoint, maskedValue);\n                            if (radixPosition === -1) {\n                                processValue.push(opts.radixPoint);\n                                radixPosition = processValue.length - 1;\n                            }\n                            for (var i = 1; i <= opts.digits; i++) {\n                                if ((!opts.digitsOptional || opts.enforceDigitsOnBlur && currentResult.event === \"blur\") && (processValue[radixPosition + i] === undefined || processValue[radixPosition + i] === opts.placeholder.charAt(0))) {\n                                    processValue[radixPosition + i] = currentResult.placeholder || opts.placeholder.charAt(0);\n                                } else if (rpb !== -1 && maskedValue[rpb + i] !== undefined) {\n                                    processValue[radixPosition + i] = processValue[radixPosition + i] || maskedValue[rpb + i];\n                                }\n                            }\n                        }\n                        if (opts.autoGroup === true && opts.groupSeparator !== \"\" && (charAtPos !== opts.radixPoint || currentResult.pos !== undefined || currentResult.dopost)) {\n                            var addRadix = processValue[processValue.length - 1] === opts.radixPoint && currentResult.c === opts.radixPoint;\n                            processValue = Inputmask(buildPostMask(processValue, opts), {\n                                numericInput: true,\n                                jitMasking: true,\n                                definitions: {\n                                    \"*\": {\n                                        validator: \"[0-9?]\",\n                                        cardinality: 1\n                                    }\n                                }\n                            }).format(processValue.join(\"\"));\n                            if (addRadix) processValue += opts.radixPoint;\n                            if (processValue.charAt(0) === opts.groupSeparator) {\n                                processValue.substr(1);\n                            }\n                        } else processValue = processValue.join(\"\");\n                    }\n                    if (opts.isNegative && currentResult.event === \"blur\") {\n                        opts.isNegative = processValue !== \"0\";\n                    }\n                    processValue = prefix + processValue;\n                    processValue += suffix;\n                    if (opts.isNegative) {\n                        processValue = opts.negationSymbol.front + processValue;\n                        processValue += opts.negationSymbol.back;\n                    }\n                    processValue = processValue.split(\"\");\n                    if (charAtPos !== undefined) {\n                        if (charAtPos !== opts.radixPoint && charAtPos !== opts.negationSymbol.front && charAtPos !== opts.negationSymbol.back) {\n                            caretPos = $.inArray(\"?\", processValue);\n                            if (caretPos > -1) {\n                                processValue[caretPos] = charAtPos;\n                            } else caretPos = currentResult.caret || 0;\n                        } else if (charAtPos === opts.radixPoint || charAtPos === opts.negationSymbol.front || charAtPos === opts.negationSymbol.back) {\n                            var newCaretPos = $.inArray(charAtPos, processValue);\n                            if (newCaretPos !== -1) caretPos = newCaretPos;\n                        }\n                    }\n                    if (opts.numericInput) {\n                        caretPos = processValue.length - caretPos - 1;\n                        processValue = processValue.reverse();\n                    }\n                    var rslt = {\n                        caret: (charAtPos === undefined || currentResult.pos !== undefined) && caretPos !== undefined ? caretPos + (opts.numericInput ? -1 : 1) : caretPos,\n                        buffer: processValue,\n                        refreshFromBuffer: currentResult.dopost || buffer.join(\"\") !== processValue.join(\"\")\n                    };\n                    return rslt.refreshFromBuffer ? rslt : currentResult;\n                },\n                onBeforeWrite: function onBeforeWrite(e, buffer, caretPos, opts) {\n                    function parseMinMaxOptions(opts) {\n                        if (opts.parseMinMaxOptions === undefined) {\n                            if (opts.min !== null) {\n                                opts.min = opts.min.toString().replace(new RegExp(Inputmask.escapeRegex(opts.groupSeparator), \"g\"), \"\");\n                                if (opts.radixPoint === \",\") opts.min = opts.min.replace(opts.radixPoint, \".\");\n                                opts.min = isFinite(opts.min) ? parseFloat(opts.min) : NaN;\n                                if (isNaN(opts.min)) opts.min = Number.MIN_VALUE;\n                            }\n                            if (opts.max !== null) {\n                                opts.max = opts.max.toString().replace(new RegExp(Inputmask.escapeRegex(opts.groupSeparator), \"g\"), \"\");\n                                if (opts.radixPoint === \",\") opts.max = opts.max.replace(opts.radixPoint, \".\");\n                                opts.max = isFinite(opts.max) ? parseFloat(opts.max) : NaN;\n                                if (isNaN(opts.max)) opts.max = Number.MAX_VALUE;\n                            }\n                            opts.parseMinMaxOptions = \"done\";\n                        }\n                    }\n                    if (e) {\n                        switch (e.type) {\n                          case \"keydown\":\n                            return opts.postValidation(buffer, caretPos, {\n                                caret: caretPos,\n                                dopost: true\n                            }, opts);\n\n                          case \"blur\":\n                          case \"checkval\":\n                            var unmasked;\n                            parseMinMaxOptions(opts);\n                            if (opts.min !== null || opts.max !== null) {\n                                unmasked = opts.onUnMask(buffer.join(\"\"), undefined, $.extend({}, opts, {\n                                    unmaskAsNumber: true\n                                }));\n                                if (opts.min !== null && unmasked < opts.min) {\n                                    opts.isNegative = opts.min < 0;\n                                    return opts.postValidation(opts.min.toString().replace(\".\", opts.radixPoint).split(\"\"), caretPos, {\n                                        caret: caretPos,\n                                        dopost: true,\n                                        placeholder: \"0\"\n                                    }, opts);\n                                } else if (opts.max !== null && unmasked > opts.max) {\n                                    opts.isNegative = opts.max < 0;\n                                    return opts.postValidation(opts.max.toString().replace(\".\", opts.radixPoint).split(\"\"), caretPos, {\n                                        caret: caretPos,\n                                        dopost: true,\n                                        placeholder: \"0\"\n                                    }, opts);\n                                }\n                            }\n                            return opts.postValidation(buffer, caretPos, {\n                                caret: caretPos,\n                                placeholder: \"0\",\n                                event: \"blur\"\n                            }, opts);\n\n                          case \"_checkval\":\n                            return {\n                                caret: caretPos\n                            };\n\n                          default:\n                            break;\n                        }\n                    }\n                },\n                regex: {\n                    integerPart: function integerPart(opts, emptyCheck) {\n                        return emptyCheck ? new RegExp(\"[\" + Inputmask.escapeRegex(opts.negationSymbol.front) + \"+]?\") : new RegExp(\"[\" + Inputmask.escapeRegex(opts.negationSymbol.front) + \"+]?\\\\d+\");\n                    },\n                    integerNPart: function integerNPart(opts) {\n                        return new RegExp(\"[\\\\d\" + Inputmask.escapeRegex(opts.groupSeparator) + Inputmask.escapeRegex(opts.placeholder.charAt(0)) + \"]+\");\n                    }\n                },\n                definitions: {\n                    \"~\": {\n                        validator: function validator(chrs, maskset, pos, strict, opts, isSelection) {\n                            var isValid, l;\n                            if (chrs === \"k\" || chrs === \"m\") {\n                                isValid = {\n                                    insert: [],\n                                    c: 0\n                                };\n                                for (var i = 0, l = chrs === \"k\" ? 2 : 5; i < l; i++) {\n                                    isValid.insert.push({\n                                        pos: pos + i,\n                                        c: 0\n                                    });\n                                }\n                                isValid.pos = pos + l;\n                                return isValid;\n                            }\n                            isValid = strict ? new RegExp(\"[0-9\" + Inputmask.escapeRegex(opts.groupSeparator) + \"]\").test(chrs) : new RegExp(\"[0-9]\").test(chrs);\n                            if (isValid === true) {\n                                if (opts.numericInput !== true && maskset.validPositions[pos] !== undefined && maskset.validPositions[pos].match.def === \"~\" && !isSelection) {\n                                    var processValue = maskset.buffer.join(\"\");\n                                    processValue = processValue.replace(new RegExp(\"[-\" + Inputmask.escapeRegex(opts.negationSymbol.front) + \"]\", \"g\"), \"\");\n                                    processValue = processValue.replace(new RegExp(Inputmask.escapeRegex(opts.negationSymbol.back) + \"$\"), \"\");\n                                    var pvRadixSplit = processValue.split(opts.radixPoint);\n                                    if (pvRadixSplit.length > 1) {\n                                        pvRadixSplit[1] = pvRadixSplit[1].replace(/0/g, opts.placeholder.charAt(0));\n                                    }\n                                    if (pvRadixSplit[0] === \"0\") {\n                                        pvRadixSplit[0] = pvRadixSplit[0].replace(/0/g, opts.placeholder.charAt(0));\n                                    }\n                                    processValue = pvRadixSplit[0] + opts.radixPoint + pvRadixSplit[1] || \"\";\n                                    var bufferTemplate = maskset._buffer.join(\"\");\n                                    if (processValue === opts.radixPoint) {\n                                        processValue = bufferTemplate;\n                                    }\n                                    while (processValue.match(Inputmask.escapeRegex(bufferTemplate) + \"$\") === null) {\n                                        bufferTemplate = bufferTemplate.slice(1);\n                                    }\n                                    processValue = processValue.replace(bufferTemplate, \"\");\n                                    processValue = processValue.split(\"\");\n                                    if (processValue[pos] === undefined) {\n                                        isValid = {\n                                            pos: pos,\n                                            remove: pos\n                                        };\n                                    } else {\n                                        isValid = {\n                                            pos: pos\n                                        };\n                                    }\n                                }\n                            } else if (!strict && chrs === opts.radixPoint && maskset.validPositions[pos - 1] === undefined) {\n                                isValid = {\n                                    insert: {\n                                        pos: pos,\n                                        c: 0\n                                    },\n                                    pos: pos + 1\n                                };\n                            }\n                            return isValid;\n                        },\n                        cardinality: 1\n                    },\n                    \"+\": {\n                        validator: function validator(chrs, maskset, pos, strict, opts) {\n                            return opts.allowMinus && (chrs === \"-\" || chrs === opts.negationSymbol.front);\n                        },\n                        cardinality: 1,\n                        placeholder: \"\"\n                    },\n                    \"-\": {\n                        validator: function validator(chrs, maskset, pos, strict, opts) {\n                            return opts.allowMinus && chrs === opts.negationSymbol.back;\n                        },\n                        cardinality: 1,\n                        placeholder: \"\"\n                    },\n                    \":\": {\n                        validator: function validator(chrs, maskset, pos, strict, opts) {\n                            var radix = \"[\" + Inputmask.escapeRegex(opts.radixPoint) + \"]\";\n                            var isValid = new RegExp(radix).test(chrs);\n                            if (isValid && maskset.validPositions[pos] && maskset.validPositions[pos].match.placeholder === opts.radixPoint) {\n                                isValid = {\n                                    caret: pos + 1\n                                };\n                            }\n                            return isValid;\n                        },\n                        cardinality: 1,\n                        placeholder: function placeholder(opts) {\n                            return opts.radixPoint;\n                        }\n                    }\n                },\n                onUnMask: function onUnMask(maskedValue, unmaskedValue, opts) {\n                    if (unmaskedValue === \"\" && opts.nullable === true) {\n                        return unmaskedValue;\n                    }\n                    var processValue = maskedValue.replace(opts.prefix, \"\");\n                    processValue = processValue.replace(opts.suffix, \"\");\n                    processValue = processValue.replace(new RegExp(Inputmask.escapeRegex(opts.groupSeparator), \"g\"), \"\");\n                    if (opts.placeholder.charAt(0) !== \"\") {\n                        processValue = processValue.replace(new RegExp(opts.placeholder.charAt(0), \"g\"), \"0\");\n                    }\n                    if (opts.unmaskAsNumber) {\n                        if (opts.radixPoint !== \"\" && processValue.indexOf(opts.radixPoint) !== -1) processValue = processValue.replace(Inputmask.escapeRegex.call(this, opts.radixPoint), \".\");\n                        processValue = processValue.replace(new RegExp(\"^\" + Inputmask.escapeRegex(opts.negationSymbol.front)), \"-\");\n                        processValue = processValue.replace(new RegExp(Inputmask.escapeRegex(opts.negationSymbol.back) + \"$\"), \"\");\n                        return Number(processValue);\n                    }\n                    return processValue;\n                },\n                isComplete: function isComplete(buffer, opts) {\n                    var maskedValue = (opts.numericInput ? buffer.slice().reverse() : buffer).join(\"\");\n                    maskedValue = maskedValue.replace(new RegExp(\"^\" + Inputmask.escapeRegex(opts.negationSymbol.front)), \"-\");\n                    maskedValue = maskedValue.replace(new RegExp(Inputmask.escapeRegex(opts.negationSymbol.back) + \"$\"), \"\");\n                    maskedValue = maskedValue.replace(opts.prefix, \"\");\n                    maskedValue = maskedValue.replace(opts.suffix, \"\");\n                    maskedValue = maskedValue.replace(new RegExp(Inputmask.escapeRegex(opts.groupSeparator) + \"([0-9]{3})\", \"g\"), \"$1\");\n                    if (opts.radixPoint === \",\") maskedValue = maskedValue.replace(Inputmask.escapeRegex(opts.radixPoint), \".\");\n                    return isFinite(maskedValue);\n                },\n                onBeforeMask: function onBeforeMask(initialValue, opts) {\n                    opts.isNegative = undefined;\n                    var radixPoint = opts.radixPoint || \",\";\n                    if ((typeof initialValue == \"number\" || opts.inputType === \"number\") && radixPoint !== \"\") {\n                        initialValue = initialValue.toString().replace(\".\", radixPoint);\n                    }\n                    var valueParts = initialValue.split(radixPoint), integerPart = valueParts[0].replace(/[^\\-0-9]/g, \"\"), decimalPart = valueParts.length > 1 ? valueParts[1].replace(/[^0-9]/g, \"\") : \"\";\n                    initialValue = integerPart + (decimalPart !== \"\" ? radixPoint + decimalPart : decimalPart);\n                    var digits = 0;\n                    if (radixPoint !== \"\") {\n                        digits = decimalPart.length;\n                        if (decimalPart !== \"\") {\n                            var digitsFactor = Math.pow(10, digits || 1);\n                            if (isFinite(opts.digits)) {\n                                digits = parseInt(opts.digits);\n                                digitsFactor = Math.pow(10, digits);\n                            }\n                            initialValue = initialValue.replace(Inputmask.escapeRegex(radixPoint), \".\");\n                            if (isFinite(initialValue)) initialValue = Math.round(parseFloat(initialValue) * digitsFactor) / digitsFactor;\n                            initialValue = initialValue.toString().replace(\".\", radixPoint);\n                        }\n                    }\n                    if (opts.digits === 0 && initialValue.indexOf(Inputmask.escapeRegex(radixPoint)) !== -1) {\n                        initialValue = initialValue.substring(0, initialValue.indexOf(Inputmask.escapeRegex(radixPoint)));\n                    }\n                    return alignDigits(initialValue.toString().split(\"\"), digits, opts).join(\"\");\n                },\n                onKeyDown: function onKeyDown(e, buffer, caretPos, opts) {\n                    var $input = $(this);\n                    if (e.ctrlKey) {\n                        switch (e.keyCode) {\n                          case Inputmask.keyCode.UP:\n                            $input.val(parseFloat(this.inputmask.unmaskedvalue()) + parseInt(opts.step));\n                            $input.trigger(\"setvalue\");\n                            break;\n\n                          case Inputmask.keyCode.DOWN:\n                            $input.val(parseFloat(this.inputmask.unmaskedvalue()) - parseInt(opts.step));\n                            $input.trigger(\"setvalue\");\n                            break;\n                        }\n                    }\n                }\n            },\n            currency: {\n                prefix: \"$ \",\n                groupSeparator: \",\",\n                alias: \"numeric\",\n                placeholder: \"0\",\n                autoGroup: true,\n                digits: 2,\n                digitsOptional: false,\n                clearMaskOnLostFocus: false\n            },\n            decimal: {\n                alias: \"numeric\"\n            },\n            integer: {\n                alias: \"numeric\",\n                digits: 0,\n                radixPoint: \"\"\n            },\n            percentage: {\n                alias: \"numeric\",\n                digits: 2,\n                digitsOptional: true,\n                radixPoint: \".\",\n                placeholder: \"0\",\n                autoGroup: false,\n                min: 0,\n                max: 100,\n                suffix: \" %\",\n                allowMinus: false\n            }\n        });\n        return Inputmask;\n    });\n}, function(module, exports, __webpack_require__) {\n    \"use strict\";\n    var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;\n    var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function(obj) {\n        return typeof obj;\n    } : function(obj) {\n        return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n    (function(factory) {\n        if (true) {\n            !(__WEBPACK_AMD_DEFINE_ARRAY__ = [ __webpack_require__(4), __webpack_require__(2) ], \n            __WEBPACK_AMD_DEFINE_FACTORY__ = factory, __WEBPACK_AMD_DEFINE_RESULT__ = typeof __WEBPACK_AMD_DEFINE_FACTORY__ === \"function\" ? __WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__) : __WEBPACK_AMD_DEFINE_FACTORY__, \n            __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n        } else {}\n    })(function($, Inputmask) {\n        if ($.fn.inputmask === undefined) {\n            $.fn.inputmask = function(fn, options) {\n                var nptmask, input = this[0];\n                if (options === undefined) options = {};\n                if (typeof fn === \"string\") {\n                    switch (fn) {\n                      case \"unmaskedvalue\":\n                        return input && input.inputmask ? input.inputmask.unmaskedvalue() : $(input).val();\n\n                      case \"remove\":\n                        return this.each(function() {\n                            if (this.inputmask) this.inputmask.remove();\n                        });\n\n                      case \"getemptymask\":\n                        return input && input.inputmask ? input.inputmask.getemptymask() : \"\";\n\n                      case \"hasMaskedValue\":\n                        return input && input.inputmask ? input.inputmask.hasMaskedValue() : false;\n\n                      case \"isComplete\":\n                        return input && input.inputmask ? input.inputmask.isComplete() : true;\n\n                      case \"getmetadata\":\n                        return input && input.inputmask ? input.inputmask.getmetadata() : undefined;\n\n                      case \"setvalue\":\n                        Inputmask.setValue(input, options);\n                        break;\n\n                      case \"option\":\n                        if (typeof options === \"string\") {\n                            if (input && input.inputmask !== undefined) {\n                                return input.inputmask.option(options);\n                            }\n                        } else {\n                            return this.each(function() {\n                                if (this.inputmask !== undefined) {\n                                    return this.inputmask.option(options);\n                                }\n                            });\n                        }\n                        break;\n\n                      default:\n                        options.alias = fn;\n                        nptmask = new Inputmask(options);\n                        return this.each(function() {\n                            nptmask.mask(this);\n                        });\n                    }\n                } else if (Array.isArray(fn)) {\n                    options.alias = fn;\n                    nptmask = new Inputmask(options);\n                    return this.each(function() {\n                        nptmask.mask(this);\n                    });\n                } else if ((typeof fn === \"undefined\" ? \"undefined\" : _typeof(fn)) == \"object\") {\n                    nptmask = new Inputmask(fn);\n                    if (fn.mask === undefined && fn.alias === undefined) {\n                        return this.each(function() {\n                            if (this.inputmask !== undefined) {\n                                return this.inputmask.option(fn);\n                            } else nptmask.mask(this);\n                        });\n                    } else {\n                        return this.each(function() {\n                            nptmask.mask(this);\n                        });\n                    }\n                } else if (fn === undefined) {\n                    return this.each(function() {\n                        nptmask = new Inputmask(options);\n                        nptmask.mask(this);\n                    });\n                }\n            };\n        }\n        return $.fn.inputmask;\n    });\n} ]);"],"file":"jquery.inputmask.bundle-min.js"}