{"version":3,"names":[],"mappings":"","sources":["jquery.scrolltabs.js"],"sourcesContent":["/**\n * SCROLL TABS\n *\n *  JQuery Plugin to manage scrollable tabs. See the 'defaultOptions' data structure for available options for configuration. The plugin is configured jointly via\n *  these Javascript options and CSS classes to style how it is displayed. Some of the CSS is set here in the javascript so that users will have minimal\n *  configuration to make the tabs themselves work, and should only have to do configuration on how they want it styled. \n *\n * Known Limitations:\n *  IE6 problems, it does not properly apply scrolling and therefore is always the 'full width.' Additionally, the multiple-class CSS styling does not work\n *  properly in IE6. We can work around this in the future by apply distinct class stylings that represent all the combinations. \n *\n * Version:   2.0 \n * Author:    Josh Reed\n */\n(function($) {\n  $.fn.scrollTabs = function(opts){\n    var initialize = function(state){\n      opts = $.extend({}, $.fn.scrollTabs.defaultOptions, opts);\n\n      if($(this).prop('tagName').toLowerCase() === 'ul'){\n        this.itemTag = 'li';\n      } else {\n        this.itemTag = 'span';\n      }\n      \n      $(this).addClass('scroll_tabs_container');\n      if($(this).css('position') === null || $(this).css('position') === 'static'){\n        $(this).css('position','relative');\n      }\n      \n      $(this.itemTag, this).last().addClass('scroll_tab_last');\n      $(this.itemTag, this).first().addClass('scroll_tab_first');\n      \n      $(this).html(\"<div class='scroll_tab_left_button'></div><div class='scroll_tab_inner'><span class='scroll_tab_left_finisher'>&nbsp;</span>\"+$(this).html()+\"<span class='scroll_tab_right_finisher'>&nbsp;</span></div><div class='scroll_tab_right_button'></div>\");\n      \n      $('.scroll_tab_inner > span.scroll_tab_left_finisher', this).css({\n        'display': 'none'\n      });\n      \n      $('.scroll_tab_inner > span.scroll_tab_right_finisher', this).css({\n        'display': 'none'\n      });\n      \n      \n      var _this = this;\n      \n      $('.scroll_tab_inner', this).css({\n        'margin': '0px',\n        'overflow': 'hidden',\n        'white-space': 'nowrap',\n        '-ms-text-overflow': 'clip',\n        'text-overflow': 'clip',\n        'font-size': '0px',\n        'position': 'absolute',\n        'top': '0px',\n        'left': opts.left_arrow_size + 'px',\n        'right': opts.right_arrow_size + 'px'\n      });\n\n      // If mousewheel function not present, don't utilize it\n      if($.isFunction($.fn.mousewheel)){\n        $('.scroll_tab_inner', this).mousewheel(function(event, delta){\n          // Only do mousewheel scrolling if scrolling is necessary\n          if($('.scroll_tab_right_button', _this).css('display') !== 'none'){\n            this.scrollLeft -= (delta * 30);\n            state.scrollPos = this.scrollLeft;\n            event.preventDefault();\n          }\n        });\n      }\n      \n      // Set initial scroll position\n      $('.scroll_tab_inner', _this).animate({scrollLeft: state.scrollPos + 'px'}, 0);\n      \n      $('.scroll_tab_left_button', this).css({\n        'position': 'absolute',\n        'left': '0px',\n        'top': '0px',\n        'width': opts.left_arrow_size + 'px',\n        'cursor': 'pointer'\n      });\n      \n      $('.scroll_tab_right_button', this).css({\n        'position': 'absolute',\n        'right': '0px',\n        'top': '0px',\n        'width': opts.right_arrow_size + 'px',\n        'cursor': 'pointer'\n      });\n      \n      $('.scroll_tab_inner > '+_this.itemTag, _this).css({\n        'display': '-moz-inline-stack',\n        'display': 'inline-block',\n        'zoom':1,\n        '*display': 'inline',\n        '_height': '40px',\n        '-webkit-user-select': 'none',\n        '-khtml-user-select': 'none',\n        '-moz-user-select': 'none',\n        '-ms-user-select': 'none',\n        '-o-user-select': 'none',\n        'user-select': 'none'\n      });\n      \n      \n      var size_checking = function(){\n        var panel_width = $('.scroll_tab_inner', _this).outerWidth();\n        \n        if($('.scroll_tab_inner', _this)[0].scrollWidth > panel_width){\n          $('.scroll_tab_right_button',_this).show();\n          $('.scroll_tab_left_button',_this).show();\n          $('.scroll_tab_inner',_this).css({left: opts.left_arrow_size + 'px', right: opts.right_arrow_size + 'px'});\n          $('.scroll_tab_left_finisher',_this).css('display','none');\n          $('.scroll_tab_right_finisher',_this).css('display','none');\n          \n          if($('.scroll_tab_inner', _this)[0].scrollWidth - panel_width == $('.scroll_tab_inner', _this).scrollLeft()){\n            $('.scroll_tab_right_button', _this).addClass('scroll_arrow_disabled').addClass('scroll_tab_right_button_disabled');\n          } else {\n            $('.scroll_tab_right_button', _this).removeClass('scroll_arrow_disabled').removeClass('scroll_tab_right_button_disabled');\n          }\n          if ($('.scroll_tab_inner', _this).scrollLeft() == 0) {\n            $('.scroll_tab_left_button', _this).addClass('scroll_arrow_disabled').addClass('scroll_tab_left_button_disabled');\n          } else {\n            $('.scroll_tab_left_button', _this).removeClass('scroll_arrow_disabled').removeClass('scroll_tab_left_button_disabled');\n          }\n        } else {\n          $('.scroll_tab_right_button',_this).hide();\n          $('.scroll_tab_left_button',_this).hide();\n          $('.scroll_tab_inner',_this).css({left: '0px', right: '0px'});\n          \n          if($('.scroll_tab_inner > '+_this.itemTag+':not(.scroll_tab_right_finisher):not(.scroll_tab_left_finisher):visible', _this).size() > 0){\n            $('.scroll_tab_left_finisher',_this).css('display','inline-block');\n            $('.scroll_tab_right_finisher',_this).css('display','inline-block');\n          } \n        }\n      };\n      \n      size_checking();\n      \n      state.delay_timer = setInterval(function(){\n        size_checking();\n      }, 500);\n  \n      var press_and_hold_timeout;\n      \n      $('.scroll_tab_right_button', this).mousedown(function(e){\n        e.stopPropagation();\n        var scrollRightFunc = function(){\n          var left = $('.scroll_tab_inner', _this).scrollLeft(); \n          state.scrollPos = Math.min(left + opts.scroll_distance,$('.scroll_tab_inner', _this)[0].scrollWidth - $('.scroll_tab_inner', _this).outerWidth());\n          $('.scroll_tab_inner', _this).animate({scrollLeft: (left + opts.scroll_distance) + 'px'}, opts.scroll_duration);\n        };\n        scrollRightFunc();\n        \n        press_and_hold_timeout = setInterval(function(){\n          scrollRightFunc();\n        }, opts.scroll_duration);\n      }).bind(\"mouseup mouseleave\", function(){\n        clearInterval(press_and_hold_timeout);\n      }).mouseover(function(){\n        $(this).addClass('scroll_arrow_over').addClass('scroll_tab_right_button_over');\n      }).mouseout(function(){\n        $(this).removeClass('scroll_arrow_over').removeClass('scroll_tab_right_button_over');\n      });\n      \n      $('.scroll_tab_left_button', this).mousedown(function(e){\n        e.stopPropagation();\n        var scrollLeftFunc = function(){\n          var left = $('.scroll_tab_inner', _this).scrollLeft(); \n          state.scrollPos = Math.max(left - opts.scroll_distance,0);\n          $('.scroll_tab_inner', _this).animate({scrollLeft: (left - opts.scroll_distance) + 'px'}, opts.scroll_duration);\n        };\n        scrollLeftFunc();\n        \n        press_and_hold_timeout = setInterval(function(){\n          scrollLeftFunc();\n        }, opts.scroll_duration);\n      }).bind(\"mouseup mouseleave\", function(){\n        clearInterval(press_and_hold_timeout);\n      }).mouseover(function(){\n        $(this).addClass('scroll_arrow_over').addClass('scroll_tab_left_button_over');\n      }).mouseout(function(){\n        $(this).removeClass('scroll_arrow_over').removeClass('scroll_tab_left_button_over');\n      });\n      \n      $('.scroll_tab_inner > '+this.itemTag+(this.itemTag !== 'span' ? ', .scroll_tab_inner > span' : ''), this).mouseover(function(){\n        $(this).addClass('scroll_tab_over');\n        if($(this).hasClass('scroll_tab_left_finisher')){\n          $('.scroll_tab_inner > '+_this.itemTag+'.scroll_tab_first', _this).addClass('scroll_tab_over').addClass('scroll_tab_first_over');\n        }\n        if($(this).hasClass('scroll_tab_right_finisher')){\n          $('.scroll_tab_inner > '+_this.itemTag+'.scroll_tab_last', _this).addClass('scroll_tab_over').addClass('scroll_tab_last_over');\n        }\n        if($(this).hasClass('scroll_tab_first') || $('.scroll_tab_inner > '+_this.itemTag+'.scroll_tab_last', _this).hasClass('scroll_tab_first')){\n          $('.scroll_tab_inner > span.scroll_tab_left_finisher', _this).addClass('scroll_tab_over').addClass('scroll_tab_left_finisher_over');\n        }\n        if($(this).hasClass('scroll_tab_last') || $('.scroll_tab_inner > '+_this.itemTag+'.scroll_tab_first', _this).hasClass('scroll_tab_last')){\n          $('.scroll_tab_inner > span.scroll_tab_right_finisher', _this).addClass('scroll_tab_over').addClass('scroll_tab_right_finisher_over');\n        }\n      }).mouseout(function(){\n        $(this).removeClass('scroll_tab_over');\n        if($(this).hasClass('scroll_tab_left_finisher')){\n          $('.scroll_tab_inner > '+_this.itemTag+'.scroll_tab_first', _this).removeClass('scroll_tab_over').removeClass('scroll_tab_first_over');\n        }\n        if($(this).hasClass('scroll_tab_right_finisher')){\n          $('.scroll_tab_inner > '+_this.itemTag+'.scroll_tab_last', _this).removeClass('scroll_tab_over').removeClass('scroll_tab_last_over');\n        }\n        if($(this).hasClass('scroll_tab_first') || $('.scroll_tab_inner > '+_this.itemTag+'.scroll_tab_last', _this).hasClass('scroll_tab_first')){\n          $('.scroll_tab_inner > span.scroll_tab_left_finisher', _this).removeClass('scroll_tab_over').removeClass('scroll_tab_left_finisher_over');\n        }\n        if($(this).hasClass('scroll_tab_last') || $('.scroll_tab_inner > '+_this.itemTag+'.scroll_tab_first', _this).hasClass('scroll_tab_last')){\n          $('.scroll_tab_inner > span.scroll_tab_right_finisher', _this).removeClass('scroll_tab_over').removeClass('scroll_tab_right_finisher_over');\n        }\n      }).click(function(e){\n        e.stopPropagation();\n        $('.tab_selected',_this).removeClass('tab_selected scroll_tab_first_selected scroll_tab_last_selected scroll_tab_left_finisher_selected scroll_tab_right_finisher_selected');\n        $(this).addClass('tab_selected');\n        \n        var context_obj = this;\n        if($(this).hasClass('scroll_tab_left_finisher')){\n          context_obj = $('.scroll_tab_inner > '+_this.itemTag+'.scroll_tab_first', _this).addClass('tab_selected').addClass('scroll_tab_first_selected');\n        }\n        if($(this).hasClass('scroll_tab_right_finisher')){\n          context_obj = $('.scroll_tab_inner > '+_this.itemTag+'.scroll_tab_last', _this).addClass('tab_selected').addClass('scroll_tab_last_selected');\n        }\n        if($(this).hasClass('scroll_tab_first') || $('.scroll_tab_inner > '+_this.itemTag+'.scroll_tab_last', _this).hasClass('scroll_tab_first')){\n          $('.scroll_tab_inner > span.scroll_tab_left_finisher', _this).addClass('tab_selected').addClass('scroll_tab_left_finisher_selected');\n        }\n        if($(this).hasClass('scroll_tab_last') || $('.scroll_tab_inner > '+_this.itemTag+'.scroll_tab_first', _this).hasClass('scroll_tab_last')){\n          $('.scroll_tab_inner > span.scroll_tab_right_finisher', _this).addClass('tab_selected').addClass('scroll_tab_left_finisher_selected');\n        }\n        \n        // \"Slide\" it into view if not fully visible.\n        scroll_selected_into_view.call(_this, state);\n        \n        opts.click_callback.call(context_obj,e);\n      });\n      \n      // Check to set the edges as selected if needed\n      if($('.scroll_tab_inner > '+_this.itemTag+'.scroll_tab_first', _this).hasClass('tab_selected'))\n        $('.scroll_tab_inner > '+_this.itemTag+'.scroll_tab_left_finisher', _this).addClass('tab_selected').addClass('scroll_tab_left_finisher_selected');\n      if($('.scroll_tab_inner > '+_this.itemTag+'.scroll_tab_last', _this).hasClass('tab_selected'))\n        $('.scroll_tab_inner > '+_this.itemTag+'.scroll_tab_right_finisher', _this).addClass('tab_selected').addClass('scroll_tab_right_finisher_selected');\n    };\n    \n    var scroll_selected_into_view = function(state){\n      var _this = this;\n      \n      var selected_item = $('.tab_selected:not(.scroll_tab_right_finisher, .scroll_tab_left_finisher)', _this);\n      \n      var left = $('.scroll_tab_inner', _this).scrollLeft();\n      var scroll_width = $('.scroll_tab_inner', _this).width();\n      if(selected_item && typeof(selected_item) !== 'undefined' && selected_item.position() && typeof(selected_item.position()) !== 'undefined'){\n        if(selected_item.position().left < 0){\n          state.scrollPos = Math.max(left + selected_item.position().left + 1,0);\n          $('.scroll_tab_inner', _this).animate({scrollLeft: (left + selected_item.position().left + 1) + 'px'}, opts.scroll_duration);\n        } else if ((selected_item.position().left + selected_item.outerWidth()) > scroll_width){\n          state.scrollPos = Math.min(left + ((selected_item.position().left + selected_item.outerWidth()) - scroll_width),$('.scroll_tab_inner', _this)[0].scrollWidth - $('.scroll_tab_inner', _this).outerWidth());\n          $('.scroll_tab_inner', _this).animate({scrollLeft: (left + ((selected_item.position().left + selected_item.outerWidth()) - scroll_width)) + 'px'}, opts.scroll_duration);\n        }\n      }\n    };\n    \n    var ret = [];\n    \n    this.each(function(){\n      var backup = $(this).html();\n      \n      var state = {};\n      state.scrollPos = 0;\n      initialize.call(this, state);\n      \n      var context_obj = this;\n      \n      ret.push({\n        domObject: context_obj,\n        state: state,\n        addTab: function(html, position){\n          if(typeof(position) === 'undefined'){\n            position = $('.scroll_tab_inner > '+context_obj.itemTag, context_obj).length - (context_obj.itemTag === 'span' ? 2 : 0);\n          } \n          \n          $('.scroll_tab_inner > '+context_obj.itemTag+'.scroll_tab_last', context_obj).removeClass('scroll_tab_last');\n          $('.scroll_tab_inner > '+context_obj.itemTag+'.scroll_tab_first', context_obj).removeClass('scroll_tab_first');\n          backup = \"\";\n          var count = 0;\n          $('.scroll_tab_inner > '+context_obj.itemTag, context_obj).each(function(){\n            if($(this).hasClass('scroll_tab_left_finisher') || $(this).hasClass('scroll_tab_right_finisher')) return true;\n            if(position == count){\n              backup += html;\n            }\n            backup += $(this).clone().wrap('<div>').parent().html();\n            count++;\n          });\n          \n          if(position >= count)\n            backup += html;\n\n          this.destroy();\n          initialize.call(context_obj, state);\n          this.refreshFirstLast();\n        },\n        removeTabs: function(jquery_selector_str){\n          $('.scroll_tab_left_finisher', context_obj).remove();\n          $('.scroll_tab_right_finisher', context_obj).remove();\n          \n          $(jquery_selector_str, context_obj).remove();\n          \n          $('.scroll_tab_inner > '+context_obj.itemTag+'.scroll_tab_last', context_obj).removeClass('scroll_tab_last');\n          $('.scroll_tab_inner > '+context_obj.itemTag+'.scroll_tab_first', context_obj).removeClass('scroll_tab_first');\n\n          this.refreshState();\n        },\n        destroy: function(){\n          clearInterval(state.delay_timer);\n          $(context_obj).html(backup);\n          $(context_obj).removeClass('scroll_tabs_container');\n        },\n        refreshState: function(){\n          $('.scroll_tab_inner > '+context_obj.itemTag+'.scroll_tab_last', context_obj).removeClass('scroll_tab_last');\n          $('.scroll_tab_inner > '+context_obj.itemTag+'.scroll_tab_first', context_obj).removeClass('scroll_tab_first');\n          backup = $('.scroll_tab_inner',context_obj).html();\n          this.destroy();\n          initialize.call(context_obj, state);\n          this.refreshFirstLast();\n        },\n        clearTabs: function(){\n          backup = \"\";\n          this.destroy();\n          initialize.call(context_obj, state);\n          this.refreshFirstLast();\n        }, \n        refreshFirstLast: function(){\n          var old_last_item = $('.scroll_tab_inner > '+context_obj.itemTag+'.scroll_tab_last', context_obj);\n          var old_first_item = $('.scroll_tab_inner > '+context_obj.itemTag+'.scroll_tab_first', context_obj);\n          \n          old_last_item.removeClass('scroll_tab_last');\n          old_first_item.removeClass('scroll_tab_first');\n          \n          if(old_last_item.hasClass('tab_selected'))\n            $('.scroll_tab_inner > span.scroll_tab_right_finisher', context_obj).removeClass('tab_selected scroll_tab_right_finisher_selected');\n          if(old_first_item.hasClass('tab_selected'))\n            $('.scroll_tab_inner > span.scroll_tab_left_finisher', context_obj).removeClass('tab_selected scroll_tab_left_finisher_selected');\n          \n          if($('.scroll_tab_inner > '+context_obj.itemTag+':not(.scroll_tab_right_finisher):not(.scroll_tab_left_finisher):visible', context_obj).size() > 0){\n            var new_last_item = $('.scroll_tab_inner > '+context_obj.itemTag+':not(.scroll_tab_right_finisher):visible', context_obj).last();\n            var new_first_item = $('.scroll_tab_inner > '+context_obj.itemTag+':not(.scroll_tab_left_finisher):visible', context_obj).first();\n            \n            new_last_item.addClass('scroll_tab_last');\n            new_first_item.addClass('scroll_tab_first');\n            \n            if(new_last_item.hasClass('tab_selected'))\n              $('.scroll_tab_inner > span.scroll_tab_right_finisher', context_obj).addClass('tab_selected').addClass('scroll_tab_right_finisher_selected');\n            if(new_first_item.hasClass('tab_selected'))\n              $('.scroll_tab_inner > span.scroll_tab_left_finisher', context_obj).addClass('tab_selected').addClass('scroll_tab_right_finisher_selected');\n          } else {\n            $('.scroll_tab_inner > span.scroll_tab_right_finisher', context_obj).hide();\n            $('.scroll_tab_inner > span.scroll_tab_left_finisher', context_obj).hide();\n          }\n        },\n        hideTabs: function(domObj){\n          $(domObj, context_obj).css('display','none');\n          this.refreshFirstLast();\n        },\n        showTabs: function(domObj){\n          $(domObj, context_obj).css({\n            'display': '-moz-inline-stack',\n            'display': 'inline-block',\n            '*display': 'inline'\n          });\n          this.refreshFirstLast();\n        },\n        scrollSelectedIntoView:function(){\n          scroll_selected_into_view.call(context_obj, state);\n        }\n      });\n    });\n    \n    if(this.length == 1){\n      return ret[0];\n    } else {\n      return ret;\n    }\n  };\n  \n  $.fn.scrollTabs.defaultOptions = {\n    scroll_distance: 300,\n    scroll_duration: 300,\n    left_arrow_size: 26,\n    right_arrow_size: 26,\n    click_callback: function(e){\n      var val = $(this).attr('rel');\n      if(val){\n        window.location.href = val;\n      }\n    }\n  };\n})(jQuery);\n"],"file":"jquery.scrolltabs.js"}